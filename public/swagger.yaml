swagger: '2.0'
info:
  description: >-
    Документация к API CRM Zelenoe. Основной URL http://crm.zelenoe.ru/. API
    доступно по адресу: http://backend.zelenoe.ru/api. Авторизация происходит по
    логину и пролю, защищённые методы работают при помощи заголовка
    "Authorization: token_value"
  version: 1.0.0
  title: Zelenoe CRM
  termsOfService: ''
  contact:
    email: speed.live@mail.ru
  license:
    name: GNU Public License
    url: 'http://opensource.org/licenses/gpl-license.php'
host: backend.zelenoe.pro
basePath: /api
tags:
  - name: user
    description: Операции над пользователями
  - name: auth
    description: Операции с авторизаций
  - name: group
    description: Операции над группами пользователей
  - name: action
    description: Операции над действиями пользователей
  - name: module
    description: Операции над модулями системы
  - name: log
    description: Операции над записями в логе
  - name: properties
    description: Операции над свойствами
  - name: tasks
    description: Операции над задачами
  - name: tasksGroup
    description: Операции над группами задач
  - name: tasksProjects
    description: Операции над проектами задач
  - name: tasksStatus
    description: Операции над статусами задач
  - name: tasksTime
    description: Операции над временными промежутками выполнения задач
  - name: comments
    description: Операции над комментариями к сущностям
  - name: customers
    description: Операции над контрагентами
  - name: customersDocuments
    description: Операции над документами контрагентов
  - name: customersDocumentsType
    description: Операции над типами документов контрагентов
  - name: customersContacts
    description: Операции над контактами контрагентов
  - name: customersGroup
    description: Операции над группами контрагентов
  - name: deals
    description: Операции над заявками
  - name: dealsStatus
    description: Операции над статусами заявок
  - name: dealsServices
    description: Операции над дополнительными услугами перевозки грузов
  - name: dealsTracking
    description: Операции над записями отслеживания грузов
  - name: dealsTrackingStatus
    description: Операции над статусами записей отслеживания грузов
  - name: dealsExtraSizeSettings
    description: Операции над сеткой настроек негабаритного груза
  - name: freight
    description: Операции над грузами
  - name: freightStatus
    description: Операции над статусами грузов
  - name: stock
    description: Операции над складами
  - name: finance
    description: Операции над финансовыми проводками
  - name: integrations
    description: Операции с сервисами интергации
  - name: cost
    description: Операции с рассчётами цен на перевозки
  - name: zone
    description: Операции с зонами перевозок
  - name: city
    description: Операции с городами перевозок
  - name: discount
    description: Операции со скидками на перевозки
  - name: company
    description: Операции с компаниями - исполнителями
schemes:
  - http
paths:
  /log:
    post:
      tags:
        - log
      summary: Запись в лог
      description: Создание новой записи в логе
      operationId: createLog
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - login
              - group
              - description
            properties:
              login:
                type: string
                example: yazu
              group:
                type: string
                example: redactors
              description:
                type: string
                example: yazu
      security:
        - crm_auth: []
      responses:
        '200':
          description: Лог успешно записан
          schema:
            $ref: '#/definitions/Log'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление логов
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка записи в лог
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - log
      summary: Получение списка логов
      description: >-
        Получение полного (запрос без параметров) или страничного списка логов
        (запрос хотябы с параметром count)
      operationId: getLog
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Фильрация записей
          type: string
      responses:
        '200':
          description: Успешное получение списка логов
          schema:
            $ref: '#/definitions/Log'
          examples:
            Без постраничной навигации:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 16
                  module_id: 5
                  user_id: 4
                  user_ip: 188.244.161.201
                  log_type: user
                  log_action: user_addusers
                  created_at: '2017-08-17 03:30:05'
                  updated_at: '2017-08-17 03:36:05'
                  user:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-07-28 00:59:56'
                  module:
                    id: 5
                    code: user
                    description: User module
                    sort: 100
                    active: 1
                    created_at: '2017-07-31 07:54:04'
                    updated_at: '2017-07-31 07:54:04'
                  action:
                    code: user_addusers
                    name: Добавление пользователей
                    description: Возможность добавлять новых пользователей
                - id: 21
                  module_id: 5
                  user_id: 4
                  user_ip: 188.244.161.201
                  log_type: user
                  log_action: user_addusers
                  created_at: '2017-08-18 00:44:43'
                  updated_at: '2017-08-18 00:44:43'
                  user:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-07-28 00:59:56'
                  module:
                    id: 5
                    code: user
                    description: User module
                    sort: 100
                    active: 1
                    created_at: '2017-07-31 07:54:04'
                    updated_at: '2017-07-31 07:54:04'
                  action:
                    code: user_addusers
                    name: Добавление пользователей
                    description: Возможность добавлять новых пользователей
            С постраничной навигацией:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                total: 2
                per_page: '10'
                current_page: 1
                last_page: 1
                next_page_url: null
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 16
                    module_id: 5
                    user_id: 4
                    user_ip: 188.244.161.201
                    log_type: user
                    log_action: user_addusers
                    created_at: '2017-08-17 03:30:05'
                    updated_at: '2017-08-17 03:36:05'
                    user:
                      id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: 1
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-07-28 00:59:56'
                    module:
                      id: 5
                      code: user
                      description: User module
                      sort: 100
                      active: 1
                      created_at: '2017-07-31 07:54:04'
                      updated_at: '2017-07-31 07:54:04'
                    action:
                      code: user_addusers
                      name: Добавление пользователей
                      description: Возможность добавлять новых пользователей
                  - id: 21
                    module_id: 5
                    user_id: 4
                    user_ip: 188.244.161.201
                    log_type: user
                    log_action: user_addusers
                    created_at: '2017-08-18 00:44:43'
                    updated_at: '2017-08-18 00:44:43'
                    user:
                      id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: 1
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-07-28 00:59:56'
                    module:
                      id: 5
                      code: user
                      description: User module
                      sort: 100
                      active: 1
                      created_at: '2017-07-31 07:54:04'
                      updated_at: '2017-07-31 07:54:04'
                    action:
                      code: user_addusers
                      name: Добавление пользователей
                      description: Возможность добавлять новых пользователей
        '403':
          description: У пользователя нет прав на просмотр логов
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - log
      summary: Удаление записей из лога
      description: >-
        Удаление из лога всех записей или за определённое время (если не
        передавать параметры, удаляет все записи из лога, если передавать то
        только за указанный период, можно передать только 1 параметр). Вернёт
        количество удалённых записей.
      operationId: deleteLog
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Тело запроса
          schema:
            type: object
            required:
              - from
              - to
            properties:
              from:
                type: string
                example: '2017-08-17 03:30:05'
              to:
                type: string
                example: '2017-08-20 03:30:05'
      security:
        - crm_auth: []
      responses:
        '200':
          description: Записи успешно удалены
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление логов
          schema:
            $ref: '#/definitions/403Response'
  '/log/{id}':
    delete:
      tags:
        - log
      summary: Удаление записи из лога
      description: Удаление записи из лога по её ID
      operationId: deleteLogById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID записи в логе, которую нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Записиь успешно удалёна
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление записей из лога
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Запись с таким ID не найдена
          schema:
            $ref: '#/definitions/404Response'
  /user:
    post:
      tags:
        - user
      summary: Создание пользователя
      description: Создание нового пользователя
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Создание пользователя
          required: true
          schema:
            $ref: '#/definitions/User'
      security:
        - crm_auth: []
      responses:
        '200':
          description: Пользователь успешно создался
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на создание пользователей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка создания пользователя
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - user
      summary: Изменение пользователя
      description: Изменение парамеров существующего пользователя
      operationId: putUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Изменение пользователя
          required: true
          schema:
            $ref: '#/definitions/User'
      security:
        - crm_auth: []
      responses:
        '200':
          description: Пользователь успешно изменён
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на изменение пользователей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка создания пользователя
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - user
      summary: Получение списка пользователей
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        пользователей (запрос хотябы с параметром count)
      operationId: getUsers
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка пользователей
          schema:
            $ref: '#/definitions/User'
          examples:
            Без постраничной навигации:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 1
                  login: Yazu
                  email: speed.live@mail.ru
                  sort: '100'
                - id: 2
                  login: Yazu
                  email: speed.live@mail.ru
                  sort: '100'
            С постраничной навигацией:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                total: 3
                per_page: 2
                current_page: 1
                last_page: 2
                next_page_url: 'http://crm.lets-code.ru/api/user?page=2'
                prev_page_url: 'null'
                from: 1
                to: 2
                data:
                  - id: 1
                    login: Yazu
                    email: speed.live@mail.ru
                    sort: '100'
                  - id: 2
                    login: Yazu
                    email: speed.live@mail.ru
                    sort: '100'
        '403':
          description: У пользователя нет прав на просмотр пользователей
          schema:
            $ref: '#/definitions/403Response'
  '/user/{login}':
    delete:
      tags:
        - user
      summary: Удаление пользователя по его логину
      description: Удаление пользователя по его логину
      operationId: deleteUser
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: login
          in: path
          description: 'Логин пользователя, котого нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Пользователь успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Пользователь с таким логином не найден
          schema:
            $ref: '#/definitions/404Response'
  '/user/id/{id}':
    delete:
      tags:
        - user
      summary: Удаление пользователя по его ID
      description: Удаление пользователя по его ID
      operationId: deleteUserById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID пользователя, котого нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Пользователь успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Пользователь с таким ID не найден
          schema:
            $ref: '#/definitions/404Response'
    get:
      tags:
        - user
      summary: Получение пользователя по его ID
      description: Получение пользователя по его ID
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'ID пользователя, котого нужно получить'
          required: true
          type: string
      security:
        - crm_auth: []
      responses:
        '200':
          description: Пользователь найден
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2017-07-27 06:40:41'
                  updated_at:
                    type: string
                    example: '2017-07-27 06:41:02'
                  login:
                    type: string
                    example: Yazu
                  email:
                    type: string
                    example: example@mail.ru
                  sort:
                    type: integer
                    example: 100
        '403':
          description: У пользователя нет прав на просмотр других пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Пользователь с таким ID не найден
          schema:
            $ref: '#/definitions/404Response'
  '/user/email/{email}':
    delete:
      tags:
        - user
      summary: Удаление пользователя по его Email
      description: Удаление пользователя по его Email
      operationId: deleteUserByEmail
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: email
          in: path
          description: 'Email пользователя, котого нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Пользователь успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Пользователь с таким email не найден
          schema:
            $ref: '#/definitions/404Response'
    get:
      tags:
        - user
      summary: Получение пользователя по его Email
      description: Получение пользователя по его Email
      operationId: getUserByEmail
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: email
          in: path
          description: 'Email пользователя, котого нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Пользователь найден
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
                  created_at:
                    type: string
                    example: '2017-07-27 06:40:41'
                  updated_at:
                    type: string
                    example: '2017-07-27 06:41:02'
                  login:
                    type: string
                    example: Yazu
                  email:
                    type: string
                    example: example@mail.ru
                  sort:
                    type: integer
                    example: 100
        '403':
          description: У пользователя нет прав на просмотр других пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Пользователь с таким email не найден
          schema:
            $ref: '#/definitions/404Response'
  '/user/{login}/group':
    get:
      tags:
        - user
      summary: Группы пользователя
      description: 'Получение всх групп, в которых состоит пользователь'
      operationId: userGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: login
          required: true
          description: Логин пользователя
          type: string
      responses:
        '200':
          description: Группы успешно получены
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 3
                    created_at:
                      type: string
                      example: '2017-07-27 06:40:41'
                    updated_at:
                      type: string
                      example: '2017-07-27 06:41:02'
                    name:
                      type: string
                      example: Редакторы
                    description:
                      type: string
                      example: Могут провидить редакцию материалов
                    sort:
                      type: integer
                      example: 2
                    code:
                      type: string
                      example: redactors
                    pivot:
                      type: object
                      properties:
                        user_id:
                          type: integer
                          example: 5
                        group_id:
                          type: integer
                          example: 3
        '403':
          description: У пользователя нет прав на просмотр групп
          schema:
            $ref: '#/definitions/403Response'
  /user/attachgroup:
    post:
      tags:
        - user
      summary: Добавление пользователя к группе
      description: Добавление пользователя к группе
      operationId: attachUserToGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - module_code
              - action
            properties:
              module_code:
                type: string
                example: user
              action:
                type: string
                example: user_addusers
      responses:
        '200':
          description: Пользователь успешно добавлен в группу
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: boolean
                example: true
        '403':
          description: У пользователя нет прав на добавление пользователей в группы
          schema:
            $ref: '#/definitions/403Response'
  /user/detachgroup:
    post:
      tags:
        - user
      summary: Удаление пользователя из группы
      description: Удаление пользователя из группы
      operationId: detachUserFromGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - login
              - group
            properties:
              login:
                type: string
                example: yazu
              group:
                type: string
                example: redactors
      responses:
        '200':
          description: Пользователь успешно удалён из группы
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: boolean
                example: true
        '403':
          description: У пользователя нет прав на удаление пользователей из групп
          schema:
            $ref: '#/definitions/403Response'
  '/user/{login}/can/{action}':
    get:
      tags:
        - user
      summary: Проверка доступа пользователя к действию
      description: 'Проверка, может ли пользователь выполнять какое-либо действие'
      operationId: userCan
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: login
          required: true
          description: Логин пользователя
          type: string
        - in: path
          name: action
          required: true
          description: Действие
          type: string
      responses:
        '200':
          description: Успешная проверка
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: boolean
                example: true
        '403':
          description: У пользователя нет прав на проверку действий
          schema:
            $ref: '#/definitions/403Response'
  '/user/{login}/return':
    get:
      tags:
        - user
      summary: Сброс пароля пользователя
      description: Отправляет пользователю email на сброс пароля
      operationId: userReturnPassword
      produces:
        - application/json
      parameters:
        - in: path
          name: login
          required: true
          description: Логин пользователя
          type: string
      responses:
        '200':
          description: Успешная отправка
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: 'true'
              status:
                type: integer
                example: '200'
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: object
                properties:
                  delete_old_request:
                    type: boolean
                    example: 1
                  token_save:
                    type: boolean
                    example: 1
                  send_mail:
                    type: boolean
                    example: 1
  /user/reset:
    post:
      tags:
        - user
      summary: Установка нового пароля пользователя
      description: Устанавливает переданный пароль как новый
      operationId: userResetPassword
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Тело запроса
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
                example: dawd1341e39unaf8b861to3e193eb1012
              password:
                type: string
                example: qwerty
              password_confirm:
                type: string
                example: qwerty
      responses:
        '200':
          description: Успешная смена пароля
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Пароли не совпадают/неверный токен
          schema:
            $ref: '#/definitions/400Response'
        '404':
          description: Токен не найден
          schema:
            $ref: '#/definitions/404Response'
  /login:
    post:
      tags:
        - auth
      summary: Авторизация пользователя
      description: Авторизация пользователя в системе
      operationId: login
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Авторизационные данные
          schema:
            $ref: '#/definitions/LoginResponse'
        '404':
          description: Пользователь с данным логином/email не найден
          schema:
            $ref: '#/definitions/404Response'
        '500':
          description: Ошибочный логин или пароль
          schema:
            $ref: '#/definitions/400Response'
  /login/refresh:
    get:
      tags:
        - auth
      summary: Обновление токена
      description: Обновление токена
      operationId: refreshToken
      security:
        - crm_auth: []
      produces:
        - application/json
      parameters:
        - in: query
          name: refresh_token
          required: true
          description: Токен для обновления
          type: string
      responses:
        '200':
          description: Токен успешно обновлён
          schema:
            $ref: '#/definitions/RegreshTokenResponse'
        '401':
          description: Неверный refresh_token
          schema:
            $ref: '#/definitions/401Response'
  /logout:
    post:
      tags:
        - auth
      summary: Выход текущего пользователя из системы
      description: Позволяет разлогинить текущего пользователя
      operationId: logoutUser
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters: []
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LogoutResponse'
  /signup:
    post:
      tags:
        - auth
      summary: Регистрация пользователя
      description: Регистрация нового пользователя
      operationId: signupUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Регистрация пользователя
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Пользователь успешно зарегистрирован
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '500':
          description: Ошибка регистрации пользователя
          schema:
            $ref: '#/definitions/500Response'
  /group:
    get:
      tags:
        - group
      summary: Получение списка групп пользователей
      description: Получение списка групп пользователей
      operationId: getGroups
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Список групп
          examples:
            Без постраничной навигации:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 3
                  created_at: '2017-07-27 06:40:41'
                  updated_at: '2017-07-27 06:41:02'
                  name: Редакторы
                  description: Могут провидить редакцию материалов
                  sort: 2
                  code: redactors
                - id: 1
                  created_at: '2017-07-27 06:40:41'
                  updated_at: '2017-07-27 06:41:02'
                  name: Администраторы
                  description: Могут всё
                  sort: 1
                  code: administrators
            С постраничной навигацией:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                total: 3
                per_page: 2
                current_page: 1
                last_page: 2
                next_page_url: 'http://crm.lets-code.ru/api/group?page=2'
                prev_page_url: 'null'
                from: 1
                to: 2
                data:
                  - id: 3
                    created_at: '2017-07-27 06:40:41'
                    updated_at: '2017-07-27 06:41:02'
                    name: Редакторы
                    description: Могут провидить редакцию материалов
                    sort: 2
                    code: redactors
                  - id: 1
                    created_at: '2017-07-27 06:40:41'
                    updated_at: '2017-07-27 06:41:02'
                    name: Администраторы
                    description: Могут всё
                    sort: 1
                    code: administrators
        '403':
          description: У пользователя нет прав на просмотр групп пользователей
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - group
      summary: Создание новой группы
      description: Создание новой группы пользователей
      operationId: createGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: Группа успешно создалась
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на создание групп
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка создания группы
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - group
      summary: Изменение существующей группы
      description: Изменение существующей группы пользователей
      operationId: putGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: Группа успешно изменена
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на узменение групп
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения группы
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - group
      summary: Удаление группы
      description: Удаление существующей группы
      operationId: deleteGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            properties:
              code:
                type: string
                example: administrators
      responses:
        '200':
          description: Группа успешно удалена
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на удаление групп
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка удаления группы
          schema:
            $ref: '#/definitions/500Response'
  '/group/{code}':
    get:
      tags:
        - group
      summary: Получение группы по коду
      description: Получение группы пользователей по её коду
      operationId: getGroup
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: code
          required: true
          description: Символьный код группы
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Группа пользователей
          examples:
            Без постраничной навигации:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                id: 1
                created_at: '2017-07-27 06:40:41'
                updated_at: '2017-07-27 06:41:02'
                name: Администраторы
                description: Могут всё
                sort: 1
                code: administrators
        '403':
          description: У пользователя нет прав на просмотр групп пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Группа с переданным кодом не найдена
          schema:
            $ref: '#/definitions/404Response'
  /action:
    get:
      tags:
        - action
      summary: Получение списка действий пользователей
      description: 'Получение списка действий пользователей, которые уже занесены в БД'
      operationId: getActions
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Список групп
          examples:
            Без постраничной навигации:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 16
                  name: module_activate_deactivate
                  group_id: 2
                  module_id: 1
                  sort: 1
                  description: Активирование и деактивация модулей
                  created_at: '2017-07-28 04:23:42'
                  updated_at: '2017-07-28 04:23:42'
                - id: 19
                  name: module_activate_deactivate
                  group_id: 3
                  module_id: 1
                  sort: 2
                  description: Активирование и деактивация модулей
                  created_at: '2017-07-28 05:49:53'
                  updated_at: '2017-07-28 05:49:53'
            С постраничной навигацией:
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                total: 3
                per_page: 2
                current_page: 1
                last_page: 2
                next_page_url: 'http://crm.lets-code.ru/api/group?page=2'
                prev_page_url: 'null'
                from: 1
                to: 2
                data:
                  - id: 16
                    name: module_activate_deactivate
                    group_id: 2
                    module_id: 1
                    sort: 1
                    description: Активирование и деактивация модулей
                    created_at: '2017-07-28 04:23:42'
                    updated_at: '2017-07-28 04:23:42'
                  - id: 19
                    name: module_activate_deactivate
                    group_id: 3
                    module_id: 1
                    sort: 2
                    description: Активирование и деактивация модулей
                    created_at: '2017-07-28 05:49:53'
                    updated_at: '2017-07-28 05:49:53'
        '403':
          description: У пользователя нет прав на просмотр действий пользователей
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - action
      summary: Добавление действия в БД
      description: >-
        Добавление действия в БД, можно добавить только действие, которое
        определено в конфиге модуля (добавлят группе пользователей разрешение на
        выполнение действия)
      operationId: createAction
      security:
        - crm_auth: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '200':
          description: Действие успешно добавлено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление действий
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления действия
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - action
      summary: Изменение действия в БД
      description: >-
        Изменение действия в БД, можно изменять только действие, которое
        определено в конфиге модуля и уже добавлено в БД
      operationId: putAction
      security:
        - crm_auth: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        '200':
          description: Действие успешно изменено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на изменение действий
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения действия
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - action
      summary: Удаление действия из БД
      description: >-
        Удаление существующего действия из БД (снимает с группы пользователей
        разрешение на выполнение действия)
      operationId: deleteAction
      security:
        - crm_auth: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                example: module_activate_deactivate
              group_code:
                type: string
                example: administrators
              module_code:
                type: string
                example: module
      responses:
        '200':
          description: Действие успешно удалено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на удаление групп
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка удаления группы
          schema:
            $ref: '#/definitions/500Response'
  '/action/{id}':
    get:
      tags:
        - action
      summary: Получение действия по ID
      description: Получение действия пользователей по его ID
      operationId: getActionById
      parameters:
        - in: path
          name: id
          required: true
          description: ID действия в БД
          type: string
      produces:
        - application/json
      security:
        - crm_auth: []
      responses:
        '200':
          description: Действие успешно получено
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              status:
                type: integer
                example: 200
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2017-07-27 06:40:41'
                  updated_at:
                    type: string
                    example: '2017-07-27 06:41:02'
                  name:
                    type: string
                    example: Администраторы
                  description:
                    type: string
                    example: Могут всё
                  sort:
                    type: integer
                    example: 1
                  code:
                    type: string
                    example: administrators
        '403':
          description: У пользователя нет прав на просмотр действий пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Действие с переданным id не найдено
          schema:
            $ref: '#/definitions/404Response'
  '/action/{code}/module/{module_code}':
    get:
      tags:
        - action
      summary: Получение действия
      description: Получение действия пользователей по его коду и коду модуля
      operationId: getActionByCode
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: code
          required: true
          description: Символьный код действия
          type: string
        - in: path
          name: module_code
          required: true
          description: Символьный код модуля
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Действие успешно получено
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              status:
                type: integer
                example: 200
              errors:
                type: object
                properties:
                  messages:
                    type: string
                    example: ''
                  errors:
                    type: string
                    example: ''
              request:
                type: object
                example: {}
              response:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  created_at:
                    type: string
                    example: '2017-07-27 06:40:41'
                  updated_at:
                    type: string
                    example: '2017-07-27 06:41:02'
                  name:
                    type: string
                    example: Администраторы
                  description:
                    type: string
                    example: Могут всё
                  sort:
                    type: integer
                    example: 1
                  code:
                    type: string
                    example: administrators
        '403':
          description: У пользователя нет прав на просмотр действий пользователей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Действие с переданным id не найдено
          schema:
            $ref: '#/definitions/404Response'
  /module:
    get:
      tags:
        - module
      summary: Получение списка модулей
      description: 'Получение списка модулей, которые уже занесены в БД'
      operationId: getModules
      produces:
        - application/json
      security:
        - crm_auth: []
      responses:
        '200':
          description: Список модулей
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 1
                  code: module
                  description: General module
                  sort: 1
                  active: 1
                  created_at: '2017-07-03 07:00:39'
                  updated_at: '2017-07-28 01:49:08'
                  user_access: true
                - id: 5
                  code: user
                  description: User module
                  sort: 100
                  active: 1
                  created_at: '2017-07-31 07:54:04'
                  updated_at: '2017-07-31 07:54:04'
                  user_access: true
        '403':
          description: У пользователя нет прав на просмотр списка модулей
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - module
      summary: Добавление модуля
      description: >-
        Добавление модуля в БД, для корректной работы модуля, обязательно
        (осуществляется автоматически при создании модуля и прописывания его в
        конфигах)
      operationId: createModule
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Module'
      responses:
        '200':
          description: Модуль успешно добавлен
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление модулей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления модуля
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - module
      summary: Обновление модуля
      description: Обновление модуля в БД
      operationId: putModule
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Module'
      responses:
        '200':
          description: Модуль успешно обновлён
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на обновление модулей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка обновления модуля
          schema:
            $ref: '#/definitions/500Response'
  '/module/{code}':
    delete:
      tags:
        - module
      summary: Удаление модуля по коду
      description: Удаление модуля из БД по символьному коду
      operationId: deleteModuleByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: code
          in: path
          description: 'Код модуля, который нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Модуль успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
    get:
      tags:
        - module
      summary: Получение модуля по его коду
      description: Получение модуля по его символьному коду
      operationId: getModuleByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: code
          in: path
          description: 'Код кодуля, который нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Модуль найден
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                id: 5
                created_at: '2017-07-31 07:54:04'
                updated_at: '2017-07-31 07:54:04'
                code: user
                description: User module
                sort: 100
                active: 1
        '403':
          description: У пользователя нет прав на просмотр модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
  '/module/{code}/config':
    get:
      tags:
        - module
      summary: Получение конфигов модуля по его коду
      description: Получение конфигов модуля по его символьному коду
      operationId: getModuleConfigByCode
      produces:
        - application/json
      parameters:
        - name: code
          in: path
          description: 'Код кодуля, конфиг которого нужно получить'
          required: true
          type: string
      security:
        - crm_auth: []
      responses:
        '200':
          description: Модуль найден
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                module_name: user
                description: User module
                properties: []
                dependencies: []
                actions:
                  user_access:
                    code: user_access
                    name: Доступ к модулю
                    description: ''
                  user_addusers:
                    code: user_addusers
                    name: Добавление пользователей
                    description: Возможность добавлять новых пользователей
        '403':
          description: У пользователя нет прав на просмотр конфигов модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
  '/module/{code}/actions':
    get:
      tags:
        - module
      summary: Получение действий модуля по его коду
      description: Получение действий модуля по его символьному коду
      operationId: getModuleActionsByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: code
          in: path
          description: 'Код кодуля, действия которого нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Модуль найден
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                user_access:
                  code: user_access
                  name: Доступ к модулю
                  description: ''
                user_addusers:
                  code: user_addusers
                  name: Добавление пользователей
                  description: Возможность добавлять новых пользователей
                user_removeusers:
                  code: user_removeusers
                  name: Удаление пользователей
                  description: Возможность удалять пользователей
        '403':
          description: У пользователя нет прав на просмотр действий модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
  '/module/{code}/props':
    get:
      tags:
        - module
      summary: Получение значений свойства модуля
      description: Получение свойств модуля по его символьному коду
      operationId: getModulePropsByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: code
          description: 'Код модуля, действия которого нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Модуль найден
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                testinput:
                  name: Тестовый инпут
                  code: testinput
                  placeholder: Тестовый инпут
                  type: text
                  multiply: false
                  default_value: 'null'
                  values: []
                  value:
                    id: 4
                    created_at: '2017-07-04 01:05:14'
                    updated_at: '2017-07-04 01:27:02'
                    module_id: 1
                    code: testinput
                    value_code: 'false'
                    value: '22'
                checkbox1:
                  name: Тестовый чекбокс
                  code: checkbox1
                  placeholder: Тестовый чекбокс
                  type: checkbox
                  multiply: false
                  default_value: 'null'
                  values:
                    value1: значение 1
                  value: null
        '403':
          description: У пользователя нет прав на просмотр свойств модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
    post:
      tags:
        - module
      summary: Добавление значения свойства модуля
      description: Добавление значения свойства модуля в БД
      operationId: createModuleProps
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: code
          description: Код модуля
          required: true
          type: string
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/ModuleProp'
      responses:
        '200':
          description: Значение свойства успешно добавлено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление значений свойств модулей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления значений свойств модулей
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - module
      summary: Обновление значения свойства модуля
      description: Обновление значения свойства модуля в БД
      operationId: putModuleProps
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: code
          description: Код модуля
          required: true
          type: string
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/ModuleProp'
      responses:
        '200':
          description: Значение свойства успешно обновленно
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на обновление значений свойств модулей
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка обновления значений свойств модулей
          schema:
            $ref: '#/definitions/500Response'
  '/module/{code}/props/{prop_code}':
    get:
      tags:
        - module
      summary: Получение значения свойства модуля
      description: >-
        Получение значение свойства модуля по его символьному коду (в response
        массив потому что свойство может быть множественным)
      operationId: getModulePropsValueByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: code
          in: path
          description: 'Код модуля, значение свойства которого нужно получить'
          required: true
          type: string
        - name: prop_code
          in: path
          description: 'Код свойства, значение которого нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Модуль найден
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response:
                - id: 4
                  created_at: '2017-07-04 01:05:14'
                  updated_at: '2017-07-04 01:27:02'
                  module_id: 1
                  code: testinput
                  value_code: 'false'
                  value: '22'
        '403':
          description: У пользователя нет прав на просмотр значений свойств модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
    delete:
      tags:
        - module
      summary: Удаление значения свойства модуля
      description: Удаление значение свойства модуля по его символьному коду
      operationId: deleteModulePropsValueByCode
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: code
          in: path
          description: 'Код модуля, значение свойства которого нужно удалить'
          required: true
          type: string
        - name: prop_code
          in: path
          description: 'Код свойства, значение которого нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Значение свойства удалено
          examples:
            '':
              success: 'true'
              status: '200'
              errors:
                messages: ''
                errors: ''
              request: {}
              response: 1
        '403':
          description: У пользователя нет прав на просмотр значений свойств модулей
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Модуль с таким кодом не найден
          schema:
            $ref: '#/definitions/404Response'
  /properties:
    post:
      tags:
        - properties
      summary: Добавление свойства
      description: Добавление нового свойства сущности
      operationId: createProperty
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Property'
      responses:
        '200':
          description: Свойство успешно добавлено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление свйоств
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления свойства
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - properties
      summary: Изменние свойства
      description: Добавление существующего свойства сущности
      operationId: putProperty
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/putProperty'
      responses:
        '200':
          description: Свойство успешно изменено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на изменение свйоств
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения свойства
          schema:
            $ref: '#/definitions/500Response'
  '/properties/{id}':
    delete:
      tags:
        - properties
      summary: Удаление свойства сущности
      description: Удаление свойства сущности по id свойства
      operationId: deleteProperty
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID свойства, который нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Свойство успешно удалёно
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоство с таким ID не найдено
          schema:
            $ref: '#/definitions/404Response'
  '/properties/{module_code}/':
    get:
      tags:
        - properties
      summary: Получение свойств по коду модуля
      description: Получение свойств по коду модуля
      operationId: getProperties
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: module_code
          in: path
          description: 'Код свойства, которое нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Свойства успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                module_code: user
                field_entity_code: users
              response:
                - id: 6
                  name: Пол
                  code: gender
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: select
                  multiply: 0
                  require: 1
                  active: 1
                  created_at: '2017-09-04 05:37:49'
                  updated_at: '2017-09-04 05:37:49'
                  choices:
                    - id: 1
                      name: Мужской
                      code: male
                      sort: 1
                      property_id: 6
                    - id: 3
                      name: Женский
                      code: female
                      sort: 2
                      property_id: 6
                - id: 7
                  name: Аватар
                  code: avatar
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: file
                  multiply: 0
                  require: 0
                  active: 1
                  created_at: '2017-09-07 01:00:29'
                  updated_at: '2017-09-07 01:00:29'
        '403':
          description: У пользователя нет прав на удаление свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоства не найдены
          schema:
            $ref: '#/definitions/404Response'
  '/properties/{module_code}/entity/{entity_code}':
    get:
      tags:
        - properties
      summary: Получение свойства сущности
      description: Получение свойства сущности по коду свойства и коду сущности
      operationId: getProperty
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: module_code
          in: path
          description: 'Код свойства, которое нужно удалить'
          required: true
          type: string
        - name: entity_code
          in: path
          description: 'Код сущности, которое нужно удалить'
          required: true
          type: string
      responses:
        '200':
          description: Свойства успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                module_code: user
                field_entity_code: users
              response:
                - id: 6
                  name: Пол
                  code: gender
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: select
                  multiply: 0
                  require: 1
                  active: 1
                  created_at: '2017-09-04 05:37:49'
                  updated_at: '2017-09-04 05:37:49'
                  choices:
                    - id: 1
                      name: Мужской
                      code: male
                      sort: 1
                      property_id: 6
                    - id: 3
                      name: Женский
                      code: female
                      sort: 2
                      property_id: 6
                - id: 7
                  name: Аватар
                  code: avatar
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: file
                  multiply: 0
                  require: 0
                  active: 1
                  created_at: '2017-09-07 01:00:29'
                  updated_at: '2017-09-07 01:00:29'
        '403':
          description: У пользователя нет прав на удаление свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоство с таким ID не найдено
          schema:
            $ref: '#/definitions/404Response'
  '/properties/byid/{id}':
    get:
      tags:
        - properties
      summary: Получение свойства по его id
      description: Получение свойства по его id
      operationId: getPropertyById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID свойства, которое нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Свойства успешно получены
          examples:
            Пример:
              success: trues
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                id: 6
                name: Пол
                code: gender
                sort: 100
                module_id: 5
                field_entity: users
                field_type: select
                multiply: 0
                require: 1
                active: 1
                created_at: '2017-09-04 05:37:49'
                updated_at: '2017-09-04 05:37:49'
                choices:
                  - id: 1
                    name: Мужской
                    code: male
                    sort: 1
                    property_id: 6
                  - id: 3
                    name: Женский
                    code: female
                    sort: 2
                    property_id: 6
        '403':
          description: У пользователя нет прав на удаление свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоства не найдены
          schema:
            $ref: '#/definitions/404Response'
  '/properties/{prop_id}/choices':
    get:
      tags:
        - properties
      summary: Получение списка вариантов значений
      description: Получение списка вариантов значений свйоства
      operationId: getChoices
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, варианты выбора которого нужно получить'
          required: true
          type: integer
      produces:
        - application/json
      security:
        - crm_auth: []
      responses:
        '200':
          description: Значения успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                - id: 1
                  name: Мужской
                  code: male
                  sort: 1
                  property_id: 6
                - id: 3
                  name: Женский
                  code: female
                  sort: 2
                  property_id: 6
        '403':
          description: У пользователя нет прав на получение свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоства не найдены
          schema:
            $ref: '#/definitions/404Response'
    post:
      tags:
        - properties
      summary: Добавление варианта выбора
      description: Добавление нового варианта выбора
      operationId: createChoices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: ID свойства
          required: true
          type: integer
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Choices'
      responses:
        '200':
          description: Вариант успешно добавлен
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление вариантов
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления варианта
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - properties
      summary: Изменение варианта выбора
      description: Изменение существующего варианта выбора
      operationId: putChoices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: ID свойства
          required: true
          type: integer
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/putChoices'
      responses:
        '200':
          description: Вариант успешно изменён
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на изменение вариантов
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения варианта
          schema:
            $ref: '#/definitions/500Response'
  '/properties/{prop_id}/choices/{id}':
    delete:
      tags:
        - properties
      summary: Удаление варианта выбора
      description: Удаление варианта выбора по его id и id свойства
      operationId: deleteChooices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, к которому привязан вариант'
          required: true
          type: integer
        - name: id
          in: path
          description: 'ID значения, которое нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Вариант значения успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление вариантов значений свойст
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Вариант значеия с таким ID не найден
          schema:
            $ref: '#/definitions/404Response'
    get:
      tags:
        - properties
      summary: Получение варианта значения
      description: Получение варианта значения по его ID
      operationId: getChoicesById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, варианты выбора которого, нужно получить'
          required: true
          type: string
        - name: id
          in: path
          description: 'ID варианта выбора который, нужно получить'
          required: true
          type: string
      responses:
        '200':
          description: Значения успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
                property_id: '6'
              response:
                - id: 1
                  name: Мужской
                  code: male
                  sort: 1
                  property_id: 6
        '403':
          description: У пользователя нет прав на получение свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоства не найдены
          schema:
            $ref: '#/definitions/404Response'
  /properties/values:
    post:
      tags:
        - properties
      summary: Добавление значения свойства
      description: Добавление нового значения свойства сущности
      operationId: createPropertyValue
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/PropertyValue'
      responses:
        '200':
          description: Значение успешно добавлено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на добавление значений
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления значений
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - properties
      summary: Изменение значения свойства
      description: Изменение существующего значения свойства сущности
      operationId: putPropertyValue
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/putPropertyValue'
      responses:
        '200':
          description: Значение успешно изменено
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на изменение значений
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения значения
          schema:
            $ref: '#/definitions/500Response'
  '/properties/{prop_id}/entity/{id}/values':
    get:
      tags:
        - properties
      summary: Получение списка значений свойства
      description: Получение списка значений свойства по id свойства и id сущности
      operationId: getPropertyValues
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, значения которого, нужно получить'
          required: true
          type: integer
        - name: id
          in: path
          description: 'ID сущности, для которой нужно получить значения'
          required: true
          type: integer
      responses:
        '200':
          description: Значения успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                property_id: '6'
                entity_id: '4'
              response:
                - id: 16
                  created_at: '2017-09-11 02:12:23'
                  updated_at: '2017-09-11 02:12:23'
                  property_id: 6
                  entity_id: 4
                  code: male
                  value: Мужской
        '403':
          description: У пользователя нет прав на получение значений свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоства не найдены
          schema:
            $ref: '#/definitions/404Response'
    delete:
      tags:
        - properties
      summary: Удаление всех значений свойства
      description: Удаление всех значений свойства по его id и id сущности
      operationId: deletePropertyValues
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, значения которого нужно удалить'
          required: true
          type: integer
        - name: id
          in: path
          description: 'ID сущности, значения у которой нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Значения успешно удалёны
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление значений
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Значеия не найдены
          schema:
            $ref: '#/definitions/404Response'
  '/properties/{prop_id}/entity/{entity_id}/values/{id}':
    get:
      tags:
        - properties
      summary: Получение значения свойства
      description: 'Получение значения свойства по id свойства, id сущности и id значения'
      operationId: getPropertyValue
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, значение которого, нужно получить'
          required: true
          type: integer
        - name: entity_id
          in: path
          description: 'ID сущности, для которой нужно получить значение'
          required: true
          type: integer
        - name: id
          in: path
          description: 'ID значения, которое нужно получить'
          required: true
          type: integer
      responses:
        '200':
          description: Значения успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                property_id: '6'
                entity_id: '4'
              response:
                id: 16
                created_at: '2017-09-11 02:12:23'
                updated_at: '2017-09-11 02:12:23'
                property_id: 6
                entity_id: 4
                code: male
                value: Мужской
        '403':
          description: У пользователя нет прав на получение значений свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Свйоств не найдено
          schema:
            $ref: '#/definitions/404Response'
    delete:
      tags:
        - properties
      summary: Удаление значения свойства
      description: 'Удаление значения свойства по его id, id сущности и id свойства'
      operationId: deletePropertyValue
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: prop_id
          in: path
          description: 'ID свойства, значения которого нужно удалить'
          required: true
          type: integer
        - name: entity_id
          in: path
          description: 'ID сущности, значения у которой нужно удалить'
          required: true
          type: integer
        - name: id
          in: path
          description: 'ID сущности, значения у которой нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Значение успешно удалёно
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление значений
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Значеие не найдено
          schema:
            $ref: '#/definitions/404Response'
  /entity/values:
    post:
      tags:
        - properties
      summary: Получение списка значений свойств сущности
      description: Получение списка значений указанных свойств сущности
      operationId: getPropertyAllValues
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - _method
              - properties
              - entity_id
            properties:
              _method:
                type: string
                maxLength: 255
                description: метод запроса - всегда GET
                example: GET
              properties:
                type: array
                maxLength: 255
                description: 'массив свойств, которые нужно получить'
                example:
                  - gender
                  - avatar
                items:
                  type: object
              entity_id:
                type: integer
                maxLength: 10
                description: 'id сущности, для которой получаем свойства'
                example: 2
      responses:
        '200':
          description: Значения успешно получены
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                data:
                  _method: GET
                  properties:
                    - avatar
                    - gender
                  entity_id: '4'
              response:
                gender:
                  id: 6
                  name: Пол
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: select
                  multiply: 0
                  require: 1
                  active: 1
                  values:
                    male:
                      id: 16
                      code: male
                      entity_id: 4
                      value: Мужской
                      property_id: '2017-09-11 02:12:23'
                      updated_at: '2017-09-11 02:12:23'
                  choices:
                    male:
                      id: 1
                      name: Мужской
                      code: male
                      sort: 1
                    female:
                      id: 3
                      name: Женский
                      code: female
                      sort: 2
                avatar:
                  id: 7
                  name: Аватар
                  sort: 100
                  module_id: 5
                  field_entity: users
                  field_type: file
                  multiply: 0
                  require: 0
                  active: 1
                  values:
                    firstavatar:
                      id: 15
                      code: firstavatar
                      entity_id: 4
                      value:
                        id: 22
                        created_at: '2017-09-07 07:41:03'
                        updated_at: '2017-09-07 07:41:03'
                        path: /storage/public/1504770063.jpg
                        local_path: >-
                          /home/x/xyazu/crm.lets-code.ru/public_html/storage/public/1504770063.jpg
                        user_id: 4
                        name: 1504770063.jpg
                      property_id: '2017-09-07 07:41:03'
                      updated_at: '2017-09-07 07:41:03'
        '403':
          description: У пользователя нет прав на получение значений свйоств
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Значений не найдено
          schema:
            $ref: '#/definitions/404Response'
  '/properties/file/{id}':
    get:
      tags:
        - properties
      summary: Получение файла по его id
      description: Получение свойств файла по его id
      operationId: getFile
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID файла, который нужно получить'
          required: true
          type: integer
      responses:
        '200':
          description: Файл успешно получен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '22'
              response:
                id: 22
                created_at: '2017-09-07 07:41:03'
                updated_at: '2017-09-07 07:41:03'
                path: /storage/public/1504770063.jpg
                local_path: >-
                  /home/x/xyazu/crm.lets-code.ru/public_html/storage/public/1504770063.jpg
                user_id: 4
                name: 1504770063.jpg
        '403':
          description: У пользователя нет прав на получение файлов
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Файл не найден
          schema:
            $ref: '#/definitions/404Response'
    delete:
      tags:
        - properties
      summary: Удаление файла по его id
      description: Удаление записи о файле и самого файла по его id
      operationId: deleteFile
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: id
          in: path
          description: 'ID файла, который нужно удалить'
          required: true
          type: integer
      responses:
        '200':
          description: Файл успешно удалён
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на удаление файлов
          schema:
            $ref: '#/definitions/403Response'
        '404':
          description: Файл не найден
          schema:
            $ref: '#/definitions/404Response'
  /tasks:
    post:
      tags:
        - tasks
      summary: Добавление новой задачи
      description: Добавление новой задачи
      operationId: postTask
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: Задача успешно добавлена
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                name: Test
                description: null
                sort: null
                taskmaster_id: 4
                responsible_id: '4'
                project_id: '1'
                deadline: null
                status_id: 1
                parent_task_id: null
                time_start: null
                time_finish: null
                wasted_time: null
                type: '1'
                status: '1'
                def_project_id: '1'
                def_status_id:
                  - '1'
                  - '2'
                  - '3'
                project_status:
                  - 1
                  - 2
                  - 3
              response:
                name: Test
                description: null
                sort: 100
                parent_task_id: null
                deadline: null
                time_start: null
                time_finish: null
                wasted_time: null
                type: '1'
                status: '1'
                taskmaster_id: 4
                responsible_id: 4
                project_id: '1'
                updated_at: '2017-12-14 05:44:32'
                created_at: '2017-12-14 05:44:32'
                id: 52
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasks
      summary: Изменение задачи
      description: Изменение существующей задачи
      operationId: putTask
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '200':
          description: Задача успешно изменена
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '52'
                name: Test
                description: null
                sort: null
                taskmaster_id: '4'
                responsible_id: '4'
                project_id: '1'
                deadline: null
                status_id: 1
                parent_task_id: null
                status: '1'
                time_start: null
                time_finish: null
                wasted_time: null
                type: '1'
                def_project_id: '1'
                def_status_id:
                  - '1'
                  - '2'
                  - '3'
                project_status:
                  - 1
                  - 2
                  - 3
              response:
                id: 52
                created_at: '2017-12-14 05:44:32'
                updated_at: '2017-12-14 05:44:32'
                name: Test
                description: null
                taskmaster_id: '4'
                responsible_id: 4
                project_id: '1'
                deadline: null
                sort: 100
                status: '1'
                status_id: 1
                parent_task_id: null
                type: '1'
                time_start: null
                time_finish: null
                wasted_time: null
                timeline_id: null
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - tasks
      summary: Получение списка задач
      description: >-
        Получение полного (запрос без параметров) или страничного списка задач
        (запрос хотябы с параметром count)
      operationId: getTasks
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка задач
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Тестовая задача
                  description: Описание тестовой задачи
                  sort: 100
                  created_at: '2017-09-21 08:20:31'
                  updated_at: '2017-09-28 06:42:57'
                  taskmaster_id: 4
                  responsible_id: 4
                  project_id: 1
                  group_id: 1
                  deadline: null
                  status_id: 2
                  parent_task_id: null
                  time_start: '2017-09-29 00:00:00'
                  time_finish: '2017-09-29 01:00:00'
                  wasted_time: '10800'
                  taskmaster:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-08-22 01:14:15'
                  responsible:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-08-22 01:14:15'
                  project:
                    id: 1
                    created_at: '2017-09-19 06:09:00'
                    updated_at: '2017-09-19 06:09:00'
                    name: Общие задачи
                    description: >-
                      Это стандартный проект, куда попадают все задачи без
                      назначенного проекта
                    group_id: 1
                    sort: 1
                  status:
                    id: 2
                    name: В работе
                    description: Задача находится в процессе выполнения
                    project_id: 1
                    sort: 2
                  group:
                    id: 1
                    name: Без группы
                    description: >-
                      Стандартная группа задач, сюда попадают все задачи без
                      группы
                    sort: 100
                  coexecutor:
                    - id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: 1
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-08-22 01:14:15'
                - id: 2
                  name: Тестовая задача 2
                  description: Описание тестовой задачи 2
                  sort: 100
                  created_at: '2017-09-27 01:44:04'
                  updated_at: '2017-09-28 05:41:08'
                  taskmaster_id: 4
                  responsible_id: 4
                  project_id: 5
                  group_id: 2
                  deadline: null
                  status_id: 1
                  parent_task_id: null
                  time_start: null
                  time_finish: null
                  wasted_time: null
                  taskmaster:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-08-22 01:14:15'
                  responsible:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: 1
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-08-22 01:14:15'
                  project:
                    id: 5
                    created_at: '2017-09-19 06:09:00'
                    updated_at: '2017-09-19 06:09:00'
                    name: Проект 2
                    description: Тестовый проект 2
                    group_id: 2
                    sort: 100
                  status: 1
                  status_section:
                    id: 1
                    name: Поставлена
                    description: Задача ожидает выполнения
                    project_id: 1
                    sort: 1
                  group:
                    id: 2
                    name: В работе
                    description: Все задачи в работе
                    sort: 100
                  coexecutor: []
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 6
                per_page: '1'
                current_page: 1
                last_page: 6
                next_page_url: 'http://crm.lets-code.ru/api/tasks?page=2'
                prev_page_url: null
                from: 1
                to: 1
                data:
                  - id: 1
                    name: Тестовая задача
                    description: Описание тестовой задачи
                    sort: 100
                    created_at: '2017-09-21 08:20:31'
                    updated_at: '2017-09-28 06:42:57'
                    taskmaster_id: 4
                    responsible_id: 4
                    project_id: 1
                    group_id: 1
                    deadline: null
                    status_id: 2
                    parent_task_id: null
                    time_start: '2017-09-29 00:00:00'
                    time_finish: '2017-09-29 01:00:00'
                    wasted_time: '10800'
                    taskmaster:
                      id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: 1
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-08-22 01:14:15'
                    responsible:
                      id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: 1
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-08-22 01:14:15'
                    project:
                      id: 1
                      created_at: '2017-09-19 06:09:00'
                      updated_at: '2017-09-19 06:09:00'
                      name: Общие задачи
                      description: >-
                        Это стандартный проект, куда попадают все задачи без
                        назначенного проекта
                      group_id: 1
                      sort: 1
                    status: 1
                    status_section:
                      id: 2
                      name: В работе
                      description: Задача находится в процессе выполнения
                      project_id: 1
                      sort: 2
                    group:
                      id: 1
                      name: Без группы
                      description: >-
                        Стандартная группа задач, сюда попадают все задачи без
                        группы
                      sort: 100
                    coexecutor:
                      - id: 4
                        login: admin
                        email: speed.live@mail.ru
                        sort: 1
                        created_at: '2017-07-19 01:44:26'
                        updated_at: '2017-08-22 01:14:15'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/byid/{id}':
    get:
      tags:
        - tasks
      summary: Получение задачи по её id
      description: Получение задачи по её id
      operationId: getTasksById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID задачи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение списка задач
          schema:
            $ref: '#/definitions/User'
          examples:
            Ответ сервера:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                created_at: '2017-09-21 08:20:31'
                updated_at: '2017-12-14 02:14:40'
                name: Тестовая задача
                description: Описание тестовой задачи
                taskmaster_id: '4'
                responsible_id: '4'
                project_id: '1'
                deadline: null
                sort: '100'
                status: 1
                status_section:
                  id: 1
                  name: Поставлена
                  description: Задача ожидает выполнения
                  project_id: '1'
                  sort: '1'
                status_id: '1'
                parent_task_id: null
                type: '0'
                time_start: '2017-12-14 01:00:00'
                time_finish: null
                wasted_time: '10800'
                timeline_id: null
                time:
                  wasted_time: 259200
                  time_list:
                    - id: 9
                      time_start: '2017-12-13 00:00:00'
                      time_finish: '2017-12-14 00:00:00'
                      task_id: '1'
                      user_id: '4'
                    - id: 10
                      time_start: '2017-12-11 00:00:00'
                      time_finish: '2017-12-12 00:00:00'
                      task_id: '1'
                      user_id: '4'
                    - id: 11
                      time_start: '2017-12-13 00:00:00'
                      time_finish: '2017-12-14 00:00:00'
                      task_id: '1'
                      user_id: '5'
                taskmaster:
                  id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: '2'
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2017-11-23 02:32:10'
                responsible:
                  id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: '2'
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2017-11-23 02:32:10'
                project:
                  id: 1
                  created_at: '2017-09-19 06:09:00'
                  updated_at: '2017-09-19 06:09:00'
                  name: Общие задачи
                  description: >-
                    Это стандартный проект, куда попадают все задачи без
                    назначенного проекта
                  group_id: null
                  planned_date: null
                  actual_date: null
                  sort: '1'
                groups: []
                coexecutor:
                  - id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: '2'
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-11-23 02:32:10'
                  - id: 5
                    login: yazu
                    email: speed.live2@mail.ru
                    sort: '100'
                    created_at: '2017-07-28 05:37:11'
                    updated_at: '2017-07-28 05:37:11'
                child_tasks: []
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - tasks
      summary: Удаление задачи
      description: Удаление задачи по её id
      operationId: deleteTasksById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID задачи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление задачи
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/{id}/responsible':
    delete:
      tags:
        - tasks
      summary: Удаление ответственного
      description: Удаление ответственного у задачи
      operationId: deleteTasksResponsible
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID задачи для удаления ответственного
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                task_id: '1'
              response:
                id: 1
                created_at: '2017-09-21 08:20:31'
                updated_at: '2017-09-29 01:44:17'
                name: Тестовая задача
                description: Описание тестовой задачи
                taskmaster_id: 4
                responsible_id: null
                project_id: 1
                group_id: 1
                deadline: null
                sort: 100
                status_id: 2
                parent_task_id: null
                time_start: '2017-09-29 00:00:00'
                time_finish: '2017-09-29 01:00:00'
                wasted_time: '10800'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/responsible:
    post:
      tags:
        - tasks
      summary: Добавление ответственного
      description: Добавление ответственного к задаче
      operationId: postTaskResponsible
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - user_id
            properties:
              task_id:
                type: string
                maxLength: 10
                description: id задачи
                example: 1
              user_id:
                type: string
                maxLength: 10
                description: id пользовател
                example: 4
      responses:
        '200':
          description: Ответственный успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                user_id: '4'
                task_id: '1'
              response:
                id: 1
                created_at: '2017-09-21 08:20:31'
                updated_at: '2017-09-29 01:56:31'
                name: Тестовая задача
                description: Описание тестовой задачи
                taskmaster_id: 4
                responsible_id: 4
                project_id: 1
                group_id: 1
                deadline: null
                sort: 100
                status_id: 2
                parent_task_id: null
                time_start: '2017-09-29 00:00:00'
                time_finish: '2017-09-29 01:00:00'
                wasted_time: '10800'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasks
      summary: Изменение ответственного
      description: Изменение ответственного у задачи
      operationId: putTaskResponsible
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - user_id
            properties:
              task_id:
                type: string
                maxLength: 10
                description: id задачи
                example: 1
              user_id:
                type: string
                maxLength: 10
                description: id пользовател
                example: 4
      responses:
        '200':
          description: Ответственный успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                user_id: '4'
                task_id: '1'
              response:
                id: 1
                created_at: '2017-09-21 08:20:31'
                updated_at: '2017-09-29 01:56:31'
                name: Тестовая задача
                description: Описание тестовой задачи
                taskmaster_id: 4
                responsible_id: 4
                project_id: 1
                group_id: 1
                deadline: null
                sort: 100
                status_id: 2
                parent_task_id: null
                time_start: '2017-09-29 00:00:00'
                time_finish: '2017-09-29 01:00:00'
                wasted_time: '10800'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
  /tasks/delegate:
    post:
      tags:
        - tasks
      summary: Делегирование задачи
      description: >-
        Делегирование задачи другому исполнителю, текущий исполнитель становится
        соисполнителем автоматически
      operationId: delegateTask
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - user_id
            properties:
              task_id:
                type: string
                maxLength: 255
                description: id задачи для делигирования
                example: 8
              user_id:
                type: string
                maxLength: 255
                description: 'id пользователя, который станет исполнителем'
                example: 6
      responses:
        '200':
          description: Задача успешно делегирована
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                task_id: '1'
                user_id: '4'
              response:
                task:
                  id: 1
                  created_at: '2017-09-21 08:20:31'
                  updated_at: '2017-09-28 06:42:57'
                  name: Тестовая задача
                  description: Описание тестовой задачи
                  taskmaster_id: 4
                  responsible_id: '4'
                  project_id: 1
                  group_id: 1
                  deadline: null
                  sort: 100
                  status_id: 2
                  parent_task_id: null
                  time_start: '2017-09-29 00:00:00'
                  time_finish: '2017-09-29 01:00:00'
                  wasted_time: '10800'
                coexecutor:
                  task_id: '1'
                  executor_id: 4
                  id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка делигирования
          schema:
            $ref: '#/definitions/500Response'
  /tasks/time:
    post:
      tags:
        - tasksTime
      summary: Добавление промежутка времени выполнения задачи
      description: Добавление промежутка времени выполнения задачи
      operationId: postTaskTime
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - user_id
              - task_id
              - time_start
              - time_finish
            properties:
              user_id:
                type: string
                maxLength: 10
                description: id пользователя
                example: 4
              task_id:
                type: string
                maxLength: 10
                description: id задачи
                example: 1
              time_start:
                type: string
                maxLength: 10
                description: 'время, в формате Y-m-d G:i:s'
                example: '2017-09-20 16:00:00'
              time_finish:
                type: string
                maxLength: 10
                description: 'время, в формате Y-m-d G:i:s'
                example: '2017-09-20 19:00:00'
      responses:
        '200':
          description: Время успешно добавлено
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                time_start: '2017-09-21 08:20:31'
                time_finish: '2017-09-29 02:25:24'
                user_id: 1
                task_id: 4
              response:
                id: 1
                time_start: '2017-09-21 08:20:31'
                time_finish: '2017-09-29 02:25:24'
                user_id: 1
                task_id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasksTime
      summary: Изменение промежутка времени выполнения задачи
      description: Изменение промежутка времени выполнения задачи
      operationId: putTaskTime
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - id
              - user_id
              - task_id
              - time_start
              - time_finish
            properties:
              id:
                type: string
                maxLength: 10
                description: id промежутка
                example: 1
              user_id:
                type: string
                maxLength: 10
                description: id пользователя
                example: 4
              task_id:
                type: string
                maxLength: 10
                description: id задачи
                example: 1
              time_start:
                type: string
                maxLength: 10
                description: 'время, в формате Y-m-d G:i:s'
                example: '2017-09-20 16:00:00'
              time_finish:
                type: string
                maxLength: 10
                description: 'время, в формате Y-m-d G:i:s'
                example: '2017-09-20 19:00:00'
      responses:
        '200':
          description: Время успешно изменено
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
                time_start: '2017-09-21 08:20:31'
                time_finish: '2017-09-29 02:25:24'
                user_id: 1
                task_id: 4
              response:
                id: 1
                time_start: '2017-09-21 08:20:31'
                time_finish: '2017-09-29 02:25:24'
                user_id: 1
                task_id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/tasks/time/{id}':
    delete:
      tags:
        - tasksTime
      summary: Удаление промежутка времени по его id
      description: Удаление промежутка времени по его id
      operationId: deleteTasksTimeByTId
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: ID временного промежутка
          type: integer
      responses:
        '200':
          description: Успешное получение
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/{task_id}/time':
    get:
      tags:
        - tasksTime
      summary: Получение списка промежутков времени по id задачи
      description: Получение списка промежутков времени задачи по её id
      operationId: getTasksTimeListByTaskId
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: task_id
          required: true
          description: ID задачи
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                wasted_time: 259200
                time_list:
                  - id: 9
                    time_start: '2017-12-13 00:00:00'
                    time_finish: '2017-12-14 00:00:00'
                    task_id: '1'
                    user_id: '4'
                  - id: 10
                    time_start: '2017-12-11 00:00:00'
                    time_finish: '2017-12-12 00:00:00'
                    task_id: '1'
                    user_id: '4'
                  - id: 11
                    time_start: '2017-12-13 00:00:00'
                    time_finish: '2017-12-14 00:00:00'
                    task_id: '1'
                    user_id: '5'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/{task_id}/time/user/{user_id}':
    get:
      tags:
        - tasksTime
      summary: Получение списка промежутков времени по id залачи и id пользователя
      description: >-
        Получение списка промежутков времени задачи по её id и по id
        пользователя
      operationId: getTasksTimeListByTaskIdAndUserId
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: task_id
          required: true
          description: ID задачи
          type: integer
        - in: path
          name: user_id
          required: true
          description: ID пользователя
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                wasted_time: 172800
                time_list:
                  - id: 9
                    time_start: '2017-12-13 00:00:00'
                    time_finish: '2017-12-14 00:00:00'
                    task_id: '1'
                    user_id: '4'
                  - id: 10
                    time_start: '2017-12-11 00:00:00'
                    time_finish: '2017-12-12 00:00:00'
                    task_id: '1'
                    user_id: '4'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasklist:
    get:
      tags:
        - tasks
      summary: Получение иерархичного списка задач
      description: >-
        Получение полного (запрос без параметров) или страничного иерархичного
        списка задач (запрос хотябы с параметром count), включающего группы и
        проекты. Фильтрация и сортировка происходят по полям групп задач,
        сортировать и фильтровать по полям задач в этом запросе нельзя
      operationId: getFullTasksList
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка задач
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                groups:
                  - id: 1
                    name: Без группы
                    description: >-
                      Стандартная группа задач, сюда попадают все задачи без
                      группы
                    sort: 100
                    tasks:
                      - id: 1
                        created_at: '2017-09-21 08:20:31'
                        updated_at: '2017-09-29 01:56:31'
                        name: Тестовая задача
                        description: Описание тестовой задачи
                        taskmaster_id: 4
                        responsible_id: 4
                        project_id: 1
                        group_id: 1
                        deadline: null
                        sort: 100
                        status_id: 2
                        parent_task_id: null
                        time_start: '2017-09-29 00:00:00'
                        time_finish: '2017-09-29 01:00:00'
                        wasted_time: '10800'
                    projects: []
                  - id: 2
                    name: В работе
                    description: Все задачи в работе
                    sort: 100
                    tasks:
                      - id: 6
                        created_at: '2017-09-28 03:12:51'
                        updated_at: '2017-09-28 05:41:31'
                        name: Тестовая задача 6
                        description: Описание тестовой задачи 6
                        taskmaster_id: 4
                        responsible_id: 4
                        project_id: 1
                        group_id: 2
                        deadline: null
                        sort: 100
                        status_id: 1
                        parent_task_id: null
                        time_start: null
                        time_finish: null
                        wasted_time: null
                      - id: 9
                        created_at: '2017-09-28 05:43:28'
                        updated_at: '2017-09-28 05:43:28'
                        name: Тестовая задача 9
                        description: Описание тестовой задачи 9
                        taskmaster_id: 4
                        responsible_id: 4
                        project_id: 1
                        group_id: 2
                        deadline: null
                        sort: 100
                        status_id: 1
                        parent_task_id: null
                        time_start: null
                        time_finish: null
                        wasted_time: null
                    projects:
                      - id: 5
                        created_at: '2017-09-19 06:09:00'
                        updated_at: '2017-09-19 06:09:00'
                        name: Проект 2
                        description: Тестовый проект 2
                        group_id: 2
                        sort: 100
                        tasks:
                          - id: 2
                            created_at: '2017-09-27 01:44:04'
                            updated_at: '2017-09-28 05:41:08'
                            name: Тестовая задача 2
                            description: Описание тестовой задачи 2
                            taskmaster_id: 4
                            responsible_id: 4
                            project_id: 5
                            group_id: 2
                            deadline: null
                            sort: 100
                            status_id: 1
                            parent_task_id: null
                            time_start: null
                            time_finish: null
                            wasted_time: null
                          - id: 7
                            created_at: '2017-09-28 03:14:01'
                            updated_at: '2017-09-28 05:40:57'
                            name: Тестовая задача 7
                            description: Описание тестовой задачи 7
                            taskmaster_id: 4
                            responsible_id: 4
                            project_id: 5
                            group_id: 2
                            deadline: null
                            sort: 100
                            status_id: 1
                            parent_task_id: null
                            time_start: null
                            time_finish: null
                            wasted_time: null
                      - id: 6
                        created_at: '2017-09-19 06:09:00'
                        updated_at: '2017-09-19 06:09:00'
                        name: Проект 3
                        description: Тестовый проект 3
                        group_id: 2
                        sort: 100
                        tasks:
                          - id: 8
                            created_at: '2017-09-28 05:43:03'
                            updated_at: '2017-09-28 05:43:03'
                            name: Тестовая задача 8
                            description: Описание тестовой задачи 8
                            taskmaster_id: 4
                            responsible_id: 4
                            project_id: 6
                            group_id: 2
                            deadline: null
                            sort: 100
                            status_id: 1
                            parent_task_id: null
                            time_start: null
                            time_finish: null
                            wasted_time: null
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                groups:
                  total: 2
                  per_page: '1'
                  current_page: 1
                  last_page: 2
                  next_page_url: 'http://crm.lets-code.ru/api/tasklist?page=2'
                  prev_page_url: null
                  from: 1
                  to: 1
                  data:
                    - id: 1
                      name: Без группы
                      description: >-
                        Стандартная группа задач, сюда попадают все задачи без
                        группы
                      sort: 100
                      tasks:
                        - id: 1
                          created_at: '2017-09-21 08:20:31'
                          updated_at: '2017-09-29 01:56:31'
                          name: Тестовая задача
                          description: Описание тестовой задачи
                          taskmaster_id: 4
                          responsible_id: 4
                          project_id: 1
                          group_id: 1
                          deadline: null
                          sort: 100
                          status_id: 2
                          parent_task_id: null
                          time_start: '2017-09-29 00:00:00'
                          time_finish: '2017-09-29 01:00:00'
                          wasted_time: '10800'
                      projects: []
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/coexecutor:
    post:
      tags:
        - tasks
      summary: Добавление соисполнителя к задаче
      description: Добавление соисполнителя к задаче
      operationId: postTaskCoexecutor
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - executor_id
            properties:
              task_id:
                type: integer
                maxLength: 10
                description: id задачи
                example: 2
              executor_id:
                type: integer
                maxLength: 10
                description: id соисполнителя (пользователя)
                example: 3
      responses:
        '200':
          description: Задача успешно добавлена
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                task_id: '1'
                executor_id: '5'
              response:
                task_id: '1'
                executor_id: '5'
                id: 5
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/tasks/{task_id}/coexecutor':
    get:
      tags:
        - tasks
      summary: Получение соисполнителей задачи
      description: Получение списка соисполнителей задачи
      operationId: getTasksCoexecutors
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'ID задачи, у которой нужно получить соисполнителей'
          type: integer
      responses:
        '200':
          description: Успешное получение списка соисполнителей
          examples:
            Прмиер:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                task_id: '1'
              response:
                - id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: 1
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2017-08-22 01:14:15'
                - id: 5
                  login: yazu
                  email: speed.live2@mail.ru
                  sort: 100
                  created_at: '2017-07-28 05:37:11'
                  updated_at: '2017-07-28 05:37:11'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/{task_id}/coexecutor/{id}':
    delete:
      tags:
        - tasks
      summary: Удаление соисполнителя у задачи
      description: Удаление соисполнителя у задачи
      operationId: deleteTasksCoexecutorById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: task_id
          required: true
          description: 'ID группы, у которой нужно удалить соисполнителя'
          type: integer
        - in: path
          name: id
          required: true
          description: 'ID пользователя, которого нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление соисполнителя
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/groups:
    post:
      tags:
        - tasksGroup
      summary: Добавление новой группы задач
      description: Добавление новой группы задач
      operationId: postTaskGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TasksGroup'
      responses:
        '200':
          description: Группа успешно добавлена
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Группа для примера
                description: Это просто группа для демонстрации
                sort: null
              response:
                name: Группа для примера
                description: Это просто группа для демонстрации
                sort: 100
                id: 3
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasksGroup
      summary: Изменение существующей группы задач
      description: Изменение существующей группы задач
      operationId: putTaskGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TasksGroup'
      responses:
        '200':
          description: Группа успешно изменена
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3
                name: Группа для примера
                description: Это просто группа для демонстрации
                sort: null
              response:
                name: Группа для примера
                description: Это просто группа для демонстрации
                sort: 100
                id: 3
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - tasksGroup
      summary: Получение списка групп задач
      description: >-
        Получение полного (запрос без параметров) или страничного списка групп
        задач (запрос хотябы с параметром count)
      operationId: getTasksGroups
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка групп
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Без группы
                  description: >-
                    Стандартная группа задач, сюда попадают все задачи без
                    группы
                  sort: 100
                - id: 2
                  name: В работе
                  description: Все задачи в работе
                  sort: 100
                - id: 3
                  name: Группа для примера
                  description: Это просто группа для демонстрации
                  sort: 100
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 3
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://crm.lets-code.ru/api/tasks/groups?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: Без группы
                    description: >-
                      Стандартная группа задач, сюда попадают все задачи без
                      группы
                    sort: 100
                  - id: 2
                    name: В работе
                    description: Все задачи в работе
                    sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/groups/{id}':
    get:
      tags:
        - tasksGroup
      summary: Получение группы задач
      description: Получение группы задач по её id
      operationId: getTasksGroupsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID группы, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение группы
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                name: Без группы
                description: 'Стандартная группа задач, сюда попадают все задачи без группы'
                sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - tasksGroup
      summary: Удаление группы задач
      description: Удаление группы задач по её id
      operationId: deleteTasksGroupsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID группы, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление группы
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/groups/{id}/tasks':
    get:
      tags:
        - tasksGroup
      summary: Получение списка задач в группе
      description: 'Получение списка задач, которые находятся в группе'
      operationId: getTasksInGroupsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID группы, задачи из которой нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '2'
              response:
                - id: 1
                  created_at: '2017-09-21 08:20:31'
                  updated_at: '2017-12-14 02:14:40'
                  name: Тестовая задача
                  description: Описание тестовой задачи
                  taskmaster_id: '4'
                  responsible_id: '4'
                  project_id: '1'
                  deadline: null
                  sort: '100'
                  status: '1'
                  status_id: '1'
                  parent_task_id: null
                  type: '0'
                  time_start: '2017-12-14 01:00:00'
                  time_finish: null
                  wasted_time: '10800'
                  timeline_id: null
                - id: 2
                  created_at: '2017-09-27 01:44:04'
                  updated_at: '2017-12-14 02:03:22'
                  name: Тестовая задача 2
                  description: Описание тестовой задачи 2
                  taskmaster_id: '4'
                  responsible_id: '4'
                  project_id: '5'
                  deadline: null
                  sort: '100'
                  status: '1'
                  status_id: '1'
                  parent_task_id: null
                  type: '0'
                  time_start: '2017-12-14 00:00:00'
                  time_finish: null
                  wasted_time: null
                  timeline_id: null
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/addgroup:
    post:
      tags:
        - tasks
      summary: Добавление задачи в группу
      description: Добавление задачи в группу
      operationId: postTaskToGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - group_id
            properties:
              task_id:
                type: string
                description: id задачи
                example: 2
              group_id:
                type: integer
                description: id группы
                example: 3
      responses:
        '200':
          description: Задача добавленна в группу
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                task_id: '1'
                group_id: '2'
              response:
                id: 1
                task_id: '1'
                group_id: '2'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - tasks
      summary: Удаление задачи из группы
      description: Удаление задачи из группу
      operationId: deleteTaskFromGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - group_id
            properties:
              task_id:
                type: string
                description: id задачи
                example: 2
              group_id:
                type: integer
                description: id группы
                example: 3
      responses:
        '200':
          description: Задача удалена из группы
          schema:
            $ref: '#/definitions/TrueResponse'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /tasks/project:
    post:
      tags:
        - tasksProjects
      summary: Добавление нового проекта
      description: Добавление нового проекта
      operationId: postTaskProject
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TaskProject'
      responses:
        '200':
          description: Проект успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Тестовый проект 3
                description: Это просто проект для демонстрации
                group_id: '2'
                sort: null
              response:
                name: Тестовый проект 3
                description: Это просто проект для демонстрации
                sort: 100
                group_id: '2'
                updated_at: '2017-09-29 03:00:35'
                created_at: '2017-09-29 03:00:35'
                id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasksProjects
      summary: Изменение существующего проекта
      description: Изменение существующего проекта
      operationId: putTaskProject
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TaskProject'
      responses:
        '200':
          description: Проект успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 7
                name: Тестовый проект 3
                description: Это просто проект для демонстрации
                group_id: '2'
                sort: null
              response:
                name: Тестовый проект 3
                description: Это просто проект для демонстрации
                sort: 100
                group_id: '2'
                updated_at: '2017-09-29 03:00:35'
                created_at: '2017-09-29 03:00:35'
                id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - tasksProjects
      summary: Получение списка проектов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        проектов (запрос хотябы с параметром count)
      operationId: getTasksProjects
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка групп
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Общие задачи
                  description: >-
                    Это стандартный проект, куда попадают все задачи без
                    назначенного проекта
                  group_id: 1
                  sort: 1
                  created_at: '2017-09-19 06:09:00'
                  updated_at: '2017-09-19 06:09:00'
                - id: 5
                  name: Проект 2
                  description: Тестовый проект 2
                  group_id: 2
                  sort: 100
                  created_at: '2017-09-19 06:09:00'
                  updated_at: '2017-09-19 06:09:00'
                - id: 6
                  name: Проект 3
                  description: Тестовый проект 3
                  group_id: 2
                  sort: 100
                  created_at: '2017-09-19 06:09:00'
                  updated_at: '2017-09-19 06:09:00'
                - id: 7
                  name: Тестовый проект 3
                  description: Это просто проект для демонстрации
                  group_id: 2
                  sort: 100
                  created_at: '2017-09-29 03:00:35'
                  updated_at: '2017-09-29 03:00:35'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 4
                per_page: '1'
                current_page: 1
                last_page: 4
                next_page_url: 'http://crm.lets-code.ru/api/tasks/project?page=2'
                prev_page_url: null
                from: 1
                to: 1
                data:
                  - id: 1
                    name: Общие задачи
                    description: >-
                      Это стандартный проект, куда попадают все задачи без
                      назначенного проекта
                    group_id: 1
                    sort: 1
                    created_at: '2017-09-19 06:09:00'
                    updated_at: '2017-09-19 06:09:00'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/project/{id}':
    get:
      tags:
        - tasksProjects
      summary: Получение проекта задач
      description: Получение проекта задач по её id
      operationId: getTasksProjectsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID проекта, который нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение проекта
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                created_at: '2017-09-19 06:09:00'
                updated_at: '2017-09-19 06:09:00'
                name: Общие задачи
                description: >-
                  Это стандартный проект, куда попадают все задачи без
                  назначенного проекта
                group_id: 1
                sort: 1
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - tasksProjects
      summary: Удаление проекта задач
      description: Удаление проекта задач по её id
      operationId: deleteTasksProjectsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID проекта, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление проекта
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/project/{id}/status':
    get:
      tags:
        - tasksProjects
      summary: Получение списка статусов в проекте
      description: Получение списка статусов в проекте по его id
      operationId: getTasksProjectsStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID проекта, статусы которого нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение проекта
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                - id: 1
                  name: Поставлена
                  description: Задача ожидает выполнения
                  project_id: 1
                  sort: 1
                - id: 2
                  name: В работе
                  description: Задача находится в процессе выполнения
                  project_id: 1
                  sort: 2
                - id: 3
                  name: Выполнена
                  description: Задача выполнена
                  project_id: 1
                  sort: 3
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/status:
    post:
      tags:
        - tasksStatus
      summary: Добавление нового статуса
      description: Добавление нового статуса
      operationId: postTaskStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TaskStatus'
      responses:
        '200':
          description: Статус успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                name: Статус
                description: Тестовый статус
                project_id: '5'
                sort: null
              response:
                name: Статус
                description: Тестовый статус
                sort: 100
                project_id: '5'
                id: 6
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - tasksStatus
      summary: Изменение существующего статуса
      description: Изменение существующего статуса
      operationId: putTaskStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/TaskStatus'
      responses:
        '200':
          description: Статус успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 6
                name: Статус
                description: Тестовый статус
                project_id: '5'
                sort: null
              response:
                name: Статус
                description: Тестовый статус
                sort: 100
                project_id: '5'
                id: 6
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - tasksStatus
      summary: Получение списка статусов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        статусов (запрос хотябы с параметром count)
      operationId: getTasksStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка групп
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Поставлена
                  description: Задача ожидает выполнения
                  project_id: 1
                  sort: 1
                - id: 2
                  name: В работе
                  description: Задача находится в процессе выполнения
                  project_id: 1
                  sort: 2
                - id: 3
                  name: Выполнена
                  description: Задача выполнена
                  project_id: 1
                  sort: 3
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://crm.lets-code.ru/api/tasks/status?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: Поставлена
                    description: Задача ожидает выполнения
                    project_id: 1
                    sort: 1
                  - id: 2
                    name: В работе
                    description: Задача находится в процессе выполнения
                    project_id: 1
                    sort: 2
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/tasks/status/{id}':
    get:
      tags:
        - tasksStatus
      summary: Получение статуса задач
      description: Получение статуса задач по его id
      operationId: getTasksStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID статуса, который нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение проекта
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                name: Поставлена
                description: Задача ожидает выполнения
                project_id: 1
                sort: 1
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - tasksStatus
      summary: Удаление стататуса
      description: Удаление статуса задач по её id
      operationId: deleteTasksStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID статуса, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление статуса
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /tasks/status/change:
    post:
      tags:
        - tasksStatus
      summary: Изменение статуса у задачи
      description: Изменяет статус задачи на переданный
      operationId: postTaskStatusChange
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - task_id
              - status_id
            properties:
              task_id:
                type: integer
                maxLength: 10
                description: 'id задачи, у которой нужно изменить статус'
                example: 1
              status_id:
                type: integer
                maxLength: 10
                description: 'id статуса, который нужно установить'
                example: 2
      responses:
        '200':
          description: Статус задачи успешно изменён
          examples:
            Пример: null
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /comments:
    get:
      tags:
        - comments
      summary: Получение списка комментариев
      description: >-
        Получение полного (запрос без параметров) или страничного списка задач
        (запрос хотябы с параметром count) Список комментариев конкретной
        сущности можно получит так: '?filter=[["entity_id","=","11"], "and",
        ["entity","=","task"]]'
      operationId: getComments
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка комментариев
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  user_id: 4
                  text: тестовый комментарий 3
                  entity: task
                  entity_id: 10
                  module_id: 8
                  created_at: '2017-11-06 07:12:37'
                  updated_at: '2017-11-06 07:12:37'
                - id: 2
                  user_id: 4
                  text: тестовый комментарий 3
                  entity: task
                  entity_id: 11
                  module_id: 8
                  created_at: '2017-11-06 07:50:36'
                  updated_at: '2017-11-06 07:50:36'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 6
                per_page: '2'
                current_page: 1
                last_page: 3
                next_page_url: 'http://crm.lets-code.ru/api/comments?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    user_id: 4
                    text: тестовый комментарий 3
                    entity: task
                    entity_id: 10
                    module_id: 8
                    created_at: '2017-11-06 07:12:37'
                    updated_at: '2017-11-06 07:12:37'
                  - id: 2
                    user_id: 4
                    text: тестовый комментарий 3
                    entity: task
                    entity_id: 11
                    module_id: 8
                    created_at: '2017-11-06 07:50:36'
                    updated_at: '2017-11-06 07:50:36'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - comments
      summary: Добавление нового комментария
      description: Добавление нового комментария
      operationId: postComments
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: Комментарий успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                text: 'Задачу сделал, можно закрывать'
                entity: task
                entity_id: '2'
                module_code: tasks
                file: null
                module_id: 8
                user_id: 4
              response:
                text: 'Задачу сделал, можно закрывать'
                entity: task
                entity_id: '2'
                module_id: 8
                user_id: 4
                updated_at: '2017-11-15 01:28:12'
                created_at: '2017-11-15 01:28:12'
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - comments
      summary: Изменение комментария
      description: >-
        Изменение существующего комментария. Для изменения нужно отправить POST
        запрос с параметром "_method=PUT". В противном случае изменение файлов
        не работает. (PUT не поддерживает формат form-data)
      operationId: putComments
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: Комментарий успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                text: 'Задачу сделал, можно закрывать, комментарии дам позже'
                entity: task
                entity_id: '2'
                module_code: tasks
                file: null
                module_id: 8
                user_id: 4
              response:
                id: 4
                updated_at: '2017-11-15 01:28:12'
                created_at: '2017-11-15 01:28:12'
                user_id: 4
                text: 'Задачу сделал, можно закрывать, комментарии дам позже'
                entity: task
                entity_id: '2'
                module_id: 8
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/comments/{id}':
    delete:
      tags:
        - comments
      summary: Удаление комментария
      description: Удаление комментария по его id
      operationId: deleteCommentById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID комментария, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/comments/{id}/file/{file_id}':
    delete:
      tags:
        - comments
      summary: Удаление файла у комментария
      description: Удаление файла у комментария по их id
      operationId: deleteCommentFileById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID комментария, у которого удаляется файл'
          type: integer
        - in: path
          name: file_id
          required: true
          description: 'ID файла, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          schema:
            $ref: '#/definitions/TrueResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /customers:
    get:
      tags:
        - customers
      summary: Получение списка контрагентов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        контрагентов (запрос хотябы с параметром count)
      operationId: getCustomers
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка комментариев
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts:
                    - id: 25
                      name: tt
                      description: null
                      phone: +7 (111) 111-11-11
                      email: tt@tt.ttt
                      customer_id: '70'
                      sort: '100'
                    - id: 26
                      name: test
                      description: null
                      phone: +7 (111) 111-11-11
                      email: test@tt.tt
                      customer_id: '70'
                      sort: '100'
                  addresses: []
                  group:
                    - id: 3
                      name: Тестовая группа контерагентов
                      description: null
                      code: test
                      sort: '100'
                      pivot:
                        customer_id: '70'
                        group_id: '3'
                    - id: 4
                      name: Тестовая группа контерагентов 2
                      description: null
                      code: test2
                      sort: '100'
                      pivot:
                        customer_id: '70'
                        group_id: '4'
                - id: 73
                  created_at: '2018-04-17 07:38:10'
                  updated_at: '2018-04-17 07:38:10'
                  name: ИП Чечелев Антон Владимирович
                  type: '3'
                  sort: '100'
                  inn: '272321804543'
                  kpp: null
                  passport_number: null
                  contacts: []
                  addresses: []
                  group: []
                - id: 74
                  created_at: '2018-04-17 07:52:23'
                  updated_at: '2018-04-17 07:52:23'
                  name: ООО "Зелёный Офис"
                  type: '1'
                  sort: '100'
                  inn: '2723152104'
                  kpp: '272301001'
                  passport_number: null
                  contacts:
                    - id: 34
                      name: test
                      description: null
                      phone: +7 (123) 132-13-12
                      email: tt@tt.tt
                      customer_id: '74'
                      sort: '100'
                  addresses: []
                  group: []
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 5
                per_page: '2'
                current_page: 1
                last_page: 3
                next_page_url: 'http://backend.zelenoe.pro/api/customers?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 70
                    created_at: '2018-04-16 13:06:34'
                    updated_at: '2018-04-16 13:06:34'
                    name: ООО "ГУГЛ"
                    type: '1'
                    sort: '100'
                    inn: '7704582421'
                    kpp: '770501001'
                    passport_number: null
                    contacts:
                      - id: 25
                        name: tt
                        description: null
                        phone: +7 (111) 111-11-11
                        email: tt@tt.ttt
                        customer_id: '70'
                        sort: '100'
                      - id: 26
                        name: test
                        description: null
                        phone: +7 (111) 111-11-11
                        email: test@tt.tt
                        customer_id: '70'
                        sort: '100'
                    addresses: []
                    group:
                      - id: 3
                        name: Тестовая группа контерагентов
                        description: null
                        code: test
                        sort: '100'
                        pivot:
                          customer_id: '70'
                          group_id: '3'
                      - id: 4
                        name: Тестовая группа контерагентов 2
                        description: null
                        code: test2
                        sort: '100'
                        pivot:
                          customer_id: '70'
                          group_id: '4'
                  - id: 73
                    created_at: '2018-04-17 07:38:10'
                    updated_at: '2018-04-17 07:38:10'
                    name: ИП Чечелев Антон Владимирович
                    type: '3'
                    sort: '100'
                    inn: '272321804543'
                    kpp: null
                    passport_number: null
                    contacts: []
                    addresses: []
                    group: []
                  - id: 74
                    created_at: '2018-04-17 07:52:23'
                    updated_at: '2018-04-17 07:52:23'
                    name: ООО "Зелёный Офис"
                    type: '1'
                    sort: '100'
                    inn: '2723152104'
                    kpp: '272301001'
                    passport_number: null
                    contacts:
                      - id: 34
                        name: test
                        description: null
                        phone: +7 (123) 132-13-12
                        email: tt@tt.tt
                        customer_id: '74'
                        sort: '100'
                    addresses: []
                    group: []

        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - customers
      summary: Добавление нового контерагента
      description: Добавление нового контерагента
      operationId: postCustomers
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Customers'
      responses:
        '200':
          description: Контрагент успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts: []
                addresses: []
                group: []
              response:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts: []
                addresses: []
                group: []
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - customers
      summary: Изменение комментария
      description: Изменение существующего контрагента.
      operationId: putCustomers
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Customers'
      responses:
        '200':
          description: Комментарий успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts: []
                addresses: []
                group: []
              response:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts: []
                addresses: []
                group: []
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /customers/addresses/attach:
    post:
      tags:
        - customers
      summary: Добавление адреса к контрагенту
      description: Добавление адреса к контрагенту
      operationId: attachCustomersAddress
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - customer_id
              - address_id
            properties:
              customer_id:
                type: integer
                maxLength: 10
                description: ID контрагента
                example: 3
              address_id:
                type: integer
                maxLength: 10
                description: ID адреса
                example: 66
      responses:
        '200':
          description: Адрес успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                customer_id: '66'
                address_id: '5'
              response:
                id: 66
                created_at: '2018-03-20 07:33:03'
                updated_at: '2018-03-30 09:44:17'
                name: ООО "Рога и Копыта"
                type: '1'
                inn: '1231231213'
                kpp: '1234567123'
                passport_number: null
                sort: '100'
                contacts:
                  - id: 20
                    name: test
                    description: null
                    phone: +7 (777) 777-77-77
                    email: tt@tt.tt
                    customer_id: '66'
                    sort: '100'
                  - id: 21
                    name: test21
                    description: null
                    phone: +7 (123) 123-12-31
                    email: tt@tt.ttt
                    customer_id: '66'
                    sort: '100'
                  - id: 24
                    name: Тест
                    description: null
                    phone: +7 (999) 999-99-99
                    email: test@mail.ru
                    customer_id: '66'
                    sort: '100'
                addresses:
                  - id: 5
                    value:
                      area: null
                      city: Зеленоград
                      house: 30А
                      okato: '45272580000'
                      oktmo: '45330000'
                      value: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                      region: Москва
                      street: Зелёная
                      country: Россия
                      fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      kladr_id: '7700000200013320011'
                      area_type: null
                      city_area: Зеленоградский
                      city_type: г
                      fias_code: '77000002000000013320011'
                      house_type: д
                      settlement: null
                      postal_code: '124365'
                      region_type: г
                      street_type: ул
                      area_fias_id: null
                      city_fias_id: ec44c0ee-bf24-41c8-9e1c-76136ab05cbf
                      area_kladr_id: null
                      city_district: Крюково
                      city_kladr_id: '7700000200000'
                      house_fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      house_kladr_id: '7700000200013320011'
                      region_fias_id: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
                      street_fias_id: 13cd5e76-d3ce-4e3f-ac78-b84b5a9e3458
                      region_kladr_id: '7700000000000'
                      settlement_type: null
                      street_kladr_id: '77000002000133200'
                      city_district_type: р-н
                      settlement_fias_id: null
                      unrestricted_value: 'г Москва, г Зеленоград, р-н Крюково, ул Зелёная, д 30А, кв 3'
                      settlement_kladr_id: null
                      settlement_with_type: null
                      city_district_fias_id: null
                      city_district_kladr_id: null
                    address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                    description: тестовое описание
                    pivot:
                      customer_id: '66'
                      address_id: '5'
                  - id: 5
                    value:
                      area: null
                      city: Зеленоград
                      house: 30А
                      okato: '45272580000'
                      oktmo: '45330000'
                      value: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                      region: Москва
                      street: Зелёная
                      country: Россия
                      fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      kladr_id: '7700000200013320011'
                      area_type: null
                      city_area: Зеленоградский
                      city_type: г
                      fias_code: '77000002000000013320011'
                      house_type: д
                      settlement: null
                      postal_code: '124365'
                      region_type: г
                      street_type: ул
                      area_fias_id: null
                      city_fias_id: ec44c0ee-bf24-41c8-9e1c-76136ab05cbf
                      area_kladr_id: null
                      city_district: Крюково
                      city_kladr_id: '7700000200000'
                      house_fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      house_kladr_id: '7700000200013320011'
                      region_fias_id: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
                      street_fias_id: 13cd5e76-d3ce-4e3f-ac78-b84b5a9e3458
                      region_kladr_id: '7700000000000'
                      settlement_type: null
                      street_kladr_id: '77000002000133200'
                      city_district_type: р-н
                      settlement_fias_id: null
                      unrestricted_value: 'г Москва, г Зеленоград, р-н Крюково, ул Зелёная, д 30А, кв 3'
                      settlement_kladr_id: null
                      settlement_with_type: null
                      city_district_fias_id: null
                      city_district_kladr_id: null
                    address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                    description: тестовое описание
                    pivot:
                      customer_id: '66'
                      address_id: '5'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /customers/addresses/detach:
    post:
      tags:
        - customers
      summary: Удаление адреса у контрагента
      description: Удаление адреса у контрагента
      operationId: detachCustomersAddress
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - customer_id
              - address_id
            properties:
              customer_id:
                type: integer
                maxLength: 10
                description: ID контрагента
                example: 3
              address_id:
                type: integer
                maxLength: 10
                description: ID адреса
                example: 66
      responses:
        '200':
          description: Адрес успешно удалён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                customer_id: '66'
                address_id: '5'
              response:
                id: 66
                created_at: '2018-03-20 07:33:03'
                updated_at: '2018-03-30 09:44:17'
                name: ООО "Рога и Копыта"
                type: '1'
                inn: '1231231213'
                kpp: '1234567123'
                passport_number: null
                sort: '100'
                contacts:
                  - id: 20
                    name: test
                    description: null
                    phone: +7 (777) 777-77-77
                    email: tt@tt.tt
                    customer_id: '66'
                    sort: '100'
                  - id: 21
                    name: test21
                    description: null
                    phone: +7 (123) 123-12-31
                    email: tt@tt.ttt
                    customer_id: '66'
                    sort: '100'
                  - id: 24
                    name: Тест
                    description: null
                    phone: +7 (999) 999-99-99
                    email: test@mail.ru
                    customer_id: '66'
                    sort: '100'
                addresses:
                  - id: 5
                    value:
                      area: null
                      city: Зеленоград
                      house: 30А
                      okato: '45272580000'
                      oktmo: '45330000'
                      value: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                      region: Москва
                      street: Зелёная
                      country: Россия
                      fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      kladr_id: '7700000200013320011'
                      area_type: null
                      city_area: Зеленоградский
                      city_type: г
                      fias_code: '77000002000000013320011'
                      house_type: д
                      settlement: null
                      postal_code: '124365'
                      region_type: г
                      street_type: ул
                      area_fias_id: null
                      city_fias_id: ec44c0ee-bf24-41c8-9e1c-76136ab05cbf
                      area_kladr_id: null
                      city_district: Крюково
                      city_kladr_id: '7700000200000'
                      house_fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                      house_kladr_id: '7700000200013320011'
                      region_fias_id: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
                      street_fias_id: 13cd5e76-d3ce-4e3f-ac78-b84b5a9e3458
                      region_kladr_id: '7700000000000'
                      settlement_type: null
                      street_kladr_id: '77000002000133200'
                      city_district_type: р-н
                      settlement_fias_id: null
                      unrestricted_value: 'г Москва, г Зеленоград, р-н Крюково, ул Зелёная, д 30А, кв 3'
                      settlement_kladr_id: null
                      settlement_with_type: null
                      city_district_fias_id: null
                      city_district_kladr_id: null
                    address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                    description: тестовое описание
                    pivot:
                      customer_id: '66'
                      address_id: '5'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/customers/byid/{id}':
    get:
      tags:
        - customers
      summary: Получение контрагента
      description: Получение контрагента по id
      operationId: getCustomersById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID группы, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 70
              response:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts:
                  - id: 25
                    name: tt
                    description: null
                    phone: +7 (111) 111-11-11
                    email: tt@tt.ttt
                    customer_id: '70'
                    sort: '100'
                  - id: 26
                    name: test
                    description: null
                    phone: +7 (111) 111-11-11
                    email: test@tt.tt
                    customer_id: '70'
                    sort: '100'
                addresses: []
                group:
                  - id: 3
                    name: Тестовая группа контерагентов
                    description: null
                    code: test
                    sort: '100'
                    pivot:
                      customer_id: '70'
                      group_id: '3'
                  - id: 4
                    name: Тестовая группа контерагентов 2
                    description: null
                    code: test2
                    sort: '100'
                    pivot:
                      customer_id: '70'
                      group_id: '4'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - customers
      summary: Удаление контрагента
      description: >-
        Удаляет контрагента по id, так же удаляет документы и контакты у данного
        контрагента. (Об этом стоит предупредить пользователя перед удалением).
        Возвратит количество удалённых контактов, документов и результат
        удаления контрагента.
      operationId: deleteCustomerById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID контрагента, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                documents: 2
                contacts: 1
                customer: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /customers/contacts:
    post:
      tags:
        - customersContacts
      summary: Добавление нового контакта
      description: Добавление нового контакта к контрагенту
      operationId: postCustomerContacts
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersContacts'
      responses:
        '200':
          description: Комментарий успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Директор Иванов И.И
                description: 'Директор, звонить после 11:00'
                phone: '+79098763456'
                email: dir@rendk.ru
                customer_id: '1'
                sort: null
              response:
                name: Директор Иванов И.И
                description: 'Директор, звонить после 11:00'
                sort: 100
                phone: '+79098763456'
                email: dir@rendk.ru
                customer_id: 1
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - customersContacts
      summary: Изменение контакта
      description: Изменениеконтакта у контрагента
      operationId: putCustomerContacts
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersContacts'
      responses:
        '200':
          description: Комментарий успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
                name: Директор Иванов И.И
                description: 'Директор, звонить после 12:00'
                phone: '+79098763456'
                email: dir@rendk.ru
                customer_id: '1'
                sort: null
                update_id: '4'
              response:
                id: 4
                name: Директор Иванов И.И
                description: 'Директор, звонить после 12:00'
                phone: '+79098763456'
                email: dir@rendk.ru
                customer_id: 1
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - customersContacts
      summary: Получение списка контактов контрагента
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        контактов контрагентов (запрос хотябы с параметром count)
      operationId: getCustomerContacts
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка комментариев
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 4
                  name: Директор Иванов И.И
                  description: 'Директор, звонить после 12:00'
                  phone: '+79098763456'
                  email: dir@rendk.ru
                  customer_id: '1'
                  sort: '100'
                - id: 5
                  name: Менеджер Степанов С.С.
                  description: Менеджер по продажам
                  phone: '+79098763456'
                  email: manager@rendk.ru
                  customer_id: '1'
                  sort: '100'
                - id: 6
                  name: Менеджер Петров С.С.
                  description: Менеджер по продукту
                  phone: '+79098763456'
                  email: manager2@rendk.ru
                  customer_id: '1'
                  sort: '100'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 3
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/customers/contacts?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 4
                    name: Директор Иванов И.И
                    description: 'Директор, звонить после 12:00'
                    phone: '+79098763456'
                    email: dir@rendk.ru
                    customer_id: '1'
                    sort: '100'
                  - id: 5
                    name: Менеджер Степанов С.С.
                    description: Менеджер по продажам
                    phone: '+79098763456'
                    email: manager@rendk.ru
                    customer_id: '1'
                    sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/customers/contacts/byid/{id}':
    get:
      tags:
        - customersContacts
      summary: Получение контакта контрагента
      description: Получение контакта контрагента по ID
      operationId: getCustomersContactsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID контакта, который нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение контакта
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response:
                id: 4
                name: Директор Иванов И.И
                description: 'Директор, звонить после 12:00'
                phone: '+79098763456'
                email: dir@rendk.ru
                customer_id: '1'
                sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - customersContacts
      summary: Удаление контакта у контрагента
      description: Удаляет контакт у контрагента
      operationId: deleteCustomerContactById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID контакта, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /customers/documents:
    post:
      tags:
        - customersDocuments
      summary: Добавление нового документа
      description: Добавление нового документа к контрагенту
      operationId: postCustomerDocument
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersContacts'
      responses:
        '200':
          description: Комментарий успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                name: Договор
                description: Договор на оказание услуг
                sort: null
                file:
                  path: /storage/public/1512700999.jpg
                  local_path: >-
                    /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512700999.jpg
                  user_id: 4
                  name: 1512700999.jpg
                  updated_at: '2017-12-08 02:43:19'
                  created_at: '2017-12-08 02:43:19'
                  id: 76
                  size: 1029824
                type: '1'
                customer_id: '1'
                file_id: 76
              response:
                name: Договор
                description: Договор на оказание услуг
                sort: 100
                type: '1'
                customer_id: '1'
                file_id: 76
                updated_at: '2017-12-08 02:43:20'
                created_at: '2017-12-08 02:43:20'
                id: 13
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - customersDocuments
      summary: Изменение документа
      description: >-
        Изменение документа у контрагента (в запросе не передаётся файл, для
        изменения файла нужно использовать другой запрос)
      operationId: putCustomerDocument
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersContacts'
      responses:
        '200':
          description: Документ успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '13'
                name: Договор
                description: Договор на выполнение работ
                sort: null
                file: null
                type: '2'
                customer_id: '1'
                update_id: '13'
              response:
                id: 13
                created_at: '2017-12-08 02:43:20'
                updated_at: '2017-12-08 02:54:46'
                type: '2'
                customer_id: '1'
                file_id: '76'
                name: Договор
                description: Договор на выполнение работ
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - customersDocuments
      summary: Получение списка документов контрагента
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        документов контрагентов (запрос хотябы с параметром count)
      operationId: getCustomerDocuments
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 2
                  created_at: '2017-12-07 01:44:33'
                  updated_at: '2017-12-07 01:44:33'
                  name: Договор на оказание услуг
                  description: Тестовое описание
                  file_id: '62'
                  customer_id: '1'
                  type: '1'
                  sort: '100'
                  file:
                    id: 62
                    created_at: '2017-12-07 01:44:33'
                    updated_at: '2017-12-07 01:44:33'
                    path: /storage/public/1512611073.jpg
                    local_path: >-
                      /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512611073.jpg
                    user_id: '4'
                    name: 1512611073.jpg
                - id: 3
                  created_at: '2017-12-07 01:57:30'
                  updated_at: '2017-12-07 01:57:30'
                  name: Договор на оказание услуг
                  description: Тестовое описание
                  file_id: null
                  customer_id: '1'
                  type: '1'
                  sort: '100'
                  file: false
                - id: 4
                  created_at: '2017-12-07 02:01:46'
                  updated_at: '2017-12-07 02:01:46'
                  name: Договор на оказание услуг
                  description: Тестовое описание
                  file_id: '64'
                  customer_id: '1'
                  type: '1'
                  sort: '100'
                  file:
                    id: 64
                    created_at: '2017-12-07 02:01:45'
                    updated_at: '2017-12-07 02:01:45'
                    path: /storage/public/1512612105.jpg
                    local_path: >-
                      /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512612105.jpg
                    user_id: '4'
                    name: 1512612105.jpg
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 9
                per_page: '2'
                current_page: 1
                last_page: 5
                next_page_url: 'http://backend.zelenoe.pro/api/customers/documents?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 2
                    created_at: '2017-12-07 01:44:33'
                    updated_at: '2017-12-07 01:44:33'
                    name: Договор на оказание услуг
                    description: Тестовое описание
                    file_id: '62'
                    customer_id: '1'
                    type: '1'
                    sort: '100'
                    file:
                      id: 62
                      created_at: '2017-12-07 01:44:33'
                      updated_at: '2017-12-07 01:44:33'
                      path: /storage/public/1512611073.jpg
                      local_path: >-
                        /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512611073.jpg
                      user_id: '4'
                      name: 1512611073.jpg
                  - id: 3
                    created_at: '2017-12-07 01:57:30'
                    updated_at: '2017-12-07 01:57:30'
                    name: Договор на оказание услуг
                    description: Тестовое описание
                    file_id: null
                    customer_id: '1'
                    type: '1'
                    sort: '100'
                    file: false
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /customers/documents/file:
    put:
      tags:
        - customersDocuments
      summary: Изменение файла документа
      description: Изменение файла у документа контрагента
      operationId: putCustomerDocumentFile
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersDocumentsFile'
      responses:
        '200':
          description: Документ успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '13'
                file:
                  path: /storage/public/1512701973.jpg
                  local_path: >-
                    /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512701973.jpg
                  user_id: 4
                  name: 1512701973.jpg
                  updated_at: '2017-12-08 02:59:33'
                  created_at: '2017-12-08 02:59:33'
                  id: 77
                  size: 1029824
                update_id: '13'
                file_id: 77
              response:
                id: 13
                created_at: '2017-12-08 02:43:20'
                updated_at: '2017-12-08 02:59:35'
                type: '2'
                customer_id: '1'
                file_id: 77
                name: Договор
                description: Договор на выполнение работ
                sort: '100'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/customers/documents/byid/{id}/file':
    delete:
      tags:
        - customersDocuments
      summary: Удаление файла документа у контрагента
      description: >-
        Удаляет файл документа у контрагента (удаляет только сам файл, запись о
        документе сохраняется)
      operationId: deleteCustomerDocumentFileById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID документа, файл которого нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '13'
              response:
                id: 13
                created_at: '2017-12-08 02:43:20'
                updated_at: '2017-12-08 03:05:09'
                type: '2'
                customer_id: '1'
                file_id: null
                name: Договор
                description: Договор на выполнение работ
                sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/customers/documents/byid/{id}':
    get:
      tags:
        - customersDocuments
      summary: Получение документа контрагента
      description: Получение документа контрагента по ID
      operationId: getCustomersDocumentById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID документа, который нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение документа
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '13'
              response:
                id: 13
                created_at: '2017-12-08 02:43:20'
                updated_at: '2017-12-08 03:05:09'
                type: '2'
                customer_id: '1'
                file_id:
                  id: 62
                  created_at: '2017-12-07 01:44:33'
                  updated_at: '2017-12-07 01:44:33'
                  path: /storage/public/1512611073.jpg
                  local_path: >-
                    /var/www/www-root/data/www/backend.zelenoe.pro/storage/public/1512611073.jpg
                  user_id: '4'
                  name: 1512611073.jpg
                name: Договор
                description: Договор на выполнение работ
                sort: '100'
                file: false
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - customersDocuments
      summary: Удаление документа у контрагента (удаляется и сам файл документа)
      description: Удаляет документ у контрагента
      operationId: deleteCustomerDocumentById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID документа, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /customers/documents/type:
    post:
      tags:
        - customersDocumentsType
      summary: Добавление нового типа документа
      description: Добавление нового типа документа к контрагенту
      operationId: postCustomerDocumentType
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersDocumentsType'
      responses:
        '200':
          description: Тип успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Договоры
                sort: null
              response:
                name: Договоры
                sort: 100
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - customersDocumentsType
      summary: Изменение типа документа
      description: Изменение типа документа у контрагента
      operationId: putCustomerDocumentType
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersDocumentsType'
      responses:
        '200':
          description: Тип успешно изменён
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
                name: Договоры
                sort: null
                update_id: '4'
              response:
                id: 4
                name: Договоры
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - customersDocumentsType
      summary: Получение списка типов документов контрагента
      description: >-
        Получение полного (запрос без параметров) или страничного списка типов
        документов контрагентов (запрос хотябы с параметром count)
      operationId: getCustomerDocumentsType
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Договоры
                  sort: '100'
                - id: 2
                  name: ' Счета'
                  sort: '100'
                - id: 3
                  name: Акты
                  sort: '100'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/customers/documents/type?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: Договоры
                    sort: '100'
                  - id: 2
                    name: ' Счета'
                    sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/customers/documents/type/byid/{id}':
    get:
      tags:
        - customersDocumentsType
      summary: Получение типа документа контрагента
      description: Получение типа документа контрагента по ID типа
      operationId: getCustomersDocumentTypeById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID типа документа, который нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение типа документа
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '2'
              response:
                id: 2
                name: ' Счета'
                sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - customersDocumentsType
      summary: >-
        Удаление типа документа у контрагента (предварительно должны быть
        удалены все документы этого типа)
      description: Удаляет типа документа у контрагента
      operationId: deleteCustomerDocumentTypeById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID типа документа, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/customers/group':
    get:
      tags:
        - customersGroup
      summary: Получение списка груп контрагентов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        груп контрагентов (запрос хотябы с параметром count)
      operationId: getCustomersGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение списка комментариев
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 3
                  name: Тестовая группа контерагентов
                  description: null
                  sort: '100'
                  code: test
                - id: 4
                  name: Тестовая группа контерагентов 2
                  description: null
                  sort: '100'
                  code: test2
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 5
                per_page: '2'
                current_page: 1
                last_page: 3
                next_page_url: 'http://backend.zelenoe.pro/api/customers?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 70
                    created_at: '2018-04-16 13:06:34'
                    updated_at: '2018-04-16 13:06:34'
                    name: ООО "ГУГЛ"
                    type: '1'
                    sort: '100'
                    inn: '7704582421'
                    kpp: '770501001'
                    passport_number: null
                    contacts:
                    - id: 3
                      name: Тестовая группа контерагентов
                      description: null
                      sort: '100'
                      code: test
                    - id: 4
                      name: Тестовая группа контерагентов 2
                      description: null
                      sort: '100'
                      code: test2
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    post:
      tags:
        - customersGroup
      summary: Добавление новой группы контерагентов
      description: Добавление новой группы контерагентов
      operationId: postCustomersGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersGroup'
      responses:
        '200':
          description: Контрагент успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:              
                name: Тестовая группа контерагентов
                description: null
                sort: '100'
                code: test
              response:
                id: 3
                name: Тестовая группа контерагентов
                description: null
                sort: '100'
                code: test
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - customersGroup
      summary: Изменение группы контерагентов
      description: Изменение группы контерагентов
      operationId: putCustomersGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CustomersGroup'
      responses:
        '200':
          description: Контрагент успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3              
                name: Тестовая группа контерагентов
                description: null
                sort: '100'
                code: test
              response:
                id: 3
                name: Тестовая группа контерагентов
                description: null
                sort: '100'
                code: test
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/customers/group/byid/{id}':
    get:
      tags:
        - customersGroup
      summary: Получение группы контрагентов
      description: Получение группы контрагентов по id
      operationId: getCustomersGroupById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '3'
              response:
                id: 3
                name: Тестовая группа контерагентов
                description: null
                code: test
                sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - customersGroup
      summary: Удаление группы контрагентов
      description: Удаление группы контрагентов
      operationId: deleteCustomerGroupById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, который нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                documents: 2
                contacts: 1
                customer: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/customers/group/attach':
    post:
      tags:
        - customersGroup
      summary: Добавление контерагента в группу
      description: Добавление контерагента в группу
      operationId: postCustomersToGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - customer_id
              - group_id
            properties:
              customer_id:
                type: integer
                description: ID контрагента
                example: 1
              group_id:
                type: integer
                description: id группы
                example: 2
      responses:
        '200':
          description: Контрагент успешно добавлен в группу
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                customer_id: '70'
                group_id: '3'
              response:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                sort: '100'
                contacts: []
                groups:
                  - id: 3
                    name: Тестовая группа контерагентов
                    description: null
                    code: test
                    sort: '100'
                    pivot:
                      customer_id: '70'
                      group_id: '3'
                addresses: []
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/customers/group/detach':
    post:
      tags:
        - customersGroup
      summary: Удаление контерагента из группы
      description: Удаление контерагента из группы
      operationId: deleteCustomersFromGroup
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - customer_id
              - group_id
            properties:
              customer_id:
                type: integer
                description: ID контрагента
                example: 1
              group_id:
                type: integer
                description: id группы
                example: 2
      responses:
        '200':
          description: Контрагент успешно добавлен в группу
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                customer_id: '70'
                group_id: '3'
              response:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                sort: '100'
                contacts: []
                groups:
                addresses: []
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /deals:
    post:
      tags:
        - deals
      summary: Добавление новой заявки
      description: Добавление новой заявки
      operationId: postDeals
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Deals'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                sort: null
                created_at: null
                updated_at: null
                description: Тестовая заявка
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: null
                to_city: null
                from_street: null
                to_street: null
                from_address: null
                to_address: null
                applicant_id: '4'
                sender_id: '4'
                recipient_id: '4'
                payer_id: '4'
                status_id: '1'
                traking_number: null
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
              response:
                sort: 100
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: null
                to_city: null
                from_street: null
                to_street: null
                from_address: null
                to_address: null
                description: Тестовая заявка
                applicant_id: '4'
                sender_id: '4'
                recipient_id: '4'
                payer_id: '4'
                status_id: '1'
                traking_number: DL-9-37400505
                updated_at: '2017-12-27 02:02:32'
                created_at: '2017-12-27 02:02:32'
                id: 9
                full_price: '{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}'
                price: '773355.5'
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
                executor:
                  id: 1
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - deals
      summary: Изменение заявки
      description: изменение заявки
      operationId: putDeals
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Deals'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 9
                sort: 30
                created_at: null
                updated_at: null
                description: Тестовая заявка
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: null
                to_city: null
                from_street: null
                to_street: null
                from_address: null
                to_address: null
                applicant_id: '4'
                sender_id: '4'
                recipient_id: '4'
                payer_id: '4'
                status_id: '1'
                traking_number: null
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
              response:
                sort: 30
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: null
                to_city: null
                from_street: null
                to_street: null
                from_address: null
                to_address: null
                description: Тестовая заявка
                applicant_id: '4'
                sender_id: '4'
                recipient_id: '4'
                payer_id: '4'
                status_id: '1'
                traking_number: DL-9-37400505
                updated_at: '2017-12-27 02:02:32'
                created_at: '2017-12-27 02:02:32'
                id: 9
                full_price: '{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}'
                price: '773355.5'
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
                executor:
                  id: 1
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - deals
      summary: Получение списка заявок
      description: >-
        Получение полного (запрос без параметров) или страничного списка заявок
        (запрос хотябы с параметром count)
      operationId: getDeals
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 23
                sort: '100'
                created_at: '2018-03-21 12:21:39'
                updated_at: '2018-05-11 02:39:30'
                description: '1236'
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: Белгород г
                to_city: Шебекино г
                from_street: '123123'
                to_street: null
                from_address: '123'
                to_address: null
                applicant_id: '70'
                sender_id: '70'
                recipient_id: '74'
                payer_id: '70'
                status_id: '6'
                traking_number: DL-23-3FE10565
                responsible_id: '4'
                price: '2273426.6'
                full_price: '{"discount": 1516284.4, "result_with_discount": 2273426.6, "result_without_discount": 3789711}'
                from_stock:
                  id: 1
                  name: Хабаровск
                  description: Склад 1
                  sort: '100'
                  city_id: '2719'
                to_stock:
                  id: 2
                  name: Владивосток
                  description: Склад 2
                  sort: '100'
                  city_id: '2612'
                status:
                  id: 6
                  name: В работе
                  description: null
                  sort: '100'
                  type: null
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
                freight:
                  - id: 16
                    created_at: '2018-03-14 13:13:28'
                    updated_at: '2018-05-24 10:18:23'
                    description: '123'
                    sort: '100'
                    size: '1'
                    size_units: м
                    status_id: '3'
                    traking_number: FR-16-40420569
                    deal_id: '23'
                    departure_date: '2018-03-31 03:00:00'
                    weight: '123'
                    seats_number: '123'
                    doom: '1'
                    factory_package: '1'
                    price: '14491.6'
                    full_price: '{"doom": 24000, "default": "110", "discount": 9994.4, "oversize": 11, "default_calc": 100, "additional_services": 155, "result_with_discount": 14491.6, "result_without_discount": 24486}'
                  - id: 17
                    created_at: '2018-03-21 12:21:41'
                    updated_at: '2018-05-24 10:18:23'
                    description: '213'
                    sort: '100'
                    size: '12345'
                    size_units: м
                    status_id: '3'
                    traking_number: FR-17-40060561
                    deal_id: '23'
                    departure_date: '2018-03-22 03:00:00'
                    weight: '5'
                    seats_number: '12'
                    doom: '1'
                    factory_package: '0'
                    price: '2258935'
                    full_price: '{"doom": 0, "default": 1234500, "discount": 1506290, "oversize": 61725, "default_calc": 1234500, "additional_services": 0, "result_with_discount": 2258935, "result_without_discount": 3765225}'
                applicant:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts: []
                sender:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts:
                    - id: 13
                      deal_id: '23'
                      type: sender
                      contact_id: '33'
                recipient:
                  id: 74
                  created_at: '2018-04-17 07:52:23'
                  updated_at: '2018-04-17 07:52:23'
                  name: ООО "Зелёный Офис"
                  type: '1'
                  sort: '100'
                  inn: '2723152104'
                  kpp: '272301001'
                  passport_number: null
                  contacts:
                    - id: 14
                      deal_id: '23'
                      type: recipient
                      contact_id: '34'
                payer:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts:
                    - id: 5
                      deal_id: '23'
                      type: payer
                      contact_id: '25'
                responsible:
                  id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: '1'
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2018-02-16 02:07:55'
                contacts:
                  - id: 5
                    deal_id: '23'
                    type: payer
                    contact_id: '25'
                  - id: 13
                    deal_id: '23'
                    type: sender
                    contact_id: '33'
                  - id: 14
                    deal_id: '23'
                    type: recipient
                    contact_id: '34'
                documents: []
                executor:
                  id: 1
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
              - id: 24
                sort: '100'
                created_at: '2018-03-21 12:21:39'
                updated_at: '2018-05-11 02:39:30'
                description: '1236'
                from_stock_id: '1'
                to_stock_id: '2'
                from_city: Белгород г
                to_city: Шебекино г
                from_street: '123123'
                to_street: null
                from_address: '123'
                to_address: null
                applicant_id: '70'
                sender_id: '70'
                recipient_id: '74'
                payer_id: '70'
                status_id: '6'
                traking_number: DL-23-3FE10565
                responsible_id: '4'
                price: '2273426.6'
                full_price: '{"discount": 1516284.4, "result_with_discount": 2273426.6, "result_without_discount": 3789711}'
                forwarding_date_from: 2018-04-16 13:06:34
                forwarding_date_to: 2018-04-26 13:06:34
                from_stock:
                  id: 1
                  name: Хабаровск
                  description: Склад 1
                  sort: '100'
                  city_id: '2719'
                to_stock:
                  id: 2
                  name: Владивосток
                  description: Склад 2
                  sort: '100'
                  city_id: '2612'
                status:
                  id: 6
                  name: В работе
                  description: null
                  sort: '100'
                  type: null
                freight:
                  - id: 16
                    created_at: '2018-03-14 13:13:28'
                    updated_at: '2018-05-24 10:18:23'
                    description: '123'
                    sort: '100'
                    size: '1'
                    size_units: м
                    status_id: '3'
                    traking_number: FR-16-40420569
                    deal_id: '23'
                    departure_date: '2018-03-31 03:00:00'
                    weight: '123'
                    seats_number: '123'
                    doom: '1'
                    factory_package: '1'
                    price: '14491.6'
                    full_price: '{"doom": 24000, "default": "110", "discount": 9994.4, "oversize": 11, "default_calc": 100, "additional_services": 155, "result_with_discount": 14491.6, "result_without_discount": 24486}'
                  - id: 17
                    created_at: '2018-03-21 12:21:41'
                    updated_at: '2018-05-24 10:18:23'
                    description: '213'
                    sort: '100'
                    size: '12345'
                    size_units: м
                    status_id: '3'
                    traking_number: FR-17-40060561
                    deal_id: '23'
                    departure_date: '2018-03-22 03:00:00'
                    weight: '5'
                    seats_number: '12'
                    doom: '1'
                    factory_package: '0'
                    price: '2258935'
                    full_price: '{"doom": 0, "default": 1234500, "discount": 1506290, "oversize": 61725, "default_calc": 1234500, "additional_services": 0, "result_with_discount": 2258935, "result_without_discount": 3765225}'
                applicant:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts: []
                sender:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts:
                    - id: 13
                      deal_id: '23'
                      type: sender
                      contact_id: '33'
                recipient:
                  id: 74
                  created_at: '2018-04-17 07:52:23'
                  updated_at: '2018-04-17 07:52:23'
                  name: ООО "Зелёный Офис"
                  type: '1'
                  sort: '100'
                  inn: '2723152104'
                  kpp: '272301001'
                  passport_number: null
                  contacts:
                    - id: 14
                      deal_id: '23'
                      type: recipient
                      contact_id: '34'
                payer:
                  id: 70
                  created_at: '2018-04-16 13:06:34'
                  updated_at: '2018-04-16 13:06:34'
                  name: ООО "ГУГЛ"
                  type: '1'
                  sort: '100'
                  inn: '7704582421'
                  kpp: '770501001'
                  passport_number: null
                  contacts:
                    - id: 5
                      deal_id: '23'
                      type: payer
                      contact_id: '25'
                responsible:
                  id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: '1'
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2018-02-16 02:07:55'
                contacts:
                  - id: 5
                    deal_id: '23'
                    type: payer
                    contact_id: '25'
                  - id: 13
                    deal_id: '23'
                    type: sender
                    contact_id: '33'
                  - id: 14
                    deal_id: '23'
                    type: recipient
                    contact_id: '34'
                documents: []
                executor:
                  id: 1
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/byid/{id}':
    get:
      tags:
        - deals
      summary: Получение заявки
      description: Получение зявки по id
      operationId: getDealById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID заявки, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример: null
            success: true
            status: 200
            errors:
              messages: ''
              errors: ''
            request:
              id: '23'
            response:
              id: 23
              sort: '100'
              created_at: '2018-03-21 12:21:39'
              updated_at: '2018-05-11 02:39:30'
              description: '1236'
              from_stock_id: '1'
              to_stock_id: '2'
              from_city: Белгород г
              to_city: Шебекино г
              from_street: '123123'
              to_street: null
              from_address: '123'
              to_address: null
              applicant_id: '70'
              sender_id: '70'
              recipient_id: '74'
              payer_id: '70'
              status_id: '6'
              traking_number: DL-23-3FE10565
              responsible_id: '4'
              price: '2273426.6'
              full_price: '{"discount": 1516284.4, "result_with_discount": 2273426.6, "result_without_discount": 3789711}'
              forwarding_date_from: 2018-04-16 13:06:34
              forwarding_date_to: 2018-04-26 13:06:34
              from_stock:
                id: 1
                name: Хабаровск
                description: Склад 1
                sort: '100'
                city_id: '2719'
              to_stock:
                id: 2
                name: Владивосток
                description: Склад 2
                sort: '100'
                city_id: '2612'
              status:
                id: 6
                name: В работе
                description: null
                sort: '100'
                type: null
              freight:
                - id: 16
                  created_at: '2018-03-14 13:13:28'
                  updated_at: '2018-05-24 10:18:23'
                  description: '123'
                  sort: '100'
                  size: '1'
                  size_units: м
                  status_id: '3'
                  traking_number: FR-16-40420569
                  deal_id: '23'
                  departure_date: '2018-03-31 03:00:00'
                  weight: '123'
                  seats_number: '123'
                  doom: '1'
                  factory_package: '1'
                  price: '14491.6'
                  full_price: '{"doom": 24000, "default": "110", "discount": 9994.4, "oversize": 11, "default_calc": 100, "additional_services": 155, "result_with_discount": 14491.6, "result_without_discount": 24486}'
                - id: 17
                  created_at: '2018-03-21 12:21:41'
                  updated_at: '2018-05-24 10:18:23'
                  description: '213'
                  sort: '100'
                  size: '12345'
                  size_units: м
                  status_id: '3'
                  traking_number: FR-17-40060561
                  deal_id: '23'
                  departure_date: '2018-03-22 03:00:00'
                  weight: '5'
                  seats_number: '12'
                  doom: '1'
                  factory_package: '0'
                  price: '2258935'
                  full_price: '{"doom": 0, "default": 1234500, "discount": 1506290, "oversize": 61725, "default_calc": 1234500, "additional_services": 0, "result_with_discount": 2258935, "result_without_discount": 3765225}'
              applicant:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts: []
              sender:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts:
                  - id: 13
                    deal_id: '23'
                    type: sender
                    contact_id: '33'
              recipient:
                id: 74
                created_at: '2018-04-17 07:52:23'
                updated_at: '2018-04-17 07:52:23'
                name: ООО "Зелёный Офис"
                type: '1'
                sort: '100'
                inn: '2723152104'
                kpp: '272301001'
                passport_number: null
                contacts:
                  - id: 14
                    deal_id: '23'
                    type: recipient
                    contact_id: '34'
              payer:
                id: 70
                created_at: '2018-04-16 13:06:34'
                updated_at: '2018-04-16 13:06:34'
                name: ООО "ГУГЛ"
                type: '1'
                sort: '100'
                inn: '7704582421'
                kpp: '770501001'
                passport_number: null
                contacts:
                  - id: 5
                    deal_id: '23'
                    type: payer
                    contact_id: '25'
              responsible:
                id: 4
                login: admin
                email: speed.live@mail.ru
                sort: '1'
                created_at: '2017-07-19 01:44:26'
                updated_at: '2018-02-16 02:07:55'
              contacts:
                - id: 5
                  deal_id: '23'
                  type: payer
                  contact_id: '25'
                - id: 13
                  deal_id: '23'
                  type: sender
                  contact_id: '33'
                - id: 14
                  deal_id: '23'
                  type: recipient
                  contact_id: '34'
              documents: []
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - deals
      summary: Удаление заявки по id
      description: Удаляет заявку по id
      operationId: deleteDealById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID заявки, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                documents: 2
                contacts: 1
                customer: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /deals/status:
    post:
      tags:
        - dealsStatus
      summary: Добавление нового статуса заявок
      description: Добавление нового статуса заявок
      operationId: postDealsStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsStatus'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: |
                  Тестовый статус
                description: null
                sort: null
                type: final
              response:
                name: |
                  Тестовый статус
                description: null
                type: final
                sort: 100
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - dealsStatus
      summary: Изменение статуса заявок
      description: Изменение статуса заявок
      operationId: putDealsStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsStatus'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 4
                name: Тестовый статус 2
                description: null
                sort: null
                type: null
              response:
                type: null
                name: Тестовый статус 2
                description: null
                sort: 100
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - dealsStatus
      summary: Получение списка статусов заявок
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        статусов заявок (запрос хотябы с параметром count)
      operationId: getDealsStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Принята
                  description: Заявка принята и ожидает обработки
                  sort: '100'
                - id: 2
                  name: Обрабатывается
                  description: Заявка принята и обрабатывается
                  sort: '100'
                - id: 4
                  name: |
                    Тестовый статус
                  description: null
                  sort: '100'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 3
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/deals/status?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: Принята
                    description: Заявка принята и ожидает обработки
                    sort: '100'
                    type: 'final'
                  - id: 2
                    name: Обрабатывается
                    description: Заявка принята и обрабатывается
                    sort: '100'
                    type: 'final'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/status/byid/{id}':
    get:
      tags:
        - dealsStatus
      summary: Получение статуса
      description: Получение статуса зявок по id статуса
      operationId: getDealStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                name: Принята
                description: Заявка принята и ожидает обработки
                sort: '100'
                type: 'final'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - dealsStatus
      summary: Удаление статуса
      description: Удаление статуса зявок по id статуса
      operationId: deleteDealStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /deals/freightstatus:
    post:
      tags:
        - freightStatus
      summary: Добавление нового статуса грузов
      description: Добавление нового статуса грузов
      operationId: postFreightStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsFreightStatus'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Тестовый статус
                description: null
                sort: null
                type: null
              response:
                name: Тестовый статус
                description: null
                sort: 100
                type: null
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - freightStatus
      summary: Изменение статуса грузов
      description: Изменение статуса грузов
      operationId: putFreightStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsFreightStatus'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 4
                name: Тестовый статус 2
                description: null
                sort: null
                type: null
              response:
                name: Тестовый статус 2
                description: null
                sort: 100
                type: null
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - freightStatus
      summary: Получение списка статусов грузов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        статусов грузов (запрос хотябы с параметром count)
      operationId: getFreightStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: ' Первый статус груза (изменённый)'
                  description: ' Первый статус груза (изменённый)'
                  sort: '100'
                  type: null
                - id: 3
                  name: |
                    Тестовый статус
                  description: null
                  type: null
                  sort: '100'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 2
                per_page: '2'
                current_page: 1
                last_page: 1
                next_page_url: null
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: ' Первый статус груза (изменённый)'
                    description: ' Первый статус груза (изменённый)'
                    sort: '100'
                    type: null
                  - id: 3
                    name: |
                      Тестовый статус
                    description: null
                    sort: '100'
                    type: null
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/freightstatus/byid/{id}':
    get:
      tags:
        - freightStatus
      summary: Получение статуса
      description: Получение статуса грузов по id статуса
      operationId: getFreightStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                name: Тестовый статус
                description: null
                sort: '100'
                type: null
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - freightStatus
      summary: Удаление статуса
      description: Удаление статуса грузов по id статуса
      operationId: deleteFreightStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /deals/freight:
    post:
      tags:
        - freight
      summary: Добавление нового груза
      description: Добавление нового груза к заявке
      operationId: postFreight
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsFreight'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                created_at: null
                updated_at: null
                description: null
                sort: null
                size: '100'
                size_units: sm
                status_id: '1'
                traking_number: null
                deal_id: '6'
              response:
                size: '100'
                size_units: sm
                description: null
                status_id: '1'
                sort: 100
                traking_number: FR-3-36FE0508
                deal_id: 6
                updated_at: '2017-12-27 03:18:24'
                created_at: '2017-12-27 03:18:24'
                id: 3
              price: "773355.5"
              full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - freight
      summary: Изменение груза
      description: Изменение груза
      operationId: putFreight
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsFreight'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3
                created_at: null
                updated_at: null
                description: null
                sort: null
                size: '120'
                size_units: sm
                status_id: '1'
                traking_number: null
                deal_id: '6'
              response:
                size: '100'
                size_units: sm
                description: null
                status_id: '1'
                sort: 120
                traking_number: FR-3-36FE0508
                deal_id: 6
                updated_at: '2017-12-27 03:18:24'
                created_at: '2017-12-27 03:18:24'
                id: 3
              price: "773355.5"
              full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - freight
      summary: Получение списка грузов
      description: >-
        Получение полного (запрос без параметров) или страничного списка грузов
        (запрос хотябы с параметром count)
      operationId: getFreight
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  created_at: '2017-12-20 02:29:36'
                  updated_at: '2017-12-20 03:05:59'
                  description: тестовый груз 3
                  sort: '100'
                  size: '1000'
                  size_units: см
                  status_id: '1'
                  traking_number: FR-1-36530503
                  deal_id: '6'
                  status:
                    id: 1
                    name: ' Первый статус груза (изменённый)'
                    description: ' Первый статус груза (изменённый)'
                    sort: '100'
                  services: []
                  price: "773355.5"
                  full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
                - id: 3
                  created_at: '2017-12-27 03:18:24'
                  updated_at: '2017-12-27 03:18:24'
                  description: null
                  sort: '100'
                  size: '100'
                  size_units: sm
                  status_id: '1'
                  traking_number: FR-3-36FE0508
                  deal_id: '6'
                  status:
                    id: 1
                    name: ' Первый статус груза (изменённый)'
                    description: ' Первый статус груза (изменённый)'
                    sort: '100'
                  services: []
                  price: "773355.5"
                  full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 2
                per_page: '1'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/deals/freight?page=2'
                prev_page_url: null
                from: 1
                to: 1
                data:
                  - id: 1
                    created_at: '2017-12-20 02:29:36'
                    updated_at: '2017-12-20 03:05:59'
                    description: тестовый груз 3
                    sort: '100'
                    size: '1000'
                    size_units: см
                    status_id: '1'
                    traking_number: FR-1-36530503
                    deal_id: '6'
                    status:
                      id: 1
                      name: ' Первый статус груза (изменённый)'
                      description: ' Первый статус груза (изменённый)'
                      sort: '100'
                    services: []
                    price: "773355.5"
                    full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/freight/byid/{id}':
    get:
      tags:
        - freight
      summary: Получение груза
      description: Получение груза по id
      operationId: getFreightById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                created_at: '2017-12-20 02:29:36'
                updated_at: '2017-12-20 03:05:59'
                description: тестовый груз 3
                size: '1000'
                size_units: см
                status_id: '1'
                deal_id: '6'
                traking_number: FR-1-36530503
                sort: '100'
                status:
                  id: 1
                  name: ' Первый статус груза (изменённый)'
                  description: ' Первый статус груза (изменённый)'
                  sort: '100'
                services: []
                price: "773355.5"
                full_price: "{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - freight
      summary: Удаление груза
      description: Удаление груза по id
      operationId: deleteFreightById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /deals/freight/services:
    post:
      tags:
        - freight
      summary: Добавление услуги к грузу
      description: Добавление услуги к грузу
      operationId: postServiceToFreight
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsFreightServices'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                freight_id: '1'
                service_id: '["6"]'
              response:
                - freight_id: '1'
                  service_id: 6
                  id: 9
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - freight
      summary: Удаление услуги у груза
      description: Удаление услуги у груза
      operationId: deleteServiceFromFreight
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - freight_id
              - service_id
            properties:
              sort:
                type: integer
                description: id груза
                example: 1
              description:
                type: string
                description: Массив с id услуг
                example:
                  - '1'
                  - '2'
                  - '3'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                freight_id: '1'
                service_id: '["6"]'
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /deals/services:
    post:
      tags:
        - dealsServices
      summary: Добавление новой услуги
      description: Добавление новой услуги
      operationId: postDealsServices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsServices'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: тестовая услуга
                description: тестовая услуга
                markup_type: '1'
                markup_value: '20'
                active: '1'
                sort: null
              response:
                name: тестовая услуга
                description: тестовая услуга
                markup_type: '1'
                markup_value: '20'
                active: '1'
                sort: 100
                id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - dealsServices
      summary: Изменение услуги
      description: Добавление услуги грузоперевозки
      operationId: putDealsServices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsServices'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 7
                name: тестовая услуга 2
                description: тестовая услуга 2
                markup_type: '1'
                markup_value: '20'
                active: '1'
                sort: 1
              response:
                name: тестовая услуга 2
                description: тестовая услуга 2
                markup_type: '1'
                markup_value: '20'
                active: '1'
                sort: 1
                id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - dealsServices
      summary: Получение списка услуг
      description: >-
        Получение полного (запрос без параметров) или страничного списка услуг
        (запрос хотябы с параметром count)
      operationId: getDealsServices
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 6
                  name: Тестовая услуга
                  description: Тестовая услуга
                  markup_type: '1'
                  markup_value: '20'
                  active: '1'
                  sort: '100'
                - id: 7
                  name: тестовая услуга
                  description: тестовая услуга
                  markup_type: '1'
                  markup_value: '20'
                  active: '1'
                  sort: '100'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 2
                per_page: '1'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/deals/services?page=2'
                prev_page_url: null
                from: 1
                to: 1
                data:
                  - id: 6
                    name: Тестовая услуга
                    description: Тестовая услуга
                    markup_type: '1'
                    markup_value: '20'
                    active: '1'
                    sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/services/byid/{id}':
    get:
      tags:
        - dealsServices
      summary: Получение услуги
      description: Получение услуги по id
      operationId: getDealsServicesById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response:
                id: 6
                name: Тестовая услуга
                description: Тестовая услуга
                markup_type: '1'
                markup_value: '20'
                active: '1'
                sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - dealsServices
      summary: Удаление услуги
      description: Удаление услуги по id
      operationId: deleteDealsServicesById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /deals/tracking:
    post:
      tags:
        - dealsTracking
      summary: Добавление новой записи отслеживания
      description: Добавление новой записи отслеживания
      operationId: postDealsTracking
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsTracking'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                created_at: null
                updated_at: null
                stock_id: '1'
                freight_id: '1'
                status_id: 2
                responsible_id: '4'
              response:
                id: 3
                stock_id: '1'
                freight_id: '1'
                responsible_id: '4'
                status_id: 2
                updated_at: '2017-12-27 04:26:48'
                created_at: '2017-12-27 04:26:48'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - dealsTracking
      summary: Изменение записи отслеживания
      description: Изменение записи отслеживания
      operationId: putDealsTracking
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsTracking'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3
                created_at: null
                updated_at: null
                stock_id: '1'
                freight_id: '1'
                responsible_id: '4'
                status_id: '4'
              response:
                arrival: '1'
                status_id: '4'
                responsible_id: '4'
                updated_at: '2017-12-27 04:26:48'
                created_at: '2017-12-27 04:26:48'
                id: 3
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - dealsTracking
      summary: Получение списка записей отслеживания
      description: >-
        Получение полного (запрос без параметров) или страничного списка записей
        отслеживания (запрос хотябы с параметром count)
      operationId: getDealsTracking
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 3
                  created_at: '2017-12-27 04:26:48'
                  updated_at: '2017-12-27 04:26:48'
                  stock_id: '1'
                  freight_id: '1'
                  responsible_id: '4'
                  responsible:
                    id: 4
                    login: admin
                    email: speed.live@mail.ru
                    sort: '2'
                    created_at: '2017-07-19 01:44:26'
                    updated_at: '2017-11-23 02:32:10'
                  stock:
                    id: 1
                    name: Московский склад 3
                    description: ' Московский склад 3'
                    sort: '100'
                  freight:
                    id: 1
                    created_at: '2017-12-20 02:29:36'
                    updated_at: '2017-12-20 03:05:59'
                    description: тестовый груз 3
                    sort: '100'
                    size: '1000'
                    size_units: см
                    traking_number: FR-1-36530503
                    deal_id: '6'
                    status_id: 3
                    status: 
                      id: 3
                      name: "Прибыл на склад"
                      description: "Груз прибыл на склад"
                      sort: 100
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 1
                per_page: '1'
                current_page: 1
                last_page: 1
                next_page_url: null
                prev_page_url: null
                from: 1
                to: 1
                data:
                  - id: 3
                    created_at: '2017-12-27 04:26:48'
                    updated_at: '2017-12-27 04:26:48'
                    stock_id: '1'
                    freight_id: '1'
                    arrival: '1'
                    loss: '0'
                    arrival_date: '2017-12-12'
                    loss_date: null
                    responsible_id: '4'
                    responsible:
                      id: 4
                      login: admin
                      email: speed.live@mail.ru
                      sort: '2'
                      created_at: '2017-07-19 01:44:26'
                      updated_at: '2017-11-23 02:32:10'
                    stock:
                      id: 1
                      name: Московский склад 3
                      description: ' Московский склад 3'
                      sort: '100'
                    freight:
                      id: 1
                      created_at: '2017-12-20 02:29:36'
                      updated_at: '2017-12-20 03:05:59'
                      description: тестовый груз 3
                      sort: '100'
                      size: '1000'
                      size_units: см
                      status_id: '1'
                      traking_number: FR-1-36530503
                      deal_id: '6'
                    status_id: 3
                    status: 
                      id: 3
                      name: "Прибыл на склад"
                      description: "Груз прибыл на склад"
                      sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/tracking/byid/{id}':
    get:
      tags:
        - dealsTracking
      summary: Получение трекинговой записи
      description: Получение трекинговой записи по id
      operationId: getDealsTrackingById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '3'
              response:
                id: 3
                created_at: '2017-12-27 04:26:48'
                updated_at: '2017-12-27 04:26:48'
                stock_id: '1'
                freight_id: '1'
                responsible_id: '4'
                responsible:
                  id: 4
                  login: admin
                  email: speed.live@mail.ru
                  sort: '2'
                  created_at: '2017-07-19 01:44:26'
                  updated_at: '2017-11-23 02:32:10'
                stock:
                  id: 1
                  name: Московский склад 3
                  description: ' Московский склад 3'
                  sort: '100'
                freight:
                  id: 1
                  created_at: '2017-12-20 02:29:36'
                  updated_at: '2017-12-20 03:05:59'
                  description: тестовый груз 3
                  sort: '100'
                  size: '1000'
                  size_units: см
                  status_id: '1'
                  traking_number: FR-1-36530503
                  deal_id: '6'
                status_id: 3
                status: 
                  id: 3
                  name: "Прибыл на склад"
                  description: "Груз прибыл на склад"
                  sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - dealsTracking
      summary: Удаление трекинговой записи
      description: Удаление трекинговой записи по id
      operationId: deleteDealsTrackingById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '3'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/extrasize_settings':
    post:
      tags:
        - dealsExtraSizeSettings
      summary: Добавление новой настройки негабаритного груза
      description: Добавление новой настройки негабаритного груза
      operationId: postDealsExtraSizeSettings
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsExtraSizeSettings'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                min: 1
                max: 5000
                markup_type: 1
                markup_value: 100
              response:
                id: 2
                min: 1
                max: 5000
                markup_type: 1
                markup_value: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - dealsExtraSizeSettings
      summary: Изменение настройки негабаритного груза
      description: Изменение настройки негабаритного груза
      operationId: putDealsExtraSizeSettings
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsExtraSizeSettings'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 2
                min: 1
                max: 10000
                markup_type: 1
                markup_value: 100
              response:
                id: 2
                min: 1
                max: 10000
                markup_type: 1
                markup_value: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - dealsExtraSizeSettings
      summary: Получение списка настроек негабаритного груза
      description: >-
        Получение полного (запрос без параметров) или страничного списка записей
        отслеживания (запрос хотябы с параметром count)
      operationId: getDealsExtraSizeSettings
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  min: 1
                  max: 5000
                  markup_type: 1
                  markup_value: 100
                - id: 2
                  min": 1
                  max": 5000
                  markup_type: 1
                  markup_value: 100
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 2
                per_page: '2'
                current_page: 1
                last_page: 1
                next_page_url: null
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    min: 1
                    max: 5000
                    markup_type: 1
                    markup_value: 100
                  - id: 2
                    min": 1
                    max": 5000
                    markup_type: 1
                    markup_value: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/extrasize_settings/byid/{id}':
    get:
      tags:
        - dealsExtraSizeSettings
      summary: Получение настройки негабаритного груза
      description: Получение настройки негабаритного груза
      operationId: getDealsExtraSizeSettingsById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 2
              response:
                id: 2
                min": 1
                max": 5000
                markup_type: 1
                markup_value: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - dealsExtraSizeSettings
      summary: Удаление настройки негабаритного груза
      description: Удаление настройки негабаритного груза по id
      operationId: deleteDealsExtraSizeSettings
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/tracking_status':
    post:
      tags:
        - dealsTrackingStatus
      summary: Добавление нового статсуса отслеживания груза
      description: Добавление нового статсуса отслеживания груза
      operationId: postDealsTrackingStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsTrackingStatus'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name": "Тестовый статус"
                description: null
                sort: null
              response:
                id: 3
                name": "Тестовый статус"
                description: null
                sort: null
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - dealsTrackingStatus
      summary: Изменение статуса отслеживания
      description: Изменение статуса отслеживания
      operationId: putDealsTrackingStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsTrackingStatus'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 3
                name": "Тестовый статус"
                description: null
                sort: null
              response:
                id: 3
                name": "Тестовый статус"
                description: null
                sort: null
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменения
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - dealsTracking
      summary: Получение списка записей отслеживания
      description: >-
        Получение полного (запрос без параметров) или страничного списка записей
        отслеживания (запрос хотябы с параметром count)
      operationId: getDealsTrackingStatus
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 3
                  name: "Прибыл на склад"
                  description: "Груз прибыл на склад"
                  sort: 100
                - id: 4
                  name: "Принят у отправителя"
                  description: "Груз принят у отправителя и ожидает отправки"
                  sort: 100
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
              response:
                total: 1
                per_page: '2'
                current_page: 1
                last_page: 1
                next_page_url: null
                prev_page_url: null
                from: 1
                to: 2
                data:
                - id: 3
                  name: "Прибыл на склад"
                  description: "Груз прибыл на склад"
                  sort: 100
                - id: 4
                  name: "Принят у отправителя"
                  description: "Груз принят у отправителя и ожидает отправки"
                  sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/tracking_status/byid/{id}':
    get:
      tags:
        - dealsTrackingStatus
      summary: Получение статуса трекинговой записи
      description: Получение статуса трекинговой записи по id
      operationId: getDealsTrackingStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '3'
              response:
                id: 3
                name: "Прибыл на склад"
                description: "Груз прибыл на склад"
                sort: 100
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - dealsTrackingStatus
      summary: Удаление статуса трекинговой записи
      description: Удаление статуса трекинговой записи по id
      operationId: deleteDealsTrackingStatusById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '3'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/documents':
    post:
      tags:
        - deals
      summary: Добавление отметки о существовении документа
      description: Ставит чек о том, что переданный документ существует вне системы
      operationId: postDealsDocument
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/DealsDocument'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                deal_id: '31'
                documents:
                  - test1
                  - test2
              response:
                - code: test1
                  deal_id: '31'
                  id: 5
                - code: test2
                  deal_id: '31'
                  id: 6
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  /stock:
    post:
      tags:
        - stock
      summary: Добавление нового склада
      description: Добавление нового склада
      operationId: postStock
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Stock'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Склад 1
                description: Склад 1
                city_id: 2
                sort: null
              response:
                name: Склад 1
                description: Склад 1
                city_id: 2
                sort: 100
                updated_at: '2017-12-28 02:27:58'
                created_at: '2017-12-28 02:27:58'
                id: 5
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - stock
      summary: Изменение склада
      description: Изменение существующего склада
      operationId: putStock
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Stock'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 5
                name: Склад 1
                description: Склад 1
                sort: 10
                city_id: 2
              response:
                name: Склад 1
                description: Склад 1
                sort: 10
                updated_at: '2017-12-28 02:27:58'
                created_at: '2017-12-28 02:27:58'
                city_id: 2
                id: 5
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - stock
      summary: Получение списка складов
      description: >-
        Получение полного (запрос без параметров) или страничного списка складов
        (запрос хотябы с параметром count)
      operationId: getStock
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  name: Московский склад 3
                  description: ' Московский склад 3'
                  city_id: 2
                  sort: '100'
                  city:
                    id: 2
                    name: "Москва"
                    sort: "100"
                    zone_id: "161"
                    aoguid: "a4859da8-9977-4b62-8436-4e1b98c5d13f"
                    disid: "4"
                    okato: "08401000000"
                    parentguid: "7d468b39-1afa-41ec-8c4f-97a8603cb3d4"
                    regioncode: "27"
                - id: 2
                  name: Московский склад
                  description: Московский склад
                  city_id: 2
                  sort: '100'
                  city:
                    id: 2
                    name: "Москва"
                    sort: "100"
                    zone_id: "161"
                    aoguid: "a4859da8-9977-4b62-8436-4e1b98c5d13f"
                    disid: "4"
                    okato: "08401000000"
                    parentguid: "7d468b39-1afa-41ec-8c4f-97a8603cb3d4"
                    regioncode: "27"
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/stock?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                  - id: 1
                    name: Московский склад 3
                    description: ' Московский склад 3'
                    city_id: 2
                    city:
                      id: 2
                      name: "Москва"
                      sort: "100"
                      zone_id: "161"
                      aoguid: "a4859da8-9977-4b62-8436-4e1b98c5d13f"
                      disid: "4"
                      okato: "08401000000"
                      parentguid: "7d468b39-1afa-41ec-8c4f-97a8603cb3d4"
                      regioncode: "27"
                    sort: '100'
                  - id: 2
                    name: Московский склад
                    description: Московский склад
                    city_id: 2
                    city:
                      id: 2
                      name: "Москва"
                      sort: "100"
                      zone_id: "161"
                      aoguid: "a4859da8-9977-4b62-8436-4e1b98c5d13f"
                      disid: "4"
                      okato: "08401000000"
                      parentguid: "7d468b39-1afa-41ec-8c4f-97a8603cb3d4"
                      regioncode: "27"
                    sort: '100'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/stock/byid/{id}':
    get:
      tags:
        - stock
      summary: Получение склада
      description: Получение склада по id
      operationId: getStockById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response:
                id: 1
                created_at: '2017-12-18 08:00:26'
                updated_at: '2017-12-18 08:11:33'
                name: Московский склад 3
                description: ' Московский склад 3'
                city_id: 2
                sort: '100'
                city:
                  id: 2
                  name: "Москва"
                  sort: "100"
                  zone_id: "161"
                  aoguid: "a4859da8-9977-4b62-8436-4e1b98c5d13f"
                  disid: "4"
                  okato: "08401000000"
                  parentguid: "7d468b39-1afa-41ec-8c4f-97a8603cb3d4"
                  regioncode: "27"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - stock
      summary: Удаление склада
      description: Удаление склада по id
      operationId: deleteStockById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /stock/user:
    post:
      tags:
        - stock
      summary: Добавление пользователя к складу
      description: Прикрепление пользователя к складу в качестве ответственного
      operationId: postUserToStock
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - user_id
              - stock_id
            properties:
              user_id:
                type: integer
                description: id пользователя
                example: 1
              stock_id:
                type: integer
                description: id склада
                example: 1
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                stock_id: '1'
                user_id: '5'
              response:
                stock_id: '1'
                user_id: '5'
                id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - stock
      summary: Удаление пользователя у склада
      description: Удаление пользователя (ответственного) у склада
      operationId: deleteUserFromStock
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - user_id
              - stock_id
            properties:
              user_id:
                type: integer
                description: id пользователя
                example: 1
              stock_id:
                type: integer
                description: id склада
                example: 1
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                stock_id: '1'
                user_id: '5'
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка удаления
          schema:
            $ref: '#/definitions/500Response'
  /finance:
    post:
      tags:
        - finance
      summary: Добавление финансовой записи
      description: 'Добавление финансовой записи, метод отправки должен быть form-data'
      operationId: postFinance
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Finance'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                payment_number: '1'
                customer_id: '1'
                description: test
                date: '2017-12-12 00:00:00'
                sum: '10000'
              response:
                payment_number: '1'
                description: test
                date: '2017-12-12 00:00:00'
                sum: '10000'
                customer_id: '1'
                updated_at: '2017-12-28 02:54:46'
                created_at: '2017-12-28 02:54:46'
                id: 4
                files:
                  - file_id: 78
                    finance_id: 4
                    updated_at: '2017-12-28 02:54:47'
                    created_at: '2017-12-28 02:54:47'
                    id: 3
                  - file_id: 79
                    finance_id: 4
                    updated_at: '2017-12-28 02:54:48'
                    created_at: '2017-12-28 02:54:48'
                    id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - finance
      summary: Изменение финансовой записи
      description: >-
        Изменение финансовой записи, метод не поддерживает изменение
        прикреплённых документов
      operationId: putFinance
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Finance'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 4
                payment_number: '1'
                customer_id: '1'
                description: test
                date: '2017-12-20 00:00:00'
                sum: '10000'
              response:
                payment_number: '1'
                description: test
                date: '2017-12-20 00:00:00'
                sum: '10000'
                customer_id: '1'
                updated_at: '2017-12-28 02:54:46'
                created_at: '2017-12-28 02:54:46'
                id: 4
                files:
                  - file_id: 78
                    finance_id: 4
                    updated_at: '2017-12-28 02:54:47'
                    created_at: '2017-12-28 02:54:47'
                    id: 3
                  - file_id: 79
                    finance_id: 4
                    updated_at: '2017-12-28 02:54:48'
                    created_at: '2017-12-28 02:54:48'
                    id: 4
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка изменение
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - finance
      summary: Получение списка финансовых записей
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        финансовых записей (запрос хотябы с параметром count)
      operationId: getFinanceTracking
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                - id: 1
                  payment_number: '123'
                  customer_id: '1'
                  description: test
                  date: null
                  sum: null
                  customer:
                    id: 1
                    created_at: '2017-12-06 01:28:53'
                    updated_at: '2017-12-06 01:28:53'
                    name: Тестовый контрагент
                    type: '1'
                    sort: '100'
                  files: []
                - id: 3
                  payment_number: '123'
                  customer_id: '2'
                  description: test
                  date: null
                  sum: null
                  customer:
                    id: 2
                    created_at: '2017-12-06 01:30:01'
                    updated_at: '2017-12-06 01:30:01'
                    name: Тестовый контрагент 2
                    type: '2'
                    sort: '100'
                  files: []
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '1'
                page: '3'
              response:
                total: 3
                per_page: '1'
                current_page: 3
                last_page: 3
                next_page_url: null
                prev_page_url: 'http://backend.zelenoe.pro/api/finance?page=2'
                from: 3
                to: 3
                data:
                  - id: 4
                    payment_number: '1'
                    customer_id: '1'
                    description: test
                    date: '2017-12-12 00:00:00'
                    sum: '10000'
                    customer:
                      id: 1
                      created_at: '2017-12-06 01:28:53'
                      updated_at: '2017-12-06 01:28:53'
                      name: Тестовый контрагент
                      type: '1'
                      sort: '100'
                    files:
                      - id: 3
                        created_at: '2017-12-28 02:54:47'
                        updated_at: '2017-12-28 02:54:47'
                        finance_id: '4'
                        file_id: '78'
                      - id: 4
                        created_at: '2017-12-28 02:54:48'
                        updated_at: '2017-12-28 02:54:48'
                        finance_id: '4'
                        file_id: '79'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/finance/byid/{id}':
    get:
      tags:
        - finance
      summary: Получение финансовой записи
      description: Получение финансовой записи по id
      operationId: getFinanceById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            success: true
            status: 200
            errors:
              messages: ''
              errors: ''
            request:
              id: '4'
            response:
              id: 4
              created_at: '2017-12-28 02:54:46'
              updated_at: '2017-12-28 02:54:46'
              payment_number: '1'
              customer_id: '1'
              description: test
              date: '2017-12-12 00:00:00'
              sum: '10000'
              customer:
                id: 1
                created_at: '2017-12-06 01:28:53'
                updated_at: '2017-12-06 01:28:53'
                name: Тестовый контрагент
                type: '1'
                sort: '100'
              files:
                - id: 3
                  created_at: '2017-12-28 02:54:47'
                  updated_at: '2017-12-28 02:54:47'
                  finance_id: '4'
                  file_id: '78'
                - id: 4
                  created_at: '2017-12-28 02:54:48'
                  updated_at: '2017-12-28 02:54:48'
                  finance_id: '4'
                  file_id: '79'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - finance
      summary: Удаление финансовой записи
      description: Удаление финансовой записи по id
      operationId: deleteFinanceById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            success: true
            status: 200
            errors:
              messages: ''
              errors: ''
            request:
              id: '4'
            response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /finance/file:
    post:
      tags:
        - finance
      summary: Добавление файла к финансовой записи
      description: >-
        Добавление файла к финансовой записи, метод отправки должен быть
        form-data
      operationId: postFinanceFile
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/FinanceFile'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response:
                - file_id: 82
                  finance_id: 4
                  updated_at: '2017-12-28 03:10:58'
                  created_at: '2017-12-28 03:10:58'
                  id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    delete:
      tags:
        - finance
      summary: Удаление файла у финансовой записи
      description: >-
        Удаление файла у финансовой записи, id файла нужно брать из параметра
        file_id в запросе на получение финансовой записи
      operationId: deleteFinanceFile
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
              - id
              - file_id
            properties:
              id:
                type: integer
                description: id финансовой записи
                example: 4
              file_id:
                type: string
                description: id файла для удаления
                example: 82
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
                file_id: '82'
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/finance/debt/customer/{customer_id}':
    get:
      tags:
        - finance
      summary: Проверка задолжности у контрагента
      description: >-
        Возвращает массив с финансовыми данными по контрагенту
      operationId: checkCustomerDebt
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: customer_id
          required: true
          description: id контрагента
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
                coming: 12700
                consumption: 13000
                sum: -300
                result: false
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  /suggest:
    get:
      tags:
        - integrations
      summary: Получение подсказок из сервиса DaData
      description: Получение подсказок из сервиса DaData
      operationId: getSuggestions
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: query
          name: type
          required: true
          description: 'Тип подсказки, которую нужно получить, доступные значения: fio, address, party, email, bank'
          type: string
        - in: query
          name: count
          required: true
          description: 'Количество подсказок, которые необходимо получить'
          type: integer
        - in: query
          name: query
          required: true
          description: 'Поискавой запрос'
          type: string
      responses:
        '200':
          description: Успешное получение подсказок
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                type: address
                count: '2'
                query: Москва
              response:
                suggestions:
                  - value: г Москва
                    unrestricted_value: г Москва
                    data:
                      postal_code: null
                      country: Россия
                      region_fias_id: '0c5b2444-70a0-4932-980c-b4dc0d3f02b5'
                      region_kladr_id: '7700000000000'
                      region_with_type: г Москва
                      region_type: г
                      region_type_full: город
                      region: Москва
                      area_fias_id: null
                      area_kladr_id: null
                      area_with_type: null
                      area_type: null
                      area_type_full: null
                      area: null
                      city_fias_id: '0c5b2444-70a0-4932-980c-b4dc0d3f02b5'
                      city_kladr_id: '7700000000000'
                      city_with_type: г Москва
                      city_type: г
                      city_type_full: город
                      city: Москва
                      city_area: null
                      city_district_fias_id: null
                      city_district_kladr_id: null
                      city_district_with_type: null
                      city_district_type: null
                      city_district_type_full: null
                      city_district: null
                      settlement_fias_id: null
                      settlement_kladr_id: null
                      settlement_with_type: null
                      settlement_type: null
                      settlement_type_full: null
                      settlement: null
                      street_fias_id: null
                      street_kladr_id: null
                      street_with_type: null
                      street_type: null
                      street_type_full: null
                      street: null
                      house_fias_id: null
                      house_kladr_id: null
                      house_type: null
                      house_type_full: null
                      house: null
                      block_type: null
                      block_type_full: null
                      block: null
                      flat_type: null
                      flat_type_full: null
                      flat: null
                      flat_area: null
                      square_meter_price: null
                      flat_price: null
                      postal_box: null
                      fias_id: '0c5b2444-70a0-4932-980c-b4dc0d3f02b5'
                      fias_code: null
                      fias_level: '1'
                      fias_actuality_state: null
                      kladr_id: '7700000000000'
                      capital_marker: '0'
                      okato: '45000000000'
                      oktmo: null
                      tax_office: '7700'
                      tax_office_legal: '7700'
                      timezone: null
                      geo_lat: null
                      geo_lon: null
                      beltway_hit: null
                      beltway_distance: null
                      metro: null
                      qc_geo: null
                      qc_complete: null
                      qc_house: null
                      history_values: null
                      unparsed_parts: null
                      source: null
                      qc: null
                  - value: 'Нижегородская обл, Лукояновский р-н, поселок Новая Москва'
                    unrestricted_value: 'Нижегородская обл, Лукояновский р-н, поселок Новая Москва'
                    data:
                      postal_code: '607814'
                      country: Россия
                      region_fias_id: '88cd27e2-6a8a-4421-9718-719a28a0a088'
                      region_kladr_id: '5200000000000'
                      region_with_type: Нижегородская обл
                      region_type: обл
                      region_type_full: область
                      region: Нижегородская
                      area_fias_id: 'eb787249-c038-44d7-8d87-e2977244dea2'
                      area_kladr_id: '5202900000000'
                      area_with_type: Лукояновский р-н
                      area_type: р-н
                      area_type_full: район
                      area: Лукояновский
                      city_fias_id: null
                      city_kladr_id: null
                      city_with_type: null
                      city_type: null
                      city_type_full: null
                      city: null
                      city_area: null
                      city_district_fias_id: null
                      city_district_kladr_id: null
                      city_district_with_type: null
                      city_district_type: null
                      city_district_type_full: null
                      city_district: null
                      settlement_fias_id: '3890e46f-90d9-4f7c-88ac-944d3f656dac'
                      settlement_kladr_id: '5202900004700'
                      settlement_with_type: поселок Новая Москва
                      settlement_type: п
                      settlement_type_full: поселок
                      settlement: Новая Москва
                      street_fias_id: null
                      street_kladr_id: null
                      street_with_type: null
                      street_type: null
                      street_type_full: null
                      street: null
                      house_fias_id: null
                      house_kladr_id: null
                      house_type: null
                      house_type_full: null
                      house: null
                      block_type: null
                      block_type_full: null
                      block: null
                      flat_type: null
                      flat_type_full: null
                      flat: null
                      flat_area: null
                      square_meter_price: null
                      flat_price: null
                      postal_box: null
                      fias_id: '3890e46f-90d9-4f7c-88ac-944d3f656dac'
                      fias_code: null
                      fias_level: '6'
                      fias_actuality_state: null
                      kladr_id: '5202900004700'
                      capital_marker: '0'
                      okato: '22239864011'
                      oktmo: '22639464151'
                      tax_office: '5243'
                      tax_office_legal: '5243'
                      timezone: null
                      geo_lat: null
                      geo_lon: null
                      beltway_hit: null
                      beltway_distance: null
                      metro: null
                      qc_geo: null
                      qc_complete: null
                      qc_house: null
                      history_values: null
                      unparsed_parts: null
                      source: null
                      qc: null
        '500':
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/500Response'
  /addresses:
    post:
      tags:
        - integrations
      summary: Добавление нового адреса
      description: Добавление нового адреса
      operationId: postAddress
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Addresses'
      responses:
        '200':
          description: Адрес успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                value: null
                address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                description: Юридический адрес
              response:
                address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                value:
                  value: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                  unrestricted_value: 'г Москва, г Зеленоград, р-н Крюково, ул Зелёная, д 30А, кв 3'
                  postal_code: '124365'
                  country: Россия
                  region_fias_id: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
                  region_kladr_id: '7700000000000'
                  region_type: г
                  region: Москва
                  area_fias_id: null
                  area_kladr_id: null
                  area_type: null
                  area: null
                  city_fias_id: ec44c0ee-bf24-41c8-9e1c-76136ab05cbf
                  city_kladr_id: '7700000200000'
                  city_type: г
                  city: Зеленоград
                  city_area: Зеленоградский
                  city_district_fias_id: null
                  city_district_kladr_id: null
                  city_district_type: р-н
                  city_district: Крюково
                  settlement_fias_id: null
                  settlement_kladr_id: null
                  settlement_with_type: null
                  settlement_type: null
                  settlement: null
                  street_fias_id: 13cd5e76-d3ce-4e3f-ac78-b84b5a9e3458
                  street_kladr_id: '77000002000133200'
                  street_type: ул
                  street: Зелёная
                  house_fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                  house_kladr_id: '7700000200013320011'
                  house_type: д
                  house: 30А
                  fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                  fias_code: '77000002000000013320011'
                  kladr_id: '7700000200013320011'
                  okato: '45272580000'
                  oktmo: '45330000'
                description: Юридический адрес
                id: 6
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - integrations
      summary: Изменение адреса
      description: Изменение адреса
      operationId: putAddress
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Addresses'
      responses:
        '200':
          description: Адрес успешно добавлен
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '6'
                value: null
                address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                description: Юридический адрес
              response:
                address: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                value:
                  value: 'г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3'
                  unrestricted_value: 'г Москва, г Зеленоград, р-н Крюково, ул Зелёная, д 30А, кв 3'
                  postal_code: '124365'
                  country: Россия
                  region_fias_id: 0c5b2444-70a0-4932-980c-b4dc0d3f02b5
                  region_kladr_id: '7700000000000'
                  region_type: г
                  region: Москва
                  area_fias_id: null
                  area_kladr_id: null
                  area_type: null
                  area: null
                  city_fias_id: ec44c0ee-bf24-41c8-9e1c-76136ab05cbf
                  city_kladr_id: '7700000200000'
                  city_type: г
                  city: Зеленоград
                  city_area: Зеленоградский
                  city_district_fias_id: null
                  city_district_kladr_id: null
                  city_district_type: р-н
                  city_district: Крюково
                  settlement_fias_id: null
                  settlement_kladr_id: null
                  settlement_with_type: null
                  settlement_type: null
                  settlement: null
                  street_fias_id: 13cd5e76-d3ce-4e3f-ac78-b84b5a9e3458
                  street_kladr_id: '77000002000133200'
                  street_type: ул
                  street: Зелёная
                  house_fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                  house_kladr_id: '7700000200013320011'
                  house_type: д
                  house: 30А
                  fias_id: 14f7943b-cf2e-4345-871a-64e5a938b196
                  fias_code: '77000002000000013320011'
                  kladr_id: '7700000200013320011'
                  okato: '45272580000'
                  oktmo: '45330000'
                description: Юридический адрес
                id: 7
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/addresses/{id}':
    delete:
      tags:
        - integrations
      summary: Удаление адреса
      description: Удаление адреса по id
      operationId: deleteAddress
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '4'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/zone':
    post:
      tags:
        - zone
      summary: Добавление новой зоны перевозки
      description: Добавление новой зоны перевозки
      operationId: postZone
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Zone'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: "Адыгея Респ"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
              response:
                id: 1
                name: "Адыгея Респ"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - zone
      summary: Изменение зоны перевозки
      description: Изменение зоны перевозки
      operationId: putZone
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Zone'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
                name: "Адыгея Респ"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
              response:
                id: 1
                name: "Адыгея Респ"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - zone
      summary: Получение списка зон
      description: >-
        Получение полного (запрос без параметров) или страничного списка зон
        (запрос хотябы с параметром count)
      operationId: getZone
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 87
                name: "Адыгея Респ"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
              - id: 88,
                name: "Алтай Респ"
                sort: "100"
                aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                disid: "5"
                okato: "84000000000"
                parentguid: ""
                regioncode: "04"
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/stock?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                - id: 87
                  name: "Адыгея Респ"
                  sort: "100"
                  aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                  disid: "2"
                  okato: "79000000000"
                  parentguid: ""
                  regioncode: "01"
                - id: 88,
                  name: "Алтай Респ"
                  sort: "100"
                  aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                  disid: "5"
                  okato: "84000000000"
                  parentguid: ""
                  regioncode: "04"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/zone/byid/{id}':
    get:
      tags:
        - zone
      summary: Получение зоны
      description: Получение зоны по id
      operationId: getZoneById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 87
              response:
                id: 87
                name: "Адыгея Респ"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - zone
      summary: Удаление зоны
      description: Удаление зоны по id
      operationId: deleteZoneById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/zone/addall':
    get:
      tags:
        - zone
      summary: Добавление всех зон
      description: Добавление всех зон из json файла в БД
      operationId: postAllZone
      produces:
        - application/json
      security:
        - crm_auth: []
      responses:
        '200':
          description: Успешное добавление
          examples:
            Успешное добавление:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 87
                name: "Адыгея Респ"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
              - id: 88,
                name: "Алтай Респ"
                sort: "100"
                aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                disid: "5"
                okato: "84000000000"
                parentguid: ""
                regioncode: "04"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/zone/price/set':
    post:
      tags:
        - cost
      summary: Добавление/изменение новой цены перевозки по зоне
      description: Добавление/изменение новой цены перевозки по зоне (при повторном запросе с такими же zone_id_from и zone_id_to происходит изменение старой записи)
      operationId: postDeliveryPriceByZone
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - price_weight
             - price_volume
             - price_weight_min
             - price_volume_min
             - weight_min
             - volume_min
             - zone_id_from
             - zone_id_to
            properties:
              price_weight:
                type: string
                description: Цена за единицу веса (кг) в рублях
                example: 1000
              price_volume:
                type: string
                description: Цена за единицу объёма (м^3) в рублях
                example: 1000
              price_weight_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему весу
                example: 2000
              price_volume_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему объёму
                example: 2000
              weight_min:
                type: string
                description: Минимальный вес в граммах
                example: 500
              volume_min:
                type: string
                description: Минимальный обёъм в см^3 
                example: 100
              zone_id_from:
                type: integer
                description: id зоны из которой будет осуществляется перевозка 
                example: 21
              zone_id_to:
                type: integer
                description: id зоны в которую будет осуществляется перевозка 
                example: 43
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                price_weight: 100
                price_volume: 100
                price_weight_min: 1000
                price_volume_min: 1000
                weight_min: 1000
                volume_min: 500
                zone_id_from: 89
                zone_id_to: 90
              response:
                id: 3
                price_weight: 100
                price_volume: 100
                price_weight_min: 1000
                price_volume_min: 1000
                weight_min: 1000
                volume_min: 500
                zone_id_from: 89
                zone_id_to: 90
                zone_from:
                  id: 89
                  name: "Алтайский край"
                  sort: 100
                  aoguid: "8276c6a1-1a86-4f0d-8920-aba34d4cc34a"
                  disid: 5
                  okato: 01000000000
                  parentguid: ''
                  regioncode: 22
                zone_to:
                  id: 90
                  name: "Амурская обл"
                  sort: 100
                  aoguid: "844a80d6-5e31-4017-b422-4d9c01e9942c"
                  disid: 4
                  okato: 10000000000
                  parentguid: ''
                  regioncode: 28
        
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/zone/price/remove':
    post:
      tags:
        - cost
      summary: Удаление цены перевозки по зоне
      description: Удаление цены перевозки по зоне
      operationId: removeDeliveryPriceByZone
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - zone_id_from
             - zone_id_to
            properties:
              zone_id_from:
                type: integer
                description: id зоны из которой будет осуществляется перевозка 
                example: 21
              zone_id_to:
                type: integer
                description: id зоны в которую будет осуществляется перевозка 
                example: 43
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                zone_id_from: 89
                zone_id_to: 90
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/zone/price/set/recursive':
    post:
      tags:
        - cost
      summary: Рекурсивная установка цен
      description: Рекунсивно устанавливает цены на перевозку
      operationId: postDeliveryPriceRecursive
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - price_weight
             - price_volume
             - price_weight_min
             - price_volume_min
             - weight_min
             - volume_min
             - zone_id_from
             - zone_id_to
             - city_id_from
             - city_id_to
             - type
            properties:
              price_weight:
                type: string
                description: Цена за единицу веса (кг) в рублях
                example: 1000
              price_volume:
                type: string
                description: Цена за единицу объёма (м^3) в рублях
                example: 1000
              price_weight_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему весу
                example: 2000
              price_volume_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему объёму
                example: 2000
              weight_min:
                type: string
                description: Минимальный вес в граммах
                example: 500
              volume_min:
                type: string
                description: Минимальный обёъм в см^3 
                example: 100
              zone_id_from:
                type: integer
                description: id зоны из которой будет осуществляется перевозка 
                example: 21
              zone_id_to:
                type: integer
                description: id зоны в которую будет осуществляется перевозка 
                example: 43
              city_id_from:
                type: integer
                description: id города из которого будет осуществляется перевозка 
                example: 21
              city_id_to:
                type: integer
                description: id города в которого будет осуществляется перевозка 
                example: 43
              type:
                type: string
                description: Тип установки цены (zone_zone, zone_city, city_zone)
                example: zone_zone
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                price_weight: 100
                price_volume: 100
                price_weight_min: 1000
                price_volume_min: 1000
                weight_min: 1000
                volume_min: 500
                zone_id_from: 89
                zone_id_to: 90
                city_id_from: null
                city_id_to: null
                type: 'zone_zone'
              response:
                - id: 202
                  city_id_from: 2741
                  city_id_to: 2552
                  price_weight: 100
                  price_volume: 100
                  price_volume_min: 1000
                  price_weight_min: 1000
                  volume_min: 500
                  weight_min: 1000
                - id: 203
                  city_id_from: 2741
                  city_id_to: 2553
                  price_weight: 100
                  price_volume: 100
                  price_volume_min: 1000
                  price_weight_min: 1000
                  volume_min: 500
                  weight_min: 1000
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/zone/price/remove/recursive':
    post:
      tags:
        - cost
      summary: Рекурсивное удаление цен
      description: Рекунсивное удаление цен на перевозку
      operationId: removeDeliveryPriceRecursive
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - zone_id_from
             - zone_id_to
             - city_id_from
             - city_id_to
             - type
            properties:
              zone_id_from:
                type: integer
                description: id зоны из которой будет осуществляется перевозка 
                example: 21
              zone_id_to:
                type: integer
                description: id зоны в которую будет осуществляется перевозка 
                example: 43
              city_id_from:
                type: integer
                description: id города из которого будет осуществляется перевозка 
                example: 21
              city_id_to:
                type: integer
                description: id города в которого будет осуществляется перевозка 
                example: 43
              type:
                type: string
                description: Тип установки цены (zone_zone, zone_city, city_zone)
                example: zone_zone
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                zone_id_from: null
                zone_id_to: null
                city_id_from: null
                city_id_to: null
                type: 'zone_zone'
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/city':
    post:
      tags:
        - city
      summary: Добавление нового города перевозки
      description: Добавление нового города перевозки
      operationId: postCity
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: "Хабаровск"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
              response:
                id: 1
                name: "Хабаровск"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - city
      summary: Изменение города перевозки
      description: Изменение города перевозки
      operationId: putCity
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/City'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
                name: "Хабаровск"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
              response:
                id: 1
                name: "Хабаровск"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: 2
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
                sort: 100
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - city
      summary: Получение списка городов
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        (запрос хотябы с параметром count)
      operationId: getCity
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 87
                name: "Хабаровск"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
              - id: 88
                name: "Владивосток"
                sort: "100"
                aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                disid: "5"
                okato: "84000000000"
                parentguid: ""
                regioncode: "04"
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/stock?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                - id: 87
                  name: "Хабаровск"
                  sort: "100"
                  aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                  disid: "2"
                  okato: "79000000000"
                  parentguid: ""
                  regioncode: "01"
                - id: 88
                  name: "Владивосток"
                  sort: "100"
                  aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                  disid: "5"
                  okato: "84000000000"
                  parentguid: ""
                  regioncode: "04"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/city/byid/{id}':
    get:
      tags:
        - city
      summary: Получение города
      description: Получение города по id
      operationId: getCityById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 87
              response:
                id: 87
                name: "Хабаровск"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - city
      summary: Удаление города
      description: Удаление города по id
      operationId: deleteCityById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/city/price/set':
    post:
      tags:
        - cost
      summary: Добавление/изменение новой цены перевозки по городу
      description: Добавление/изменение новой цены перевозки по городу (при повторном запросе с такими же zone_id_from и zone_id_to происходит изменение старой записи)
      operationId: postDeliveryPriceByCity
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - price_weight
             - price_volume
             - price_weight_min
             - price_volume_min
             - weight_min
             - volume_min
             - city_id_from
             - city_id_to
            properties:
              price_weight:
                type: string
                description: Цена за единицу веса (кг) в рублях
                example: 1000
              price_volume:
                type: string
                description: Цена за единицу объёма (м^3) в рублях
                example: 1000
              price_weight_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему весу
                example: 2000
              price_volume_min:
                type: string
                description: Минимальная цена перевозки по направлению по всему объёму
                example: 2000
              weight_min:
                type: string
                description: Минимальный вес в граммах
                example: 500
              volume_min:
                type: string
                description: Минимальный обёъм в см^3 
                example: 100
              city_id_from:
                type: integer
                description: id города из который будет осуществляется перевозка 
                example: 21
              city_id_to:
                type: integer
                description: id города в которого будет осуществляется перевозка 
                example: 43
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                price_weight: 100
                price_volume: 100
                price_weight_min: 1000
                price_volume_min: 1000
                weight_min: 1000
                volume_min: 500
                city_id_from: 89
                city_id_to: 90
              response:
                id: 3
                price_weight: 100
                price_volume: 100
                price_weight_min: 1000
                price_volume_min: 1000
                weight_min: 1000
                volume_min: 500
                city_id_from: 89
                city_id_to: 90
                city_from:
                  id: 89
                  name: "Хабаровск"
                  sort: 100
                  aoguid: "8276c6a1-1a86-4f0d-8920-aba34d4cc34a"
                  disid: 5
                  okato: 01000000000
                  parentguid: ''
                  regioncode: 22
                city_to:
                  id: 90
                  name: "Владивосток"
                  sort: 100
                  aoguid: "844a80d6-5e31-4017-b422-4d9c01e9942c"
                  disid: 4
                  okato: 10000000000
                  parentguid: ''
                  regioncode: 28
        
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/city/price/remove':
    post:
      tags:
        - cost
      summary: Удаление цены перевозки по городу
      description: Удаление цены перевозки по городу
      operationId: removeDeliveryPriceByCity
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            type: object
            required:
             - city_id_from
             - city_id_to
            properties:
              city_id_from:
                type: integer
                description: id города из которого будет осуществляется перевозка 
                example: 21
              city_id_to:
                type: integer
                description: id города в который будет осуществляется перевозка 
                example: 43
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                city_id_from: 89
                city_id_to: 90
              response: true
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
  '/city/addall':
    get:
      tags:
        - city
      summary: Добавление всех городов
      description: Добавление всех городов из json файла в БД
      operationId: postAllCity
      produces:
        - application/json
      security:
        - crm_auth: []
      responses:
        '200':
          description: Успешное добавление
          examples:
            Успешное добавление:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 87
                name: "Хабаровск"
                sort: "100"
                aoguid: "d8327a56-80de-4df2-815c-4f6ab1224c50"
                disid: "2"
                okato: "79000000000"
                parentguid: ""
                regioncode: "01"
              - id: 88,
                name: "Владивосток"
                sort: "100"
                aoguid: "5c48611f-5de6-4771-9695-7e36a4e7529d"
                disid: "5"
                okato: "84000000000"
                parentguid: ""
                regioncode: "04"
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/deals/{id}/delivery/calc':
    get:
      tags:
        - cost
      summary: Получение расчёта перевозки
      description: Получение расчёта перевозки по id заявки
      operationId: getDeliveryPriceByDeal
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID заявки, которую нужно рассчитать'
          type: integer
      responses:
        '200':
          description: Успешный расчёт
          examples:
            Успешный расчёт:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                deal_id: '23'
              response:
                deal:
                  id: 23
                  created_at: '2018-03-21 12:21:39'
                  updated_at: '2018-05-11 02:39:00'
                  sort: '100'
                  description: '1236'
                  responsible_id: '4'
                  from_stock_id: '1'
                  to_stock_id: '2'
                  from_city: Белгород г
                  to_city: Шебекино г
                  from_street: '123123'
                  to_street: null
                  from_address: '123'
                  to_address: null
                  applicant_id: '70'
                  sender_id: '70'
                  recipient_id: '74'
                  payer_id: '70'
                  status_id: '6'
                  traking_number: DL-23-3FE10565
                  applicant_contact_id: null
                  sender_contact_id: null
                  recipient_contact_id: null
                  payer_contact_id: null
                  price: 2273426.6
                  full_price:
                    discount: 1516284.4
                    result_without_discount: 3789711
                    result_with_discount: 2273426.6
                  freight:
                    - id: 16
                      created_at: '2018-03-14 13:13:28'
                      updated_at: '2018-05-11 02:39:00'
                      description: '123'
                      size: '1'
                      size_units: м
                      status_id: '3'
                      deal_id: '23'
                      departure_date: '2018-03-31 03:00:00'
                      traking_number: FR-16-40420569
                      weight: '123'
                      seats_number: '123'
                      doom: '1'
                      factory_package: '0'
                      price: 14491.6
                      full_price:
                        default: '110'
                        default_calc: 100
                        oversize: 11
                        doom: 24000
                        additional_services: 155
                        result_without_discount: 24486
                        discount: 9994.4
                        result_with_discount: 14491.6
                      sort: '100'
                      services:
                        - name: Нестандартное хранение груза
                          active: '0'
                          markup_type: '1'
                          markup_value: '100'
                          pivot:
                            freight_id: '16'
                            service_id: '11'
                        - name: Погрузка груза
                          active: '0'
                          markup_type: '2'
                          markup_value: '50'
                          pivot:
                            freight_id: '16'
                            service_id: '8'
                      size_correct: '1.000'
                      prices:
                        weight_price: '100'
                        volume_price: '100'
                        weight_min: '2.000'
                        volume_min: '1.000'
                        price_weight_min: '120'
                        price_volume_min: '110'
                        is_default: false
                      calculation_type_calc: 200
                      calculation_type: volume
                      oversize_type: weight
                    - id: 17
                      created_at: '2018-03-21 12:21:41'
                      updated_at: '2018-05-11 02:39:00'
                      description: '213'
                      size: '12345'
                      size_units: м
                      status_id: '3'
                      deal_id: '23'
                      departure_date: '2018-03-22 03:00:00'
                      traking_number: FR-17-40060561
                      weight: '5'
                      seats_number: '12'
                      doom: '0'
                      factory_package: '0'
                      price: 2258935
                      full_price:
                        default: 1234500
                        default_calc: 1234500
                        oversize: 61725
                        doom: 0
                        additional_services: 0
                        result_without_discount: 3765225
                        discount: 1506290
                        result_with_discount: 2258935
                      sort: '100'
                      services: []
                      size_correct: '12345.000'
                      prices:
                        weight_price: '100'
                        volume_price: '100'
                        weight_min: '2.000'
                        volume_min: '1.000'
                        price_weight_min: '120'
                        price_volume_min: '110'
                        is_default: false
                      calculation_type_calc: 2469000
                      calculation_type: volume
                      oversize_type: volume
                  payer:
                    id: 70
                    name: ООО "ГУГЛ"
                    inn: '7704582421'
                    kpp: '770501001'
                    group:
                      - id: 3
                        name: Тестовая группа контерагентов
                        description: null
                        code: test
                        sort: '100'
                        pivot:
                          customer_id: '70'
                          group_id: '3'
                      - id: 4
                        name: Тестовая группа контерагентов 2
                        description: null
                        code: test2
                        sort: '100'
                        pivot:
                          customer_id: '70'
                          group_id: '4'
                  discount:
                    - id: 1
                      name: Тестовая скидка
                      period: constant
                      date_from: null
                      date_to: null
                      discount_type: '1'
                      discount_value: '100'
                    - id: 2
                      name: Тестовая скидка 2
                      period: constant
                      date_from: null
                      date_to: null
                      discount_type: '2'
                      discount_value: '10'
                    - id: 4
                      name: Тестовая скидка 3
                      period: period
                      date_from: '2018-05-07'
                      date_to: '2018-05-10'
                      discount_type: '2'
                      discount_value: '10'
                    - id: 1
                      name: Тестовая скидка
                      period: constant
                      date_from: null
                      date_to: null
                      discount_type: '1'
                      discount_value: '100'
                    - id: 2
                      name: Тестовая скидка 2
                      period: constant
                      date_from: null
                      date_to: null
                      discount_type: '2'
                      discount_value: '10'
                    - id: 5
                      name: Тестовая скидка 4
                      period: period
                      date_from: '2018-05-07'
                      date_to: '2018-05-10'
                      discount_type: '2'
                      discount_value: '10'
                cities:
                  from:
                    id: 1654
                    name: Белгород г
                    zone_id: '94'
                    zone:
                      id: 94
                      name: Белгородская обл
                  to:
                    id: 1675
                    name: Шебекино г
                    zone_id: '94'
                    zone:
                      id: 94
                      name: Белгородская обл
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/cost/discount':
    post:
      tags:
        - discount
      summary: Добавление нововой скидки на перевозки
      description: Добавление нововой скидки на перевозки
      operationId: postDiscount
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CostDiscount'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: Стандартная скидка для постоянных клиентов
                description: Скидка для постоянных клиентов
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
              response:
                id: 1
                name: Стандартная скидка для постоянных клиентов
                description: Скидка для постоянных клиентов
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - discount
      summary: Изменение нововой скидки на перевозки
      description: Изменение нововой скидки на перевозки
      operationId: putDiscount
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/CostDiscount'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
                name: Стандартная скидка для постоянных клиентов 2
                description: Скидка для постоянных клиентов 2
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
              response:
                id: 1
                name: Стандартная скидка для постоянных клиентов 2
                description: Скидка для постоянных клиентов 2
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - discount
      summary: Получение списка скидок
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        (запрос хотябы с параметром count)
      operationId: getDiscount
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 1
                name: Стандартная скидка для постоянных клиентов 1
                description: Скидка для постоянных клиентов 1
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
              - id: 2
                name: Стандартная скидка для постоянных клиентов 2
                description: Скидка для постоянных клиентов 2
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/stock?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                - id: 1
                  name: Стандартная скидка для постоянных клиентов 1
                  description: Скидка для постоянных клиентов 1
                  period: constant
                  date_from: 2018-01-01
                  date_to: 2018-12-31
                  sort: 100
                  active: 1
                  discount_type: 2
                  discount_value: 30
                  customers_group_id: 14
                - id: 2
                  name: Стандартная скидка для постоянных клиентов 2
                  description: Скидка для постоянных клиентов 2
                  period: constant
                  date_from: 2018-01-01
                  date_to: 2018-12-31
                  sort: 100
                  active: 1
                  discount_type: 2
                  discount_value: 30
                  customers_group_id: 14
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/cost/discount/byid/{id}':
    get:
      tags:
        - discount
      summary: Получение скидки
      description: Получение скидки по id
      operationId: getDiscountById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 87
              response:
                id: 1
                name: Стандартная скидка для постоянных клиентов 1
                description: Скидка для постоянных клиентов 1
                period: constant
                date_from: 2018-01-01
                date_to: 2018-12-31
                sort: 100
                active: 1
                discount_type: 2
                discount_value: 30
                customers_group_id: 14
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - discount
      summary: Удаление скидки
      description: Удаление скидки по id
      operationId: deleteDiscountById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/company':
    post:
      tags:
        - company
      summary: Добавление новой компании исполнителя
      description: Добавление новой компании исполнителя
      operationId: postCompany
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Company'
      responses:
        '200':
          description: Успешное добавление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: null
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
              response:
                id: 1
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    put:
      tags:
        - company
      summary: Изменение компании исполнителя
      description: Изменение компании исполнителя
      operationId: putCompany
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: body
          name: body
          description: Тело запроса
          required: true
          schema:
            $ref: '#/definitions/Company'
      responses:
        '200':
          description: Успешное изменение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
              response:
                id: 1
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
        '400':
          description: Не верный формат одного из полей (отслеживается по полю 'errors')
          schema:
            $ref: '#/definitions/ValidatorResponse'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
        '500':
          description: Ошибка добавления
          schema:
            $ref: '#/definitions/500Response'
    get:
      tags:
        - company
      summary: Получение списка компаний исполнителей
      description: >-
        Получение полного (запрос без параметров) или страничного списка
        (запрос хотябы с параметром count)
      operationId: getCompany
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы в постраничной навигации
          type: integer
        - name: count
          in: query
          description: Количество записей на странице в постраничной навигации
          type: integer
        - name: order_by
          in: query
          description: Поле для сортировки (одно из полей бд)
          type: string
        - name: order_type
          in: query
          description: Направление сортировки (asc/desc)
          type: string
        - name: filter
          in: query
          description: Массив с правилами фильтрации выборки
          type: string
      responses:
        '200':
          description: Успешное получение
          examples:
            Без постраничной навигации:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request: []
              response:
              - id: 1
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
              - id: 2
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
            С постраничной навигацией:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                count: '2'
              response:
                total: 4
                per_page: '2'
                current_page: 1
                last_page: 2
                next_page_url: 'http://backend.zelenoe.pro/api/stock?page=2'
                prev_page_url: null
                from: 1
                to: 2
                data:
                - id: 1
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
                - id: 2
                  name: ООО "ФЛАГМАН АМУР"
                  inn: '123123123123'
                  kpp: '123123123123'
                  bak: '123123123123'
                  checking_account: '123123123123'
                  correspondent_account: '123123123123'
                  initials: ИИИ
                  position: Директор
                  on_base: Приказа
                  sort: '100'
                  is_default: '1'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
  '/company/byid/{id}':
    get:
      tags:
        - company
      summary: Получение компании исполнителя
      description: Получение компании исполнителя по id
      operationId: getCompanyById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно получить'
          type: integer
      responses:
        '200':
          description: Успешное получение
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: 1
              response:
                id: 1
                name: ООО "ФЛАГМАН АМУР"
                inn: '123123123123'
                kpp: '123123123123'
                bak: '123123123123'
                checking_account: '123123123123'
                correspondent_account: '123123123123'
                initials: ИИИ
                position: Директор
                on_base: Приказа
                sort: '100'
                is_default: '1'
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
    delete:
      tags:
        - company
      summary: Удаление компани исполнителя
      description: Удаление компани исполнителя по id
      operationId: deleteCompanyById
      produces:
        - application/json
      security:
        - crm_auth: []
      parameters:
        - in: path
          name: id
          required: true
          description: 'ID записи, которую нужно удалить'
          type: integer
      responses:
        '200':
          description: Успешное удаление
          examples:
            Пример:
              success: true
              status: 200
              errors:
                messages: ''
                errors: ''
              request:
                id: '1'
              response: true
        '403':
          description: У пользователя нет прав на выполнение действия
          schema:
            $ref: '#/definitions/403Response'
securityDefinitions:
  crm_auth:
    description: ''
    type: apiKey
    name: Authorization
    in: header
definitions:
  Task:
    type: object
    required: 
      - name
      - responsible_id
      - type
      - status
    properties:
      name:
        type: string
        maxLength: 255
        description: Название задачи
        example: Напонить сайт
      description:
        type: string
        maxLength: 2500
        description: Описание задачи
        example: Наполнить сайт example.com текстами
      sort:
        type: integer
        maxLength: 10
        description: Сортировка задачи
        example: 2
      responsible_id:
        type: integer
        maxLength: 10
        description: id ответственного за выполнение задачи
        example: 8
      project_id:
        type: integer
        maxLength: 10
        description: 'id проекта, к которому относится задачи'
        example: 4
      deal_id:
        type: integer
        maxLength: 10
        description: 'id заявки, к которой относится задачи'
        example: 4
      deadline:
        type: string
        description: >-
          дедлайн, время когда задача должна быть вполнена, в формате
          Y-m-d G:i:s
        example: '2017-09-20 18:00:00'
      status_id:
        type: integer
        maxLength: 10
        description: id статуса задачи
        example: 2
      parent_task_id:
        type: integer
        maxLength: 10
        description: id задачи - родителя
        example: 2
      time_start:
        type: string
        description: 'Время начала выполнения задачи, в формате Y-m-d G:i:s'
        example: '2017-09-20 06:00:00'
      time_finish:
        type: string
        description: 'Время окончания выполнения задачи, в формате Y-m-d G:i:s'
        example: '2017-09-20 16:00:00'
      wasted_time:
        type: string
        maxLength: 11
        description: 'Время затраченное на выполнение задачи, указывается в секундах'
        example: 3600
      type:
        type: boolean
        maxLength: 1
        description: '1 для задач в модуле "Deals", 0 для задач в модуле "Tasks"'
        example: 1
      status:
        type: integer
        maxLength: 1
        description: '1 - поставленна, 2 - выполняется, 3 - выполненна'
        example: 1
  TasksGroup:
    type: object
    required:
      - name
      - description
      - sort
      - planned_date
      - actual_date
    properties:
      name:
        type: string
        maxLength: 255
        description: Название группы
        example: Задачи по дизайну
      description:
        type: string
        maxLength: 255
        description: Описание группы
        example: Все задачи по дизайну всех проектов
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      planned_date:
        type: string
        description: 'Планируемая дата сдачи проекта в формате "Y-m-d G:i:s"'
        example: '2017-02-01 00:00:00'
      actual_date:
        type: string
        description: 'Фактическая дата сдачи проекта в формате "Y-m-d G:i:s"'
        example: '2017-01-01 00:00:00'
  TaskProject:
    type: object
    required:
      - name
      - description
      - sort
      - group_id
    properties:
      name:
        type: string
        maxLength: 255
        description: Название группы
        example: Задачи по дизайну
      description:
        type: string
        maxLength: 255
        description: Описание группы
        example: Все задачи по дизайну всех проектов
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      group_id:
        type: integer
        maxLength: 10
        description: id группы проекта
        example: 3
  TaskStatus:
    type: object
    required:
      - name
      - description
      - sort
      - project_id
    properties:
      name:
        type: string
        maxLength: 255
        description: Название статуса
        example: В работе
      description:
        type: string
        maxLength: 255
        description: Описание статуса
        example: Все задачи в работе
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      project_id:
        type: integer
        maxLength: 10
        description: id проекта
        example: 3
  Comment:
    type: object
    required:
      - text
      - entity
      - entity_id
      - module_code
      - 'file[]'
    properties:
      text:
        type: string
        maxLength: 5000
        description: Текст комментария
        example: 'Задачу сделал, можно закрывать'
      entity:
        type: string
        description: 'Сущность, к которой относится комментарий (task, user и тд)'
        example: task
      entity_id:
        type: integer
        maxLength: 10
        description: 'ID сущности, которую пользователь комментирует'
        example: 2
      module_code:
        type: string
        maxLength: 255
        description: 'Код модуля, в котором находится сущность'
        example: tasks
      'file[]':
        type: string
        description: Файл - приложение к комментарию
  Customers:
    type: object
    required:
      - name
      - sort
      - type
      - inn
      - kpp
      - passport_number
      - addresses
    properties:
      name:
        type: string
        maxLength: 255
        description: Название контрагента
        example: ООО Рога и копыта
      sort:
        type: integer
        description: Сортировка
        example: 100
      type:
        type: integer
        maxLength: 10
        description: 'Тип контерагента (1 - юр лицо, 2 - физ лицо)'
        example: 2
      inn:
        type: integer
        maxLength: 255
        description: ИНН
        example: 123123123
      kpp:
        type: integer
        maxLength: 255
        description: КПП
        example: 12312312312
      passport_number:
        type: integer
        maxLength: 255
        description: 'Номер паспорта'
        example: 12312312312
      addresses:
        type: string
        maxLength: 255
        description: 'Массив адресов'
        example: '[3,4,5]'
  CustomersContacts:
    type: object
    required:
      - name
      - description
      - sort
      - phone
      - email
      - customer_id
    properties:
      name:
        type: string
        maxLength: 255
        description: Название контакта
        example: Директор Иванов И.И.
      description:
        type: string
        maxLength: 5000
        description: Описание контакта
        example: 'Директор, звонить после 11:00'
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 2
      phone:
        type: string
        maxLength: 255
        description: Номер телефона контакта
        example: 79098763456
      email:
        type: string
        maxLength: 255
        description: Email контакта
        example: dir@rendk.ru
      customer_id:
        type: integer
        maxLength: 10
        description: 'ID контрагента, к которому добавляется контакт'
        example: 2
  CustomersDocuments:
    type: object
    required:
      - name
      - description
      - sort
      - file
      - type
      - customer_id
    properties:
      name:
        type: string
        maxLength: 255
        description: Название документа
        example: Договор
      description:
        type: string
        maxLength: 5000
        description: Описание документа
        example: Договор на оказание услуг
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 2
      file:
        type: string
        description: 'Файл документа (pdf, doc, excel etc.)'
      type:
        type: integer
        maxLength: 10
        description: ID типа документа
        example: 1
      customer_id:
        type: integer
        maxLength: 10
        description: 'ID контрагента, к которому добавляется документ'
        example: 1
  CustomersDocumentsFile:
    type: object
    required:
      - id
      - file
      - _method
    properties:
      id:
        type: integer
        maxLength: 10
        description: 'ID документа, который нужно изменить'
        example: '2'
      file:
        type: string
        description: 'Файл документа (pdf, doc, excel etc.)'
      _method:
        type: string
        maxLength: 255
        description: Метод для отправки данных (всегда PUT)
        example: PUT
  CustomersDocumentsType:
    type: object
    required:
      - name
      - sort
    properties:
      name:
        type: string
        maxLength: 255
        description: Название типа документа
        example: Договоры
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 2
  CustomersGroup:
    type: object
    required:
      - name
      - sort
      - description
      - code
    properties:
      name:
        type: string
        maxLength: 255
        description: Название группы контрагента
        example: Основные клиенты
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
      description:
        type: string
        description: Описание группы
        example: Группа для главных клиентов
        maxLength: 5000
      code:
        type: string
        description: Символьный код группы
        example: main_customers
        maxLength: 255
  Deals:
    type: object
    required:
      - executor_company_id
      - from_stock_id
      - to_stock_id
      - from_city
      - to_city
      - from_street
      - to_street
      - from_address
      - to_address
      - applicant_id
      - sender_id
      - recipient_id
      - payer_id
      - status_id
    properties:
      forwarding_date_from:
        type: string
        description: Дата и время забора при экспедировании
        example: '2018-04-16 13:06:34'
      forwarding_date_to:
        type: string
        description: Дата и время забора при экспедировании
        example: '2018-04-26 13:06:34'
      executor_company_id:
        type: integer
        maxLength: 9999999999
        description: ID компании исполнителя
        example: 100
      sort:
        type: integer
        maxLength: 9999999999
        description: Сортировка
        example: 100
      description:
        type: string
        maxLength: 255
        description: Описание заявки 
        example: Заявка на перевозку чайника
      from_stock_id:
        type: integer
        maxLength: 9999999999
        description: ID склада откуда будет отправлен груз
        example: 3
      to_stock_id:
        type: integer
        maxLength: 9999999999
        description: ID склада куда будет доставлен груз
        example: 5
      from_city:
        type: string
        maxLength: 255
        description: Город откуда будет отправлен груз
        example: Хабаровск
      to_city:
        type: string
        maxLength: 255
        description: Город куда будет доставлен груз
        example: Владивосток
      from_street:
        type: string
        maxLength: 255
        description: Улица, откуда будет отправлен груз
        example: Зелёная
      to_street:
        type: string
        maxLength: 255
        description: Улица, куда будет доставлен груз
        example: Ленина
      from_address:
        type: string
        maxLength: 255
        description: Адрес, откуда отправляется груз
        example: дом 5 квартир 4
      to_address:
        type: string
        maxLength: 255
        description: Адрес, куда будет доставлен груз
        example: дом 7 корпус 2 квартира 87
      applicant_id:
        type: integer
        maxLength: 9999999999
        description: ID контрагента - заявителя
        example: 2
      sender_id:
        type: integer
        maxLength: 9999999999
        description: ID контрагента - отправителя
        example: 3
      recipient_id:
        type: integer
        maxLength: 9999999999
        description: ID контрагента - получателя
        example: 4
      payer_id:
        type: integer
        maxLength: 9999999999
        description: ID контрагента - плательщика
        example: 5
      status_id:
        type: integer
        maxLength: 9999999999
        description: ID cтатуса заявки
        example: 2
      price:
        type: string
        maxLength: 255
        description: Цена заявки
        example: 45000.50
      full_price:
        type: string
        maxLength: 255
        description: JSON строка с полным объектом цены заявки
        example: '{"discount": 1516284.4, "result_with_discount": 2273426.6, "result_without_discount": 3789711}'
  DealsStatus:
    type: object
    required:
      - name
      - description
      - type
    properties:
      name:
        type: string
        description: Название статуса
        example: Тестовый статус
        maxLength: 255
      description:
        type: string
        description: Описание
        example: Тестовая заявка
        maxLength: 5000
      type:
        type: string
        description: Тип статуса (initial, final)
        example: initial
        maxLength: 255
  DealsFreightStatus:
    type: object
    required:
      - name
      - description
      - type
    properties:
      name:
        type: string
        description: Название статуса
        example: Тестовый статус
        maxLength: 255
      description:
        type: string
        description: Описание
        example: Тестовая заявка
        maxLength: 5000
      type:
        type: string
        description: Тип статуса (initial, final)
        example: initial
        maxLength: 255
  DealsFreight:
    type: object
    required:
      - sort
      - description
      - size_units
      - status_id
      - deal_id
      - size
      - weight
      - seats_number
      - price
      - full_price
    properties:
      sort:
        type: integer
        description: Сортировка
        example: 100
      description:
        type: string
        description: Описание
        example: Тестовая заявка
      size_units:
        type: string
        description: Единицы измерения размера груза
        example: мм
      status_id:
        type: integer
        description: id статуса груза
        example: 2
      deal_id:
        type: integer
        description: 'id заявки, к которой будет привязан груз'
        example: 1
      size:
        type: integer
        description: размер груза
        example: 100
      weight:
        type: integer
        description: 'вес груза'
        example: 1
      seats_number:
        type: integer
        description: количество мест
        example: 100
      price:
        type: string
        description: Цена груза
        example: '773355.5'
        maxLength: 9999999999
      full_price:
        type: string
        description: Полный объект цены
        example: '{\"discount\": 516237, \"result_with_discount\": 773355.5, \"result_without_discount\": 1289592.5}'
  DealsFreightServices:
    type: object
    required:
      - freight_id
      - service_id
    properties:
      sort:
        type: integer
        description: id груза
        example: 1
      description:
        type: string
        description: Массив с id услуг
        example:
          - '1'
          - '2'
          - '3'
  DealsServices:
    type: object
    required:
      - name
      - description
      - markup_type
      - markup_value
      - active
      - sort
    properties:
      name:
        type: string
        description: Название услуги
        example: Хрупкий груз
        maxLength: 255
      description:
        type: string
        description: Описание
        example: Груз требует аккуратной перевозки
        maxLength: 255
      markup_type:
        type: string
        description: Тип наценки процент (1) или фиксированная стоимость (2)
        example: 1
        maxLength: 255
      markup_value:
        type: integer
        description: Значение наценки
        example: 20
        maxLength: 255
      active:
        type: integer
        description: Флаг активности
        example: 1
        maxLength: 1
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
  DealsTracking:
    type: object
    required:
      - stock_id
      - responsible_id
      - freight_id
      - status_id
    properties:
      stock_id:
        type: integer
        description: id склада
        example: null
        maxLength: 9999999999
      responsible_id:
        type: integer
        description: id ответственного на складе
        example: 1
        maxLength: 9999999999
      freight_id:
        type: integer
        description: id груза
        example: 2
        maxLength: 9999999999
      status_id:
        type: integer
        description: Id статуса
        example: 2
        maxLength: 9999999999
  DealsExtraSizeSettings:
    type: object
    required:
      - max
      - min
      - markup_type
      - markup_value
    properties:
      min:
        type: integer
        description: Минимальное значение условия
        example: 1
        maxLength: 9999999999
      max:
        type: integer
        description: Максимальное значение условия
        example: 5000
        maxLength: 9999999999
      markup_type:
        type: integer
        description: Тип наценки, 1 - долевая, 2 - процентная
        example: 1
        maxLength: 1
      markup_value:
        type: integer
        description: значение наценки
        example: 100
        maxLength: 9999999999
  DealsTrackingStatus:
    type: object
    required:
      - name
      - description
      - sort
    properties:
      name:
        type: string
        description: Название статуса
        example: "Тестовый статус"
        maxLength: 255
      description:
        type: string
        description: Название статуса
        example: "Тестовый статус"
        maxLength: 255
      sort:
        type: integer
        description: сортировка
        example: 2
        maxLength: 255
  DealsDocument:
    type: object
    required:
      - deal_id
      - documents
    properties:
      deal_id:
        type: integer
        description: id заявки для изменения
        example: 2
        maxLength: 9999999999
      documents:
        type: string
        description: массив с кодами документов
        example: ["ttn", "nakladnaya", "schet"]
  Company:
    type: object
    required:
      - name
      - inn
      - kpp
      - bak
      - checking_account
      - correspondent_account
      - initials
      - position
      - on_base
      - sort
      - is_default
    properties:
      name:
        type: string
        maxLength: 255
        description: Название компании
        example: ООО "Рога и копыта"
      inn:
        type: integer
        maxLength: 9999999999
        description: ИНН компании
        example: 123123123123
      kpp:
        type: integer
        maxLength: 9999999999
        description: КПП компании
        example: 123123123123
      bak:
        type: integer
        maxLength: 9999999999
        description: БАК компании
        example: 123123123123
      checking_account:
        type: integer
        maxLength: 9999999999
        description: Расчётный счёт
        example: 12312312312
      correspondent_account:
        type: integer
        maxLength: 9999999999
        description: Коррекспонденский счёт
        example: 123123123123
      initials:
        type: string
        maxLength: 9999999999
        description: Инициалы руководителя (ФИО)
        example: Иванов Иван Иванович
      position:
        type: integer
        maxLength: 9999999999
        description: Должность руководителя
        example: Директор
      on_base:
        type: integer
        maxLength: 9999999999
        description: На основании
        example: Приказа
      sort:
        type: integer
        maxLength: 9999999999
        description: Сортировка
        example: 100
      is_default:
        type: integer
        maxLength: 1
        description: Является исполнителем по умолчанию 
        example: 1 или 0
  Stock:
    type: object
    required:
      - name
      - description
      - sort
      - city_id
    properties:
      name:
        type: string
        description: Название склада
        example: Склад 1
        maxLength: 255
      description:
        type: string
        description: Описание
        example: Склад 1
        maxLength: 5000
      city_id:
        type: integer
        description: id города
        example: 6
        maxLength: 9999999999
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
  Finance:
    type: object
    required:
      - payment_number
      - customer_id
      - description
      - date
      - sum
      - 'file[]'
    properties:
      payment_number:
        type: string
        description: Бухгалтеский номер документа
        example: 123-2-4
        maxLength: 255
      customer_id:
        type: integer
        description: id контрагента
        example: 3
        maxLength: 9999999999
      description:
        type: string
        description: Описание документа
        example: Платёжка по договору номер 20-2017
        maxLength: 5000
      date:
        type: string
        description: Дата внесения документа
        example: null
      sum:
        type: integer
        description: Сумма документа
        example: 150000
        maxLength: 9999999999
      'file[]':
        type: string
        description: Массив с документами
        example: 'Массив с файлами, поле должно называться "file[]"'
  FinanceFile:
    type: object
    required:
      - id
      - 'file[]'
    properties:
      id:
        type: integer
        description: id финансовой записи
        example: 4
        maxLength: 9999999999
      'file[]':
        type: string
        description: Массив с документами
        example: 'Массив с файлами, поле должно называться "file[]"'
  Addresses:
    type: object
    required:
      - address
      - description
    properties:
      address:
        type: string
        description: Строка адреса из DaData
        example: г Москва, г Зеленоград, ул Зелёная, д 30А, кв 3
        maxLength: 255
      description:
        type: string
        description: Описание адреса
        example: Юридический адрес
        maxLength: 5000
  Zone:
    type: object
    required:
     - name
     - aoguid
     - disid
     - okato
     - parentguid
     - regioncode
     - sort
    properties:
      name:
        type: string
        description: Название
        example: Адыгея Респ
        maxLength: 255
      aoguid:
        type: string
        description: Текстовый id
        example: d8327a56-80de-4df2-815c-4f6ab1224c50
        maxLength: 255
      disid:
        type: integer
        description: id
        example: 2
      okato:
        type: string
        description: окато
        example: 79000000000
        maxLength: 255
      parentguid:
        type: integer
        description: id
        example: 1
        maxLength: 9999999999
      regioncode:
        type: string
        description: Код региона
        example: 01
        maxLength: 255
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
  City:
    type: object
    required:
     - name
     - aoguid
     - disid
     - okato
     - parentguid
     - regioncode
     - sort
    properties:
      name:
        type: string
        description: Название
        example: Хабаровск
        maxLength: 255
      aoguid:
        type: string
        description: Текстовый id
        example: d8327a56-80de-4df2-815c-4f6ab1224c50
        maxLength: 255
      disid:
        type: integer
        description: id
        example: 2
        maxLength: 9999999999
      okato:
        type: string
        description: окато
        example: 79000000000
        maxLength: 255
      parentguid:
        type: integer
        description: id
        example: 1
        maxLength: 9999999999
      regioncode:
        type: string
        description: Код региона
        example: 01
        maxLength: 255
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
  CostDiscount:
    type: object
    required:
     - name
     - description
     - period
     - date_from
     - date_to
     - sort
     - active
     - discount_type
     - discount_value
     - customers_group_id
    properties:
      name:
        type: string
        description: Название
        example: Стандартная скидка
        maxLength: 255
      description:
        type: string
        description: Описание
        example: Скидка для постоянных клиентов
        maxLength: 5000
      period:
        type: string
        description: Период действия скидки (constant - постоянная скидка, period - скидка в периоде)
        example: constant
        maxLength: 255
      date_from:
        type: string
        description: Дата начала действия скидки
        example: 2018-01-01
      date_to:
        type: string
        description: Дата окончания действия скидки
        example: 2018-12-31
      sort:
        type: integer
        description: Сортировка
        example: 100
        maxLength: 999
      active:
        type: integer
        description: Активность скидки (1 - активна, 0 - не активна)
        example: 1
        maxLength: 1
      discount_type:
        type: integer
        description: Тип скидки (1 - фиксированная, 2 - процентная)
        example: 1
        maxLength: 1
      discount_value:
        type: integer
        description: Значение скидки
        example: 30
        maxLength: 9999999999
      customers_group_id:
        type: integer
        description: ID группы контрагентов, к которым будет применяться скидка
        example: 14
        maxLength: 9999999999
  User:
    type: object
    required:
      - login
      - email
      - password
      - password_confirm
    properties:
      login:
        type: string
        maxLength: 255
        description: Логин пользователя
        example: Yazu
      email:
        type: string
        maxLength: 255
        description: Email пользователя
        example: speed.live@mail.ru
      password:
        type: string
        maxLength: 255
        description: Пароль пользователя
        example: Bb103ecc
      password_confirm:
        type: string
        maxLength: 255
        description: Подтверждение пароля
        example: Bb103ecc
      sort:
        type: integer
        maxLength: 10
        description: Поле сортировки
        example: '100'
  Group:
    type: object
    required:
      - name
      - description
      - code
    properties:
      name:
        type: string
        maxLength: 255
        description: Название группы
        example: Администраторы
      description:
        type: string
        maxLength: 255
        description: Описание группы
        example: Могут производить любые действия
      code:
        type: string
        maxLength: 255
        description: Символьный код группы
        example: administrators
      sort:
        type: integer
        maxLength: 10
        description: Поле сортировки
        example: '100'
  Action:
    type: object
    required:
      - name
      - description
      - group_code
      - module_code
      - sort
    properties:
      name:
        type: string
        maxLength: 255
        description: >-
          Символьный код действия должен начинаться с имени модуля и нижнего
          подчёркивания
        example: module_activate_deactivate
      description:
        type: string
        maxLength: 255
        description: Описание действия
        example: Активирование и деактивация модулей
      group_code:
        type: string
        maxLength: 255
        description: >-
          Символьный код группы пользователей, которой будет разрешено выполнять
          действие
        example: administrators
      module_code:
        type: string
        maxLength: 255
        description: 'Символьный код модуля, к которому относиться действие'
        example: module
      sort:
        type: integer
        maxLength: 10
        description: Поле сортировки
        example: '100'
  Module:
    type: object
    required:
      - code
      - description
      - sort
      - active
      - user_access
      - load
    properties:
      code:
        type: string
        maxLength: 255
        description: Символьный код модуля
        example: module
      description:
        type: string
        maxLength: 255
        description: Текстовое описание модуля
        example: Главный модуль
      sort:
        type: integer
        maxLength: 10
        description: Поле сортировки
        example: '100'
      active:
        type: boolean
        maxLength: 255
        description: Указывает на активность модуля
        example: true
      user_access:
        type: boolean
        maxLength: 255
        description: 'Указывает, имеет ли доступ текущий пользователь к данному модулю'
        example: true
      load:
        type: boolean
        maxLength: 255
        description: >-
          Указывает, успешно ли загрузился модуль (если false, значит есть
          ошибки и модуль работать не будетсес)
        example: true
  ModuleProp:
    type: object
    required:
      - module_name
      - prop_code
      - value
      - multiply
    properties:
      module_name:
        type: string
        maxLength: 255
        description: Символьный код модуля
        example: module
      prop_code:
        type: string
        maxLength: 255
        description: Символьный код свойства модуля
        example: enable
      value:
        type: string
        maxLength: 2500
        description: Значение свойства модуля
        example: true
      multiply:
        type: boolean
        maxLength: 255
        description: Указывает множественное свойство или нет
        example: true
  Property:
    type: object
    required:
      - name
      - code
      - sort
      - module_code
      - field_entity
      - field_type
      - multiply
      - require
      - active
      - default
    properties:
      name:
        type: string
        maxLength: 255
        description: Название свйоства
        example: Аватар
      code:
        type: string
        maxLength: 255
        description: Символьный код свйоства
        example: avatar
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      module_code:
        type: string
        maxLength: 255
        description: cимвольный код модуля
        example: user
      field_entity:
        type: string
        maxLength: 255
        description: Сущность свойства
        example: users
      field_type:
        type: string
        maxLength: 255
        description: Тип сущности
        example: file
      multiply:
        type: boolean
        maxLength: 10
        description: Является ли свойство множественным
        example: 1
      require:
        type: boolean
        maxLength: 10
        description: Является ли свойство обязательным
        example: 1
      active:
        type: boolean
        maxLength: 10
        description: Является ли свойство активным
        example: 1
      default:
        type: boolean
        maxLength: 1
        description: Является ли поле стандартным
        example: 0
  PropertyValue:
    type: object
    required:
      - property_id
      - entity_id
      - code
      - value
    properties:
      property_id:
        type: integer
        maxLength: 10
        description: ID свойства
        example: 3
      entity_id:
        type: integer
        maxLength: 10
        description: ID сущности
        example: 2
      code:
        type: string
        maxLength: 255
        description: Символьный код значения
        example: male
      value:
        type: string
        maxLength: 5000
        description: Значение свойства
        example: Мужской
  putPropertyValue:
    type: object
    required:
      - id
      - property_id
      - entity_id
      - code
      - value
    properties:
      id:
        type: integer
        maxLength: 10
        description: 'ID значения, которое нудно изменить'
        example: 5
      property_id:
        type: integer
        maxLength: 10
        description: ID свойства
        example: 3
      entity_id:
        type: integer
        maxLength: 10
        description: ID сущности
        example: 2
      code:
        type: string
        maxLength: 255
        description: Символьный код значения
        example: male
      value:
        type: string
        maxLength: 5000
        description: Значение свойства
        example: Мужской
  Choices:
    type: object
    required:
      - name
      - code
      - sort
      - property_id
    properties:
      name:
        type: string
        maxLength: 255
        description: Название значения
        example: Женщина
      code:
        type: string
        maxLength: 255
        description: Символьный код значения
        example: female
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      property_id:
        type: integer
        maxLength: 255
        description: ID свйоства выбора
        example: 2
  putChoices:
    type: object
    required:
      - id
      - name
      - code
      - sort
      - property_id
    properties:
      id:
        type: integer
        maxLength: 10
        description: 'id значения, котрое нужно изменить'
        example: 3
      name:
        type: string
        maxLength: 255
        description: Название значения
        example: Женщина
      code:
        type: string
        maxLength: 255
        description: Символьный код значения
        example: female
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      property_id:
        type: integer
        maxLength: 255
        description: ID свйоства выбора
        example: 2
  putProperty:
    type: object
    required:
      - id
      - name
      - code
      - sort
      - module_code
      - field_entity
      - field_type
      - multiply
      - require
      - active
      - default
    properties:
      id:
        type: integer
        maxLength: 10
        description: ID записи для изменения
        example: 2
      name:
        type: string
        maxLength: 255
        description: Название свйоства
        example: Аватар
      code:
        type: string
        maxLength: 255
        description: Символьный код свйоства
        example: avatar
      sort:
        type: integer
        maxLength: 10
        description: Сортировка
        example: 100
      module_code:
        type: string
        maxLength: 255
        description: cимвольный код модуля
        example: user
      field_entity:
        type: string
        maxLength: 255
        description: Сущность свойства
        example: users
      field_type:
        type: string
        maxLength: 255
        description: Тип сущности
        example: file
      multiply:
        type: boolean
        maxLength: 10
        description: Является ли свойство множественным
        example: 1
      require:
        type: boolean
        maxLength: 10
        description: Является ли свойство обязательным
        example: 1
      active:
        type: boolean
        maxLength: 10
        description: Является ли свойство активным
        example: 1
      default:
        type: boolean
        maxLength: 1
        description: Является ли поле стандартным
        example: 0
  Login:
    type: object
    required:
      - login
      - password
      - login_auth
    properties:
      login:
        type: string
        maxLength: 255
        description: Логин или email пользователя (контролируется параметром login_auth)
        example: Yazu
      password:
        type: string
        maxLength: 255
        description: Пароль пользователя
        example: Bb103ecc
      login_auth:
        type: boolean
        maxLength: 4
        description: 'true - если нужна авторизация по логину, false - если по email'
        example: true
  Log:
    type: object
    required:
      - id
      - user_ip
      - user_id
      - module_id
      - log_type
      - log_action
      - description
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        maxLength: 11
        description: ID записи в логе
        example: 5
      user_ip:
        type: string
        maxLength: 255
        description: ip адрес пользователя
        example: 182.932.839.12
      user_id:
        type: integer
        maxLength: 11
        description: 'ID пользователя, сделавшего запись'
        example: 4
      module_id:
        type: integer
        maxLength: 11
        description: 'ID модуля, в коротом произошло действие'
        example: 3
      log_type:
        type: string
        maxLength: 255
        description: 'Тип записи (system/user), указывает какого типа действие произошло'
        example: system
      log_action:
        type: string
        maxLength: 255
        description: 'Символьный код действия, которое произошло'
        example: user_addusers
      description:
        type: string
        maxLength: 255
        description: Комментарий действия
        example: Пользователь Admin добавил пользователя Yazu
      created_at:
        type: string
        maxLength: 255
        description: Дата создания записи
        example: '2017-08-16 00:00:00'
      updated_at:
        type: string
        maxLength: 255
        description: Дата изменения записи
        example: '2017-08-16 00:00:00'
  ApiResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'true'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '200'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            description: Описание ошибки
          errors:
            type: string
            description: Текст ошибки
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: object
        description: Массив/объект/строка с ответом сервера
        example: true
  TrueResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'true'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '200'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: ''
          errors:
            type: string
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Положительный ответ сервера
        example: true
  403Response:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '403'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: The current user does not have sufficient rights to do this action
          errors:
            type: string
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: false
  401Response:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '403'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: IP address is compromised!/Bad access token
          errors:
            type: string
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: false
  404Response:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '404'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: Not found
          errors:
            type: string
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: []
  500Response:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '500'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: Something went wrong
          errors:
            type: string
            description: Текст ошибки
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: false
  400Response:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '400'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: Current error text
          errors:
            type: string
            description: Текст ошибки
            example: ''
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: false
  ValidatorResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'false'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '400'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            example: The given data failed to pass validation.
          errors:
            type: array
            description: Массив с ошибками валидации
            example:
              - validation.unique
              - validation.alpha_dash
              - validation.required
              - 'validation.max:255'
              - 'validation.same:password'
              - validation.integer
            items:
              type: object
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: boolean
        description: Отрицательный ответ сервера
        example: false
  LoginResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'true'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '200'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            description: Описание ошибки
          errors:
            type: string
            description: Текст ошибки
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: object
        description: Массив/объект/строка с ответом сервера
        properties:
          id:
            type: integer
            description: ID авторизированого пользователя
            example: 4
          created_at:
            type: string
            description: Дата и время регистрации пользователя
            format: datetime
            example: '2017-07-19 01:44:26'
          updated_at:
            type: string
            description: Дата и время последнего обновления данных пользователя
            format: datetime
            example: '2017-07-19 01:44:26'
          login:
            type: string
            description: Логин пользователя
            example: yazu
          email:
            type: string
            description: Email пользователя
            example: speed.live@mail.ru
          password:
            type: string
            description: Пароль от аккаунта пользователя в зашифрованном виде
            example: $2y$10$cRw8XsjY25gjIGnpWNu8UOBLfLrBCy3Cll58wasW2TjTv
          sort:
            type: integer
            description: Сортировка в списке пользователей
            example: 100
          token_data:
            type: object
            description: Данные токена
            properties:
              token:
                type: string
                description: Токен
                example: dl8rza0uy28swgk4wocoss44g8wk0gw
              refresh_token:
                type: string
                description: Refresh токен для обновления основного
                example: gllpq7d25xc0wows48okkc404k4wwso
  LogoutResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'true'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '200'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            description: Описание ошибки
          errors:
            type: string
            description: Текст ошибки
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: object
        description: Массив/объект/строка с ответом сервера
        properties:
          auth:
            type: boolean
            description: false в случе успешного выхода из системы
            example: false
          redirect_url:
            type: string
            description: URL для редиректа пользователя
            example: /
  RegreshTokenResponse:
    type: object
    properties:
      success:
        type: boolean
        description: 'true - если запрос успешен, false - если нет'
        enum:
          - 'true'
          - 'false'
        example: 'true'
      status:
        type: integer
        description: Статус ответа (200/404/500/403 и т.д.)
        example: '200'
      errors:
        type: object
        description: Массив с полями messages и errors
        properties:
          messages:
            type: string
            description: Описание ошибки
          errors:
            type: string
            description: Текст ошибки
      request:
        type: object
        description: Массив с параметрами запроса от клиента
      response:
        type: object
        description: Массив/объект/строка с ответом сервера
        properties:
          token:
            type: string
            description: Токен
            example: dl8rza0uy28swgk4wocoss44g8wk0gw
          refresh_token:
            type: string
            description: Refresh токен для обновления основного
            example: gllpq7d25xc0wows48okkc404k4wwso
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'