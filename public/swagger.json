{
  "swagger": "2.0",
  "info": {
    "description": "Документация к API CRM Zelenoe. Основной URL http://crm.lets-code.ru/. API доступно по адресу: http://crm.lets-code.ru/api. Авторизация происходит по логину и пролю, защищённые методы работают при помощи заголовка \"Authorization: token_value\"",
    "version": "0.0.1",
    "title": "Zelenoe CRM",
    "termsOfService": "",
    "contact": {
      "email": "speed.live@mail.ru"
    },
    "license": {
      "name": "GNU Public License",
      "url": "http://opensource.org/licenses/gpl-license.php"
    }
  },
  "host": "crm.lets-code.ru",
  "basePath": "/api",
  "tags": [
    {
      "name": "user",
      "description": "Операции над пользователями"
    },
    {
      "name": "auth",
      "description": "Операции с авторизаций"
    },
    {
      "name": "group",
      "description": "Операции над группами пользователей"
    },
    {
      "name": "action",
      "description": "Операции над действиями пользователей"
    },
    {
      "name": "module",
      "description": "Операции над модулями системы"
    },
    {
      "name": "log",
      "description": "Операции над записями в логе"
    },
    {
      "name": "properties",
      "description": "Операции над свойствами"
    },
    {
      "name": "tasks",
      "description": "Операции над задачами"
    },
    {
      "name": "tasksGroup",
      "description": "Операции над группами задач"
    },
    {
      "name": "tasksProjects",
      "description": "Операции над проектами задач"
    },
    {
      "name": "tasksStatus",
      "description": "Операции над статусами задач"
    },
    {
      "name": "comments",
      "description": "Операции над комментариями к сущностям"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/log": {
      "post": {
        "tags": [
          "log"
        ],
        "summary": "Запись в лог",
        "description": "Создание новой записи в логе",
        "operationId": "createLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "group",
                "description"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "yazu"
                },
                "group": {
                  "type": "string",
                  "example": "redactors"
                },
                "description": {
                  "type": "string",
                  "example": "yazu"
                }
              }
            }
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Лог успешно записан",
            "schema": {
              "$ref": "#/definitions/Log"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление логов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка записи в лог",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "log"
        ],
        "summary": "Получение списка логов",
        "description": "Получение полного (запрос без параметров) или страничного списка логов (запрос хотябы с параметром count)",
        "operationId": "getLog",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Фильрация записей",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка логов",
            "schema": {
              "$ref": "#/definitions/Log"
            },
            "examples": {
              "Без постраничной навигации": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 16,
                    "module_id": 5,
                    "user_id": 4,
                    "user_ip": "188.244.161.201",
                    "log_type": "user",
                    "log_action": "user_addusers",
                    "created_at": "2017-08-17 03:30:05",
                    "updated_at": "2017-08-17 03:36:05",
                    "user": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-07-28 00:59:56"
                    },
                    "module": {
                      "id": 5,
                      "code": "user",
                      "description": "User module",
                      "sort": 100,
                      "active": 1,
                      "created_at": "2017-07-31 07:54:04",
                      "updated_at": "2017-07-31 07:54:04"
                    },
                    "action": {
                      "code": "user_addusers",
                      "name": "Добавление пользователей",
                      "description": "Возможность добавлять новых пользователей"
                    }
                  },
                  {
                    "id": 21,
                    "module_id": 5,
                    "user_id": 4,
                    "user_ip": "188.244.161.201",
                    "log_type": "user",
                    "log_action": "user_addusers",
                    "created_at": "2017-08-18 00:44:43",
                    "updated_at": "2017-08-18 00:44:43",
                    "user": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-07-28 00:59:56"
                    },
                    "module": {
                      "id": 5,
                      "code": "user",
                      "description": "User module",
                      "sort": 100,
                      "active": 1,
                      "created_at": "2017-07-31 07:54:04",
                      "updated_at": "2017-07-31 07:54:04"
                    },
                    "action": {
                      "code": "user_addusers",
                      "name": "Добавление пользователей",
                      "description": "Возможность добавлять новых пользователей"
                    }
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "total": 2,
                  "per_page": "10",
                  "current_page": 1,
                  "last_page": 1,
                  "next_page_url": null,
                  "prev_page_url": null,
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 16,
                      "module_id": 5,
                      "user_id": 4,
                      "user_ip": "188.244.161.201",
                      "log_type": "user",
                      "log_action": "user_addusers",
                      "created_at": "2017-08-17 03:30:05",
                      "updated_at": "2017-08-17 03:36:05",
                      "user": {
                        "id": 4,
                        "login": "admin",
                        "email": "speed.live@mail.ru",
                        "sort": 1,
                        "created_at": "2017-07-19 01:44:26",
                        "updated_at": "2017-07-28 00:59:56"
                      },
                      "module": {
                        "id": 5,
                        "code": "user",
                        "description": "User module",
                        "sort": 100,
                        "active": 1,
                        "created_at": "2017-07-31 07:54:04",
                        "updated_at": "2017-07-31 07:54:04"
                      },
                      "action": {
                        "code": "user_addusers",
                        "name": "Добавление пользователей",
                        "description": "Возможность добавлять новых пользователей"
                      }
                    },
                    {
                      "id": 21,
                      "module_id": 5,
                      "user_id": 4,
                      "user_ip": "188.244.161.201",
                      "log_type": "user",
                      "log_action": "user_addusers",
                      "created_at": "2017-08-18 00:44:43",
                      "updated_at": "2017-08-18 00:44:43",
                      "user": {
                        "id": 4,
                        "login": "admin",
                        "email": "speed.live@mail.ru",
                        "sort": 1,
                        "created_at": "2017-07-19 01:44:26",
                        "updated_at": "2017-07-28 00:59:56"
                      },
                      "module": {
                        "id": 5,
                        "code": "user",
                        "description": "User module",
                        "sort": 100,
                        "active": 1,
                        "created_at": "2017-07-31 07:54:04",
                        "updated_at": "2017-07-31 07:54:04"
                      },
                      "action": {
                        "code": "user_addusers",
                        "name": "Добавление пользователей",
                        "description": "Возможность добавлять новых пользователей"
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр логов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "log"
        ],
        "summary": "Удаление записей из лога",
        "description": "Удаление из лога всех записей или за определённое время (если не передавать параметры, удаляет все записи из лога, если передавать то только за указанный период, можно передать только 1 параметр). Вернёт количество удалённых записей.",
        "operationId": "deleteLog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "schema": {
              "type": "object",
              "required": [
                "from",
                "to"
              ],
              "properties": {
                "from": {
                  "type": "string",
                  "example": "2017-08-17 03:30:05"
                },
                "to": {
                  "type": "string",
                  "example": "2017-08-20 03:30:05"
                }
              }
            }
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Записи успешно удалены",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление логов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/log/{id}": {
      "delete": {
        "tags": [
          "log"
        ],
        "summary": "Удаление записи из лога",
        "description": "Удаление записи из лога по её ID",
        "operationId": "deleteLogById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID записи в логе, которую нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Записиь успешно удалёна",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление записей из лога",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Запись с таким ID не найдена",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Создание пользователя",
        "description": "Создание нового пользователя",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Создание пользователя",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно создался",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на создание пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка создания пользователя",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Изменение пользователя",
        "description": "Изменение парамеров существующего пользователя",
        "operationId": "putUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Изменение пользователя",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно изменён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на изменение пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка создания пользователя",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Получение списка пользователей",
        "description": "Получение полного (запрос без параметров) или страничного списка пользователей (запрос хотябы с параметром count)",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка пользователей",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "Без постраничной навигации": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 1,
                    "login": "Yazu",
                    "email": "speed.live@mail.ru",
                    "sort": "100"
                  },
                  {
                    "id": 2,
                    "login": "Yazu",
                    "email": "speed.live@mail.ru",
                    "sort": "100"
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "total": 3,
                  "per_page": 2,
                  "current_page": 1,
                  "last_page": 2,
                  "next_page_url": "http://crm.lets-code.ru/api/user?page=2",
                  "prev_page_url": "null",
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 1,
                      "login": "Yazu",
                      "email": "speed.live@mail.ru",
                      "sort": "100"
                    },
                    {
                      "id": 2,
                      "login": "Yazu",
                      "email": "speed.live@mail.ru",
                      "sort": "100"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/user/{login}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Удаление пользователя по его логину",
        "description": "Удаление пользователя по его логину",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "login",
            "in": "path",
            "description": "Логин пользователя, котого нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Пользователь с таким логином не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/user/id/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Удаление пользователя по его ID",
        "description": "Удаление пользователя по его ID",
        "operationId": "deleteUserById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID пользователя, котого нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Пользователь с таким ID не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Получение пользователя по его ID",
        "description": "Получение пользователя по его ID",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID пользователя, котого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь найден",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2017-07-27 06:40:41"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2017-07-27 06:41:02"
                    },
                    "login": {
                      "type": "string",
                      "example": "Yazu"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@mail.ru"
                    },
                    "sort": {
                      "type": "integer",
                      "example": 100
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр других пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Пользователь с таким ID не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/user/email/{email}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Удаление пользователя по его Email",
        "description": "Удаление пользователя по его Email",
        "operationId": "deleteUserByEmail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email пользователя, котого нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Пользователь с таким email не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Получение пользователя по его Email",
        "description": "Получение пользователя по его Email",
        "operationId": "getUserByEmail",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "Email пользователя, котого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь найден",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2017-07-27 06:40:41"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2017-07-27 06:41:02"
                    },
                    "login": {
                      "type": "string",
                      "example": "Yazu"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@mail.ru"
                    },
                    "sort": {
                      "type": "integer",
                      "example": 100
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр других пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Пользователь с таким email не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/user/{login}/group": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Группы пользователя",
        "description": "Получение всх групп, в которых состоит пользователь",
        "operationId": "userGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "required": true,
            "description": "Логин пользователя",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Группы успешно получены",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 3
                      },
                      "created_at": {
                        "type": "string",
                        "example": "2017-07-27 06:40:41"
                      },
                      "updated_at": {
                        "type": "string",
                        "example": "2017-07-27 06:41:02"
                      },
                      "name": {
                        "type": "string",
                        "example": "Редакторы"
                      },
                      "description": {
                        "type": "string",
                        "example": "Могут провидить редакцию материалов"
                      },
                      "sort": {
                        "type": "integer",
                        "example": 2
                      },
                      "code": {
                        "type": "string",
                        "example": "redactors"
                      },
                      "pivot": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "integer",
                            "example": 5
                          },
                          "group_id": {
                            "type": "integer",
                            "example": 3
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/user/attachgroup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Добавление пользователя к группе",
        "description": "Добавление пользователя к группе",
        "operationId": "attachUserToGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "module_code",
                "action"
              ],
              "properties": {
                "module_code": {
                  "type": "string",
                  "example": "user"
                },
                "action": {
                  "type": "string",
                  "example": "user_addusers"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно добавлен в группу",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление пользователей в группы",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/user/detachgroup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Удаление пользователя из группы",
        "description": "Удаление пользователя из группы",
        "operationId": "detachUserFromGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "login",
                "group"
              ],
              "properties": {
                "login": {
                  "type": "string",
                  "example": "yazu"
                },
                "group": {
                  "type": "string",
                  "example": "redactors"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно удалён из группы",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление пользователей из групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/user/{login}/can/{action}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Проверка доступа пользователя к действию",
        "description": "Проверка, может ли пользователь выполнять какое-либо действие",
        "operationId": "userCan",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "required": true,
            "description": "Логин пользователя",
            "type": "string"
          },
          {
            "in": "path",
            "name": "action",
            "required": true,
            "description": "Действие",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная проверка",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на проверку действий",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/user/{login}/return": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Сброс пароля пользователя",
        "description": "Отправляет пользователю email на сброс пароля",
        "operationId": "userReturnPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "login",
            "required": true,
            "description": "Логин пользователя",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная отправка",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": "true"
                },
                "status": {
                  "type": "integer",
                  "example": "200"
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "delete_old_request": {
                      "type": "boolean",
                      "example": 1
                    },
                    "token_save": {
                      "type": "boolean",
                      "example": 1
                    },
                    "send_mail": {
                      "type": "boolean",
                      "example": 1
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Установка нового пароля пользователя",
        "description": "Устанавливает переданный пароль как новый",
        "operationId": "userResetPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "dawd1341e39unaf8b861to3e193eb1012"
                },
                "password": {
                  "type": "string",
                  "example": "qwerty"
                },
                "password_confirm": {
                  "type": "string",
                  "example": "qwerty"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешная смена пароля",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Пароли не совпадают/неверный токен",
            "schema": {
              "$ref": "#/definitions/400Response"
            }
          },
          "404": {
            "description": "Токен не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя",
        "description": "Авторизация пользователя в системе",
        "operationId": "login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Авторизационные данные",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "404": {
            "description": "Пользователь с данным логином/email не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          },
          "500": {
            "description": "Ошибочный логин или пароль",
            "schema": {
              "$ref": "#/definitions/400Response"
            }
          }
        }
      }
    },
    "/login/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Обновление токена",
        "description": "Обновление токена",
        "operationId": "refreshToken",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "refresh_token",
            "required": true,
            "description": "Токен для обновления",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Токен успешно обновлён",
            "schema": {
              "$ref": "#/definitions/RegreshTokenResponse"
            }
          },
          "401": {
            "description": "Неверный refresh_token",
            "schema": {
              "$ref": "#/definitions/401Response"
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Выход текущего пользователя из системы",
        "description": "Позволяет разлогинить текущего пользователя",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LogoutResponse"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Регистрация пользователя",
        "description": "Регистрация нового пользователя",
        "operationId": "signupUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Регистрация пользователя",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь успешно зарегистрирован",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "500": {
            "description": "Ошибка регистрации пользователя",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/group": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Получение списка групп пользователей",
        "description": "Получение списка групп пользователей",
        "operationId": "getGroups",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Список групп",
            "examples": {
              "Без постраничной навигации": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 3,
                    "created_at": "2017-07-27 06:40:41",
                    "updated_at": "2017-07-27 06:41:02",
                    "name": "Редакторы",
                    "description": "Могут провидить редакцию материалов",
                    "sort": 2,
                    "code": "redactors"
                  },
                  {
                    "id": 1,
                    "created_at": "2017-07-27 06:40:41",
                    "updated_at": "2017-07-27 06:41:02",
                    "name": "Администраторы",
                    "description": "Могут всё",
                    "sort": 1,
                    "code": "administrators"
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "total": 3,
                  "per_page": 2,
                  "current_page": 1,
                  "last_page": 2,
                  "next_page_url": "http://crm.lets-code.ru/api/group?page=2",
                  "prev_page_url": "null",
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 3,
                      "created_at": "2017-07-27 06:40:41",
                      "updated_at": "2017-07-27 06:41:02",
                      "name": "Редакторы",
                      "description": "Могут провидить редакцию материалов",
                      "sort": 2,
                      "code": "redactors"
                    },
                    {
                      "id": 1,
                      "created_at": "2017-07-27 06:40:41",
                      "updated_at": "2017-07-27 06:41:02",
                      "name": "Администраторы",
                      "description": "Могут всё",
                      "sort": 1,
                      "code": "administrators"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр групп пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "group"
        ],
        "summary": "Создание новой группы",
        "description": "Создание новой группы пользователей",
        "operationId": "createGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Группа успешно создалась",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на создание групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка создания группы",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "group"
        ],
        "summary": "Изменение существующей группы",
        "description": "Изменение существующей группы пользователей",
        "operationId": "putGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Группа успешно изменена",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на узменение групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения группы",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "group"
        ],
        "summary": "Удаление группы",
        "description": "Удаление существующей группы",
        "operationId": "deleteGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "administrators"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Группа успешно удалена",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка удаления группы",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/group/{code}": {
      "get": {
        "tags": [
          "group"
        ],
        "summary": "Получение группы по коду",
        "description": "Получение группы пользователей по её коду",
        "operationId": "getGroup",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "description": "Символьный код группы",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Группа пользователей",
            "examples": {
              "Без постраничной навигации": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "id": 1,
                  "created_at": "2017-07-27 06:40:41",
                  "updated_at": "2017-07-27 06:41:02",
                  "name": "Администраторы",
                  "description": "Могут всё",
                  "sort": 1,
                  "code": "administrators"
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр групп пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Группа с переданным кодом не найдена",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/action": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Получение списка действий пользователей",
        "description": "Получение списка действий пользователей, которые уже занесены в БД",
        "operationId": "getActions",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Список групп",
            "examples": {
              "Без постраничной навигации": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 16,
                    "name": "module_activate_deactivate",
                    "group_id": 2,
                    "module_id": 1,
                    "sort": 1,
                    "description": "Активирование и деактивация модулей",
                    "created_at": "2017-07-28 04:23:42",
                    "updated_at": "2017-07-28 04:23:42"
                  },
                  {
                    "id": 19,
                    "name": "module_activate_deactivate",
                    "group_id": 3,
                    "module_id": 1,
                    "sort": 2,
                    "description": "Активирование и деактивация модулей",
                    "created_at": "2017-07-28 05:49:53",
                    "updated_at": "2017-07-28 05:49:53"
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "total": 3,
                  "per_page": 2,
                  "current_page": 1,
                  "last_page": 2,
                  "next_page_url": "http://crm.lets-code.ru/api/group?page=2",
                  "prev_page_url": "null",
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 16,
                      "name": "module_activate_deactivate",
                      "group_id": 2,
                      "module_id": 1,
                      "sort": 1,
                      "description": "Активирование и деактивация модулей",
                      "created_at": "2017-07-28 04:23:42",
                      "updated_at": "2017-07-28 04:23:42"
                    },
                    {
                      "id": 19,
                      "name": "module_activate_deactivate",
                      "group_id": 3,
                      "module_id": 1,
                      "sort": 2,
                      "description": "Активирование и деактивация модулей",
                      "created_at": "2017-07-28 05:49:53",
                      "updated_at": "2017-07-28 05:49:53"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр действий пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Добавление действия в БД",
        "description": "Добавление действия в БД, можно добавить только действие, которое определено в конфиге модуля (добавлят группе пользователей разрешение на выполнение действия)",
        "operationId": "createAction",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Действие успешно добавлено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление действий",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления действия",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "action"
        ],
        "summary": "Изменение действия в БД",
        "description": "Изменение действия в БД, можно изменять только действие, которое определено в конфиге модуля и уже добавлено в БД",
        "operationId": "putAction",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Action"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Действие успешно изменено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на изменение действий",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения действия",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "action"
        ],
        "summary": "Удаление действия из БД",
        "description": "Удаление существующего действия из БД (снимает с группы пользователей разрешение на выполнение действия)",
        "operationId": "deleteAction",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "module_activate_deactivate"
                },
                "group_code": {
                  "type": "string",
                  "example": "administrators"
                },
                "module_code": {
                  "type": "string",
                  "example": "module"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Действие успешно удалено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление групп",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка удаления группы",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/action/{id}": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Получение действия по ID",
        "description": "Получение действия пользователей по его ID",
        "operationId": "getActionById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID действия в БД",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Действие успешно получено",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2017-07-27 06:40:41"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2017-07-27 06:41:02"
                    },
                    "name": {
                      "type": "string",
                      "example": "Администраторы"
                    },
                    "description": {
                      "type": "string",
                      "example": "Могут всё"
                    },
                    "sort": {
                      "type": "integer",
                      "example": 1
                    },
                    "code": {
                      "type": "string",
                      "example": "administrators"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр действий пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Действие с переданным id не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/action/{code}/module/{module_code}": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Получение действия",
        "description": "Получение действия пользователей по его коду и коду модуля",
        "operationId": "getActionByCode",
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "description": "Символьный код действия",
            "type": "string"
          },
          {
            "in": "path",
            "name": "module_code",
            "required": true,
            "description": "Символьный код модуля",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Действие успешно получено",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "errors": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "string",
                      "example": ""
                    },
                    "errors": {
                      "type": "string",
                      "example": ""
                    }
                  }
                },
                "request": {
                  "type": "object",
                  "example": {}
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "created_at": {
                      "type": "string",
                      "example": "2017-07-27 06:40:41"
                    },
                    "updated_at": {
                      "type": "string",
                      "example": "2017-07-27 06:41:02"
                    },
                    "name": {
                      "type": "string",
                      "example": "Администраторы"
                    },
                    "description": {
                      "type": "string",
                      "example": "Могут всё"
                    },
                    "sort": {
                      "type": "integer",
                      "example": 1
                    },
                    "code": {
                      "type": "string",
                      "example": "administrators"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр действий пользователей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Действие с переданным id не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/module": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение списка модулей",
        "description": "Получение списка модулей, которые уже занесены в БД",
        "operationId": "getModules",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Список модулей",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 1,
                    "code": "module",
                    "description": "General module",
                    "sort": 1,
                    "active": 1,
                    "created_at": "2017-07-03 07:00:39",
                    "updated_at": "2017-07-28 01:49:08",
                    "user_access": true
                  },
                  {
                    "id": 5,
                    "code": "user",
                    "description": "User module",
                    "sort": 100,
                    "active": 1,
                    "created_at": "2017-07-31 07:54:04",
                    "updated_at": "2017-07-31 07:54:04",
                    "user_access": true
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр списка модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "module"
        ],
        "summary": "Добавление модуля",
        "description": "Добавление модуля в БД, для корректной работы модуля, обязательно (осуществляется автоматически при создании модуля и прописывания его в конфигах)",
        "operationId": "createModule",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Module"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль успешно добавлен",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления модуля",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "module"
        ],
        "summary": "Обновление модуля",
        "description": "Обновление модуля в БД",
        "operationId": "putModule",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Module"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль успешно обновлён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на обновление модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка обновления модуля",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/module/{code}": {
      "delete": {
        "tags": [
          "module"
        ],
        "summary": "Удаление модуля по коду",
        "description": "Удаление модуля из БД по символьному коду",
        "operationId": "deleteModuleByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код модуля, который нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение модуля по его коду",
        "description": "Получение модуля по его символьному коду",
        "operationId": "getModuleByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код кодуля, который нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль найден",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "id": 5,
                  "created_at": "2017-07-31 07:54:04",
                  "updated_at": "2017-07-31 07:54:04",
                  "code": "user",
                  "description": "User module",
                  "sort": 100,
                  "active": 1
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/module/{code}/config": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение конфигов модуля по его коду",
        "description": "Получение конфигов модуля по его символьному коду",
        "operationId": "getModuleConfigByCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код кодуля, конфиг которого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль найден",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "module_name": "user",
                  "description": "User module",
                  "properties": [],
                  "dependencies": [],
                  "actions": {
                    "user_access": {
                      "code": "user_access",
                      "name": "Доступ к модулю",
                      "description": ""
                    },
                    "user_addusers": {
                      "code": "user_addusers",
                      "name": "Добавление пользователей",
                      "description": "Возможность добавлять новых пользователей"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр конфигов модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/module/{code}/actions": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение действий модуля по его коду",
        "description": "Получение действий модуля по его символьному коду",
        "operationId": "getModuleActionsByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код кодуля, действия которого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль найден",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "user_access": {
                    "code": "user_access",
                    "name": "Доступ к модулю",
                    "description": ""
                  },
                  "user_addusers": {
                    "code": "user_addusers",
                    "name": "Добавление пользователей",
                    "description": "Возможность добавлять новых пользователей"
                  },
                  "user_removeusers": {
                    "code": "user_removeusers",
                    "name": "Удаление пользователей",
                    "description": "Возможность удалять пользователей"
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр действий модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/module/{code}/props": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение значений свойства модуля",
        "description": "Получение свойств модуля по его символьному коду",
        "operationId": "getModulePropsByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код кодуля, свойства которого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль найден",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": {
                  "testinput": {
                    "name": "Тестовый инпут",
                    "code": "testinput",
                    "placeholder": "Тестовый инпут",
                    "type": "text",
                    "multiply": false,
                    "default_value": "null",
                    "values": [],
                    "value": {
                      "id": 4,
                      "created_at": "2017-07-04 01:05:14",
                      "updated_at": "2017-07-04 01:27:02",
                      "module_id": 1,
                      "code": "testinput",
                      "value_code": "false",
                      "value": "22"
                    }
                  },
                  "checkbox1": {
                    "name": "Тестовый чекбокс",
                    "code": "checkbox1",
                    "placeholder": "Тестовый чекбокс",
                    "type": "checkbox",
                    "multiply": false,
                    "default_value": "null",
                    "values": {
                      "value1": "значение 1"
                    },
                    "value": null
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр свойств модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "module"
        ],
        "summary": "Добавление значения свойства модуля",
        "description": "Добавление значения свойства модуля в БД",
        "operationId": "createModuleProps",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleProp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Значение свойства успешно добавлено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "module"
        ],
        "summary": "Обновление значения свойства модуля",
        "description": "Обновление значения свойства модуля в БД",
        "operationId": "putModuleProps",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleProp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Значение свойства успешно обновленно",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на обновление значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка обновления значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/module/{code}/props/{prop_code}": {
      "get": {
        "tags": [
          "module"
        ],
        "summary": "Получение значения свойства модуля",
        "description": "Получение значение свойства модуля по его символьному коду (в response массив потому что свойство может быть множественным)",
        "operationId": "getModulePropsValueByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код модуля, значение свойства которого нужно получить",
            "required": true,
            "type": "string"
          },
          {
            "name": "prop_code",
            "in": "path",
            "description": "Код свойства, значение которого нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Модуль найден",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": [
                  {
                    "id": 4,
                    "created_at": "2017-07-04 01:05:14",
                    "updated_at": "2017-07-04 01:27:02",
                    "module_id": 1,
                    "code": "testinput",
                    "value_code": "false",
                    "value": "22"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "module"
        ],
        "summary": "Удаление значения свойства модуля",
        "description": "Удаление значение свойства модуля по его символьному коду",
        "operationId": "deleteModulePropsValueByCode",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Код модуля, значение свойства которого нужно удалить",
            "required": true,
            "type": "string"
          },
          {
            "name": "prop_code",
            "in": "path",
            "description": "Код свойства, значение которого нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Значение свойства удалено",
            "examples": {
              "": {
                "success": "true",
                "status": "200",
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {},
                "response": 1
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на просмотр значений свойств модулей",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Модуль с таким кодом не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties": {
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Добавление свойства",
        "description": "Добавление нового свойства сущности",
        "operationId": "createProperty",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Свойство успешно добавлено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления свойства",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "properties"
        ],
        "summary": "Изменние свойства",
        "description": "Добавление существующего свойства сущности",
        "operationId": "putProperty",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putProperty"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Свойство успешно изменено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на изменение свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения свойства",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/properties/{id}": {
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Удаление свойства сущности",
        "description": "Удаление свойства сущности по id свойства",
        "operationId": "deleteProperty",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID свойства, который нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Свойство успешно удалёно",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоство с таким ID не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/{module_code}/": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение свойств по коду модуля",
        "description": "Получение свойств по коду модуля",
        "operationId": "getProperties",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "module_code",
            "in": "path",
            "description": "Код свойства, которое нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Свойства успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "module_code": "user",
                  "field_entity_code": "users"
                },
                "response": [
                  {
                    "id": 6,
                    "name": "Пол",
                    "code": "gender",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "select",
                    "multiply": 0,
                    "require": 1,
                    "active": 1,
                    "created_at": "2017-09-04 05:37:49",
                    "updated_at": "2017-09-04 05:37:49",
                    "choices": [
                      {
                        "id": 1,
                        "name": "Мужской",
                        "code": "male",
                        "sort": 1,
                        "property_id": 6
                      },
                      {
                        "id": 3,
                        "name": "Женский",
                        "code": "female",
                        "sort": 2,
                        "property_id": 6
                      }
                    ]
                  },
                  {
                    "id": 7,
                    "name": "Аватар",
                    "code": "avatar",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "file",
                    "multiply": 0,
                    "require": 0,
                    "active": 1,
                    "created_at": "2017-09-07 01:00:29",
                    "updated_at": "2017-09-07 01:00:29"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоства не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/{module_code}/entity/{entity_code}": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение свойства сущности",
        "description": "Получение свойства сущности по коду свойства и коду сущности",
        "operationId": "getProperty",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "module_code",
            "in": "path",
            "description": "Код свойства, которое нужно удалить",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity_code",
            "in": "path",
            "description": "Код сущности, которое нужно удалить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Свойства успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "module_code": "user",
                  "field_entity_code": "users"
                },
                "response": [
                  {
                    "id": 6,
                    "name": "Пол",
                    "code": "gender",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "select",
                    "multiply": 0,
                    "require": 1,
                    "active": 1,
                    "created_at": "2017-09-04 05:37:49",
                    "updated_at": "2017-09-04 05:37:49",
                    "choices": [
                      {
                        "id": 1,
                        "name": "Мужской",
                        "code": "male",
                        "sort": 1,
                        "property_id": 6
                      },
                      {
                        "id": 3,
                        "name": "Женский",
                        "code": "female",
                        "sort": 2,
                        "property_id": 6
                      }
                    ]
                  },
                  {
                    "id": 7,
                    "name": "Аватар",
                    "code": "avatar",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "file",
                    "multiply": 0,
                    "require": 0,
                    "active": 1,
                    "created_at": "2017-09-07 01:00:29",
                    "updated_at": "2017-09-07 01:00:29"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоство с таким ID не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/byid/{id}": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение свойства по его id",
        "description": "Получение свойства по его id",
        "operationId": "getPropertyById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID свойства, которое нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Свойства успешно получены",
            "examples": {
              "Пример": {
                "success": "trues",
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "6"
                },
                "response": {
                  "id": 6,
                  "name": "Пол",
                  "code": "gender",
                  "sort": 100,
                  "module_id": 5,
                  "field_entity": "users",
                  "field_type": "select",
                  "multiply": 0,
                  "require": 1,
                  "active": 1,
                  "created_at": "2017-09-04 05:37:49",
                  "updated_at": "2017-09-04 05:37:49",
                  "choices": [
                    {
                      "id": 1,
                      "name": "Мужской",
                      "code": "male",
                      "sort": 1,
                      "property_id": 6
                    },
                    {
                      "id": 3,
                      "name": "Женский",
                      "code": "female",
                      "sort": 2,
                      "property_id": 6
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоства не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/{prop_id}/choices": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение списка вариантов значений",
        "description": "Получение списка вариантов значений свйоства",
        "operationId": "getChoices",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, варианты выбора которого, нужно получить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "6"
                },
                "response": [
                  {
                    "id": 1,
                    "name": "Мужской",
                    "code": "male",
                    "sort": 1,
                    "property_id": 6
                  },
                  {
                    "id": 3,
                    "name": "Женский",
                    "code": "female",
                    "sort": 2,
                    "property_id": 6
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоства не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Добавление варианта выбора",
        "description": "Добавление нового варианта выбора",
        "operationId": "createChoices",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Choices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Вариант успешно добавлен",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление вариантов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления варианта",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "properties"
        ],
        "summary": "Изменение варианта выбора",
        "description": "Изменение существующего варианта выбора",
        "operationId": "putChoices",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putChoices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Вариант успешно изменён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на изменение вариантов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения варианта",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/properties/{prop_id}/choices/{id}": {
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Удаление варианта выбора",
        "description": "Удаление варианта выбора по его id и id свойства",
        "operationId": "deleteChooices",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, к которому привязан вариант",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID значения, которое нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Вариант значения успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление вариантов значений свойст",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Вариант значеия с таким ID не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение варианта значения",
        "description": "Получение варианта значения по его ID",
        "operationId": "getChoicesById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, варианты выбора которого, нужно получить",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID варианта выбора который, нужно получить",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1",
                  "property_id": "6"
                },
                "response": [
                  {
                    "id": 1,
                    "name": "Мужской",
                    "code": "male",
                    "sort": 1,
                    "property_id": 6
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоства не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/values": {
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Добавление значения свойства",
        "description": "Добавление нового значения свойства сущности",
        "operationId": "createPropertyValue",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Значение успешно добавлено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на добавление значений",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления значений",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "properties"
        ],
        "summary": "Изменение значения свойства",
        "description": "Изменение существующего значения свойства сущности",
        "operationId": "putPropertyValue",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putPropertyValue"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Значение успешно изменено",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на изменение значений",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения значения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/properties/{prop_id}/entity/{id}/values": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение списка значений свойства",
        "description": "Получение списка значений свойства по id свойства и id сущности",
        "operationId": "getPropertyValues",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, значения которого, нужно получить",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID сущности, для которой нужно получить значения",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "property_id": "6",
                  "entity_id": "4"
                },
                "response": [
                  {
                    "id": 16,
                    "created_at": "2017-09-11 02:12:23",
                    "updated_at": "2017-09-11 02:12:23",
                    "property_id": 6,
                    "entity_id": 4,
                    "code": "male",
                    "value": "Мужской"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение значений свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоства не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Удаление всех значений свойства",
        "description": "Удаление всех значений свойства по его id и id сущности",
        "operationId": "deletePropertyValues",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, значения которого нужно удалить",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID сущности, значения у которой нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно удалёны",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление значений",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Значеия не найдены",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/{prop_id}/entity/{entity_id}/values/{id}": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение значения свойства",
        "description": "Получение значения свойства по id свойства, id сущности и id значения",
        "operationId": "getPropertyValue",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, значение которого, нужно получить",
            "required": true,
            "type": "integer"
          },
          {
            "name": "entity_id",
            "in": "path",
            "description": "ID сущности, для которой нужно получить значение",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID значения, которое нужно получить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "property_id": "6",
                  "entity_id": "4"
                },
                "response": {
                  "id": 16,
                  "created_at": "2017-09-11 02:12:23",
                  "updated_at": "2017-09-11 02:12:23",
                  "property_id": 6,
                  "entity_id": 4,
                  "code": "male",
                  "value": "Мужской"
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение значений свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Свйоств не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Удаление значения свойства",
        "description": "Удаление значения свойства по его id, id сущности и id свойства",
        "operationId": "deletePropertyValue",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "prop_id",
            "in": "path",
            "description": "ID свойства, значения которого нужно удалить",
            "required": true,
            "type": "integer"
          },
          {
            "name": "entity_id",
            "in": "path",
            "description": "ID сущности, значения у которой нужно удалить",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID сущности, значения у которой нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Значение успешно удалёно",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление значений",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Значеие не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/entity/values": {
      "post": {
        "tags": [
          "properties"
        ],
        "summary": "Получение списка значений свойств сущности",
        "description": "Получение списка значений указанных свойств сущности",
        "operationId": "getPropertyAllValues",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "_method",
                "properties",
                "entity_id"
              ],
              "properties": {
                "_method": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "метод запроса - всегда GET",
                  "example": "GET"
                },
                "properties": {
                  "type": "array",
                  "maxLength": 255,
                  "description": "массив свойств, которые нужно получить",
                  "example": [
                    "gender",
                    "avatar"
                  ],
                  "items": {
                    "type": "object"
                  }
                },
                "entity_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id сущности, для которой получаем свойства",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Значения успешно получены",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "data": {
                    "_method": "GET",
                    "properties": [
                      "avatar",
                      "gender"
                    ],
                    "entity_id": "4"
                  }
                },
                "response": {
                  "gender": {
                    "id": 6,
                    "name": "Пол",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "select",
                    "multiply": 0,
                    "require": 1,
                    "active": 1,
                    "values": {
                      "male": {
                        "id": 16,
                        "code": "male",
                        "entity_id": 4,
                        "value": "Мужской",
                        "property_id": "2017-09-11 02:12:23",
                        "updated_at": "2017-09-11 02:12:23"
                      }
                    },
                    "choices": {
                      "male": {
                        "id": 1,
                        "name": "Мужской",
                        "code": "male",
                        "sort": 1
                      },
                      "female": {
                        "id": 3,
                        "name": "Женский",
                        "code": "female",
                        "sort": 2
                      }
                    }
                  },
                  "avatar": {
                    "id": 7,
                    "name": "Аватар",
                    "sort": 100,
                    "module_id": 5,
                    "field_entity": "users",
                    "field_type": "file",
                    "multiply": 0,
                    "require": 0,
                    "active": 1,
                    "values": {
                      "firstavatar": {
                        "id": 15,
                        "code": "firstavatar",
                        "entity_id": 4,
                        "value": {
                          "id": 22,
                          "created_at": "2017-09-07 07:41:03",
                          "updated_at": "2017-09-07 07:41:03",
                          "path": "/storage/public/1504770063.jpg",
                          "local_path": "/home/x/xyazu/crm.lets-code.ru/public_html/storage/public/1504770063.jpg",
                          "user_id": 4,
                          "name": "1504770063.jpg"
                        },
                        "property_id": "2017-09-07 07:41:03",
                        "updated_at": "2017-09-07 07:41:03"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение значений свйоств",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Значений не найдено",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/properties/file/{id}": {
      "get": {
        "tags": [
          "properties"
        ],
        "summary": "Получение файла по его id",
        "description": "Получение свойств файла по его id",
        "operationId": "getFile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID файла, который нужно получить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Файл успешно получен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "22"
                },
                "response": {
                  "id": 22,
                  "created_at": "2017-09-07 07:41:03",
                  "updated_at": "2017-09-07 07:41:03",
                  "path": "/storage/public/1504770063.jpg",
                  "local_path": "/home/x/xyazu/crm.lets-code.ru/public_html/storage/public/1504770063.jpg",
                  "user_id": 4,
                  "name": "1504770063.jpg"
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на получение файлов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Файл не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "properties"
        ],
        "summary": "Удаление файла по его id",
        "description": "Удаление записи о файле и самого файла по его id",
        "operationId": "deleteFile",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID файла, который нужно удалить",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Файл успешно удалён",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на удаление файлов",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "404": {
            "description": "Файл не найден",
            "schema": {
              "$ref": "#/definitions/404Response"
            }
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление новой задачи",
        "description": "Добавление новой задачи",
        "operationId": "postTask",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "sort",
                "responsible_id",
                "project_id",
                "group_id",
                "deadline",
                "status_id",
                "parent_task_id",
                "time_start",
                "time_finish",
                "wasted_time",
                "type"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название задачи",
                  "example": "Напонить сайт"
                },
                "description": {
                  "type": "string",
                  "maxLength": 2500,
                  "description": "Описание задачи",
                  "example": "Наполнить сайт example.com текстами"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка задачи",
                  "example": 2
                },
                "responsible_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id ответственного за выполнение задачи",
                  "example": 8
                },
                "project_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id проекта, к которому относится задачи",
                  "example": 4
                },
                "group_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id группы, к которой относится задача",
                  "example": 6
                },
                "deadline": {
                  "type": "string",
                  "description": "дедлайн, время когда задача должна быть вполнена, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 18:00:00"
                },
                "status_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id статуса задачи",
                  "example": 2
                },
                "parent_task_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id задачи - родителя",
                  "example": 2
                },
                "time_start": {
                  "type": "string",
                  "description": "Время начала выполнения задачи, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 06:00:00"
                },
                "time_finish": {
                  "type": "string",
                  "description": "Время окончания выполнения задачи, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 16:00:00"
                },
                "wasted_time": {
                  "type": "string",
                  "maxLength": 11,
                  "description": "Время затраченное на выполнение задачи, указывается в секундах",
                  "example": 3600
                },
                "type": {
                  "type": "boolean",
                  "maxLength": 1,
                  "description": "1 для задач в модуле \"Deals\", 0 для задач в модуле \"Tasks\"",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Задача успешно добавлена",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "name": "Тестовая задача 9",
                  "description": "Описание тестовой задачи 9",
                  "sort": null,
                  "taskmaster_id": 4,
                  "responsible_id": "4",
                  "project_id": "1",
                  "group_id": "2",
                  "deadline": null,
                  "status_id": 1,
                  "parent_task_id": null,
                  "time_start": null,
                  "time_finish": null,
                  "wasted_time": null,
                  "def_group_id": "1",
                  "def_project_id": "1",
                  "def_status_id": [
                    "1",
                    "2",
                    "3"
                  ],
                  "project_status": [
                    1,
                    2,
                    3
                  ]
                },
                "response": {
                  "name": "Тестовая задача 9",
                  "description": "Описание тестовой задачи 9",
                  "sort": 100,
                  "parent_task_id": null,
                  "deadline": null,
                  "time_start": null,
                  "time_finish": null,
                  "wasted_time": null,
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": "1",
                  "group_id": "2",
                  "status_id": 1,
                  "updated_at": "2017-09-28 05:43:28",
                  "created_at": "2017-09-28 05:43:28",
                  "id": 9
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Изменение задачи",
        "description": "Изменение существующей задачи",
        "operationId": "putTask",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "sort",
                "responsible_id",
                "project_id",
                "group_id",
                "deadline",
                "status_id",
                "parent_task_id",
                "time_start",
                "time_finish",
                "wasted_time",
                "type"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id задачи, которую нужно изменить",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название задачи",
                  "example": "Напонить сайт"
                },
                "description": {
                  "type": "string",
                  "maxLength": 2500,
                  "description": "Описание задачи",
                  "example": "Наполнить сайт example.com текстами"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка задачи",
                  "example": 2
                },
                "responsible_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id ответственного за выполнение задачи",
                  "example": 8
                },
                "project_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id проекта, к которому относится задачи",
                  "example": 4
                },
                "group_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id группы, к которой относится задача",
                  "example": 6
                },
                "deadline": {
                  "type": "string",
                  "description": "дедлайн, время когда задача должна быть вполнена, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 18:00:00"
                },
                "status_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id статуса задачи",
                  "example": 2
                },
                "parent_task_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id задачи - родителя",
                  "example": 2
                },
                "time_start": {
                  "type": "string",
                  "description": "Время начала выполнения задачи, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 06:00:00"
                },
                "time_finish": {
                  "type": "string",
                  "description": "Время окончания выполнения задачи, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 16:00:00"
                },
                "wasted_time": {
                  "type": "string",
                  "maxLength": 11,
                  "description": "Время затраченное на выполнение задачи, указывается в секундах",
                  "example": 3600
                },
                "type": {
                  "type": "boolean",
                  "maxLength": 1,
                  "description": "1 для задач в модуле \"Deals\", 0 для задач в модуле \"Tasks\"",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Задача успешно изменена",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": 9,
                  "name": "Тестовая задача 9",
                  "description": "Описание тестовой задачи 9",
                  "sort": null,
                  "taskmaster_id": 4,
                  "responsible_id": "4",
                  "project_id": "1",
                  "group_id": "2",
                  "deadline": null,
                  "status_id": 1,
                  "parent_task_id": null,
                  "time_start": null,
                  "time_finish": null,
                  "wasted_time": null,
                  "def_group_id": "1",
                  "def_project_id": "1",
                  "def_status_id": [
                    "1",
                    "2",
                    "3"
                  ],
                  "project_status": [
                    1,
                    2,
                    3
                  ]
                },
                "response": {
                  "name": "Тестовая задача 9",
                  "description": "Описание тестовой задачи 9",
                  "sort": 100,
                  "parent_task_id": null,
                  "deadline": null,
                  "time_start": null,
                  "time_finish": null,
                  "wasted_time": null,
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": "1",
                  "group_id": "2",
                  "status_id": 1,
                  "updated_at": "2017-09-28 05:43:28",
                  "created_at": "2017-09-28 05:43:28",
                  "id": 9
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Получение списка задач",
        "description": "Получение полного (запрос без параметров) или страничного списка задач (запрос хотябы с параметром count)",
        "operationId": "getTasks",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка задач",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": [
                  {
                    "id": 1,
                    "name": "Тестовая задача",
                    "description": "Описание тестовой задачи",
                    "sort": 100,
                    "created_at": "2017-09-21 08:20:31",
                    "updated_at": "2017-09-28 06:42:57",
                    "taskmaster_id": 4,
                    "responsible_id": 4,
                    "project_id": 1,
                    "group_id": 1,
                    "deadline": null,
                    "status_id": 2,
                    "parent_task_id": null,
                    "time_start": "2017-09-29 00:00:00",
                    "time_finish": "2017-09-29 01:00:00",
                    "wasted_time": "10800",
                    "taskmaster": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-08-22 01:14:15"
                    },
                    "responsible": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-08-22 01:14:15"
                    },
                    "project": {
                      "id": 1,
                      "created_at": "2017-09-19 06:09:00",
                      "updated_at": "2017-09-19 06:09:00",
                      "name": "Общие задачи",
                      "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                      "group_id": 1,
                      "sort": 1
                    },
                    "status": {
                      "id": 2,
                      "name": "В работе",
                      "description": "Задача находится в процессе выполнения",
                      "project_id": 1,
                      "sort": 2
                    },
                    "group": {
                      "id": 1,
                      "name": "Без группы",
                      "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                      "sort": 100
                    },
                    "coexecutor": [
                      {
                        "id": 4,
                        "login": "admin",
                        "email": "speed.live@mail.ru",
                        "sort": 1,
                        "created_at": "2017-07-19 01:44:26",
                        "updated_at": "2017-08-22 01:14:15"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "Тестовая задача 2",
                    "description": "Описание тестовой задачи 2",
                    "sort": 100,
                    "created_at": "2017-09-27 01:44:04",
                    "updated_at": "2017-09-28 05:41:08",
                    "taskmaster_id": 4,
                    "responsible_id": 4,
                    "project_id": 5,
                    "group_id": 2,
                    "deadline": null,
                    "status_id": 1,
                    "parent_task_id": null,
                    "time_start": null,
                    "time_finish": null,
                    "wasted_time": null,
                    "taskmaster": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-08-22 01:14:15"
                    },
                    "responsible": {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-08-22 01:14:15"
                    },
                    "project": {
                      "id": 5,
                      "created_at": "2017-09-19 06:09:00",
                      "updated_at": "2017-09-19 06:09:00",
                      "name": "Проект 2",
                      "description": "Тестовый проект 2",
                      "group_id": 2,
                      "sort": 100
                    },
                    "status": {
                      "id": 1,
                      "name": "Поставлена",
                      "description": "Задача ожидает выполнения",
                      "project_id": 1,
                      "sort": 1
                    },
                    "group": {
                      "id": 2,
                      "name": "В работе",
                      "description": "Все задачи в работе",
                      "sort": 100
                    },
                    "coexecutor": []
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "count": "1"
                },
                "response": {
                  "total": 6,
                  "per_page": "1",
                  "current_page": 1,
                  "last_page": 6,
                  "next_page_url": "http://crm.lets-code.ru/api/tasks?page=2",
                  "prev_page_url": null,
                  "from": 1,
                  "to": 1,
                  "data": [
                    {
                      "id": 1,
                      "name": "Тестовая задача",
                      "description": "Описание тестовой задачи",
                      "sort": 100,
                      "created_at": "2017-09-21 08:20:31",
                      "updated_at": "2017-09-28 06:42:57",
                      "taskmaster_id": 4,
                      "responsible_id": 4,
                      "project_id": 1,
                      "group_id": 1,
                      "deadline": null,
                      "status_id": 2,
                      "parent_task_id": null,
                      "time_start": "2017-09-29 00:00:00",
                      "time_finish": "2017-09-29 01:00:00",
                      "wasted_time": "10800",
                      "taskmaster": {
                        "id": 4,
                        "login": "admin",
                        "email": "speed.live@mail.ru",
                        "sort": 1,
                        "created_at": "2017-07-19 01:44:26",
                        "updated_at": "2017-08-22 01:14:15"
                      },
                      "responsible": {
                        "id": 4,
                        "login": "admin",
                        "email": "speed.live@mail.ru",
                        "sort": 1,
                        "created_at": "2017-07-19 01:44:26",
                        "updated_at": "2017-08-22 01:14:15"
                      },
                      "project": {
                        "id": 1,
                        "created_at": "2017-09-19 06:09:00",
                        "updated_at": "2017-09-19 06:09:00",
                        "name": "Общие задачи",
                        "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                        "group_id": 1,
                        "sort": 1
                      },
                      "status": {
                        "id": 2,
                        "name": "В работе",
                        "description": "Задача находится в процессе выполнения",
                        "project_id": 1,
                        "sort": 2
                      },
                      "group": {
                        "id": 1,
                        "name": "Без группы",
                        "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                        "sort": 100
                      },
                      "coexecutor": [
                        {
                          "id": 4,
                          "login": "admin",
                          "email": "speed.live@mail.ru",
                          "sort": 1,
                          "created_at": "2017-07-19 01:44:26",
                          "updated_at": "2017-08-22 01:14:15"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/byid/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Получение задачи по её id",
        "description": "Получение задачи по её id",
        "operationId": "getTasksById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID задачи, которую нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка задач",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "Ответ сервера": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": {
                  "id": 1,
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "sort": 100,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-28 06:42:57",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 00:00:00",
                  "time_finish": "2017-09-29 01:00:00",
                  "wasted_time": "10800",
                  "taskmaster": {
                    "id": 4,
                    "login": "admin",
                    "email": "speed.live@mail.ru",
                    "sort": 1,
                    "created_at": "2017-07-19 01:44:26",
                    "updated_at": "2017-08-22 01:14:15"
                  },
                  "responsible": {
                    "id": 4,
                    "login": "admin",
                    "email": "speed.live@mail.ru",
                    "sort": 1,
                    "created_at": "2017-07-19 01:44:26",
                    "updated_at": "2017-08-22 01:14:15"
                  },
                  "project": {
                    "id": 1,
                    "created_at": "2017-09-19 06:09:00",
                    "updated_at": "2017-09-19 06:09:00",
                    "name": "Общие задачи",
                    "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                    "group_id": 1,
                    "sort": 1
                  },
                  "status": {
                    "id": 2,
                    "name": "В работе",
                    "description": "Задача находится в процессе выполнения",
                    "project_id": 1,
                    "sort": 2
                  },
                  "group": {
                    "id": 1,
                    "name": "Без группы",
                    "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                    "sort": 100
                  },
                  "coexecutor": [
                    {
                      "id": 4,
                      "login": "admin",
                      "email": "speed.live@mail.ru",
                      "sort": 1,
                      "created_at": "2017-07-19 01:44:26",
                      "updated_at": "2017-08-22 01:14:15"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Удаление задачи",
        "description": "Удаление задачи по её id",
        "operationId": "deleteTasksById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID задачи, которую нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление задачи",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/{id}/responsible": {
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Удаление ответственного",
        "description": "Удаление ответственного у задачи",
        "operationId": "deleteTasksResponsible",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID задачи для удаления ответственного",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 01:44:17",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": null,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 00:00:00",
                  "time_finish": "2017-09-29 01:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/responsible": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление ответственного",
        "description": "Добавление ответственного к задаче",
        "operationId": "postTaskResponsible",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "user_id"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 1
                },
                "user_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id пользовател",
                  "example": 4
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ответственный успешно добавлен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "user_id": "4",
                  "task_id": "1"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 01:56:31",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 00:00:00",
                  "time_finish": "2017-09-29 01:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Изменение ответственного",
        "description": "Изменение ответственного у задачи",
        "operationId": "putTaskResponsible",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "user_id"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 1
                },
                "user_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id пользовател",
                  "example": 4
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ответственный успешно изменён",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "user_id": "4",
                  "task_id": "1"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 01:56:31",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 00:00:00",
                  "time_finish": "2017-09-29 01:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasks/delegate": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Делегирование задачи",
        "description": "Делегирование задачи другому исполнителю, текущий исполнитель становится соисполнителем автоматически",
        "operationId": "delegateTask",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "user_id"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "id задачи для делигирования",
                  "example": 8
                },
                "user_id": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "id пользователя, который станет исполнителем",
                  "example": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Задача успешно делегирована",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1",
                  "user_id": "4"
                },
                "response": {
                  "task": {
                    "id": 1,
                    "created_at": "2017-09-21 08:20:31",
                    "updated_at": "2017-09-28 06:42:57",
                    "name": "Тестовая задача",
                    "description": "Описание тестовой задачи",
                    "taskmaster_id": 4,
                    "responsible_id": "4",
                    "project_id": 1,
                    "group_id": 1,
                    "deadline": null,
                    "sort": 100,
                    "status_id": 2,
                    "parent_task_id": null,
                    "time_start": "2017-09-29 00:00:00",
                    "time_finish": "2017-09-29 01:00:00",
                    "wasted_time": "10800"
                  },
                  "coexecutor": {
                    "task_id": "1",
                    "executor_id": 4,
                    "id": 4
                  }
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка делигирования",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasks/time/start": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление/изменение времени начала выполнения задачи",
        "description": "Добавление/изменение времени начала выполнения задачи",
        "operationId": "postTaskStartTime",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "time"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 1
                },
                "time": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "время, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 16:00:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Время успешно добавлено",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1",
                  "time": "2017-09-29 00:00:00"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 02:25:24",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 0:00:00",
                  "time_finish": "2017-09-29 07:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasks/time/finsh": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление/изменение времени окончания выполнения задачи",
        "description": "Добавление/изменение времени окончания выполнения задачи",
        "operationId": "postTaskFinishTime",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "time"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 1
                },
                "time": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "время, в формате Y-m-d G:i:s",
                  "example": "2017-09-20 16:00:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Время успешно добавлено",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1",
                  "time": "2017-09-29 00:00:00"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 02:25:24",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 0:00:00",
                  "time_finish": "2017-09-29 07:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasks/time/wasted": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление/изменение времени выполнения задачи",
        "description": "Добавление/изменение времени выполнения задачи",
        "operationId": "postTaskWastedTime",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "time"
              ],
              "properties": {
                "task_id": {
                  "type": "string",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 1
                },
                "time": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "время в секундах",
                  "example": 10800
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Время успешно добавлено",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1",
                  "time": "2017-09-29 00:00:00"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-21 08:20:31",
                  "updated_at": "2017-09-29 02:25:24",
                  "name": "Тестовая задача",
                  "description": "Описание тестовой задачи",
                  "taskmaster_id": 4,
                  "responsible_id": 4,
                  "project_id": 1,
                  "group_id": 1,
                  "deadline": null,
                  "sort": 100,
                  "status_id": 2,
                  "parent_task_id": null,
                  "time_start": "2017-09-29 0:00:00",
                  "time_finish": "2017-09-29 07:00:00",
                  "wasted_time": "10800"
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasklist": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Получение иерархичного списка задач",
        "description": "Получение полного (запрос без параметров) или страничного иерархичного списка задач (запрос хотябы с параметром count), включающего группы и проекты. Фильтрация и сортировка происходят по полям групп задач, сортировать и фильтровать по полям задач в этом запросе нельзя",
        "operationId": "getFullTasksList",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка задач",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": {
                  "groups": [
                    {
                      "id": 1,
                      "name": "Без группы",
                      "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                      "sort": 100,
                      "tasks": [
                        {
                          "id": 1,
                          "created_at": "2017-09-21 08:20:31",
                          "updated_at": "2017-09-29 01:56:31",
                          "name": "Тестовая задача",
                          "description": "Описание тестовой задачи",
                          "taskmaster_id": 4,
                          "responsible_id": 4,
                          "project_id": 1,
                          "group_id": 1,
                          "deadline": null,
                          "sort": 100,
                          "status_id": 2,
                          "parent_task_id": null,
                          "time_start": "2017-09-29 00:00:00",
                          "time_finish": "2017-09-29 01:00:00",
                          "wasted_time": "10800"
                        }
                      ],
                      "projects": []
                    },
                    {
                      "id": 2,
                      "name": "В работе",
                      "description": "Все задачи в работе",
                      "sort": 100,
                      "tasks": [
                        {
                          "id": 6,
                          "created_at": "2017-09-28 03:12:51",
                          "updated_at": "2017-09-28 05:41:31",
                          "name": "Тестовая задача 6",
                          "description": "Описание тестовой задачи 6",
                          "taskmaster_id": 4,
                          "responsible_id": 4,
                          "project_id": 1,
                          "group_id": 2,
                          "deadline": null,
                          "sort": 100,
                          "status_id": 1,
                          "parent_task_id": null,
                          "time_start": null,
                          "time_finish": null,
                          "wasted_time": null
                        },
                        {
                          "id": 9,
                          "created_at": "2017-09-28 05:43:28",
                          "updated_at": "2017-09-28 05:43:28",
                          "name": "Тестовая задача 9",
                          "description": "Описание тестовой задачи 9",
                          "taskmaster_id": 4,
                          "responsible_id": 4,
                          "project_id": 1,
                          "group_id": 2,
                          "deadline": null,
                          "sort": 100,
                          "status_id": 1,
                          "parent_task_id": null,
                          "time_start": null,
                          "time_finish": null,
                          "wasted_time": null
                        }
                      ],
                      "projects": [
                        {
                          "id": 5,
                          "created_at": "2017-09-19 06:09:00",
                          "updated_at": "2017-09-19 06:09:00",
                          "name": "Проект 2",
                          "description": "Тестовый проект 2",
                          "group_id": 2,
                          "sort": 100,
                          "tasks": [
                            {
                              "id": 2,
                              "created_at": "2017-09-27 01:44:04",
                              "updated_at": "2017-09-28 05:41:08",
                              "name": "Тестовая задача 2",
                              "description": "Описание тестовой задачи 2",
                              "taskmaster_id": 4,
                              "responsible_id": 4,
                              "project_id": 5,
                              "group_id": 2,
                              "deadline": null,
                              "sort": 100,
                              "status_id": 1,
                              "parent_task_id": null,
                              "time_start": null,
                              "time_finish": null,
                              "wasted_time": null
                            },
                            {
                              "id": 7,
                              "created_at": "2017-09-28 03:14:01",
                              "updated_at": "2017-09-28 05:40:57",
                              "name": "Тестовая задача 7",
                              "description": "Описание тестовой задачи 7",
                              "taskmaster_id": 4,
                              "responsible_id": 4,
                              "project_id": 5,
                              "group_id": 2,
                              "deadline": null,
                              "sort": 100,
                              "status_id": 1,
                              "parent_task_id": null,
                              "time_start": null,
                              "time_finish": null,
                              "wasted_time": null
                            }
                          ]
                        },
                        {
                          "id": 6,
                          "created_at": "2017-09-19 06:09:00",
                          "updated_at": "2017-09-19 06:09:00",
                          "name": "Проект 3",
                          "description": "Тестовый проект 3",
                          "group_id": 2,
                          "sort": 100,
                          "tasks": [
                            {
                              "id": 8,
                              "created_at": "2017-09-28 05:43:03",
                              "updated_at": "2017-09-28 05:43:03",
                              "name": "Тестовая задача 8",
                              "description": "Описание тестовой задачи 8",
                              "taskmaster_id": 4,
                              "responsible_id": 4,
                              "project_id": 6,
                              "group_id": 2,
                              "deadline": null,
                              "sort": 100,
                              "status_id": 1,
                              "parent_task_id": null,
                              "time_start": null,
                              "time_finish": null,
                              "wasted_time": null
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": {
                  "groups": {
                    "total": 2,
                    "per_page": "1",
                    "current_page": 1,
                    "last_page": 2,
                    "next_page_url": "http://crm.lets-code.ru/api/tasklist?page=2",
                    "prev_page_url": null,
                    "from": 1,
                    "to": 1,
                    "data": [
                      {
                        "id": 1,
                        "name": "Без группы",
                        "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                        "sort": 100,
                        "tasks": [
                          {
                            "id": 1,
                            "created_at": "2017-09-21 08:20:31",
                            "updated_at": "2017-09-29 01:56:31",
                            "name": "Тестовая задача",
                            "description": "Описание тестовой задачи",
                            "taskmaster_id": 4,
                            "responsible_id": 4,
                            "project_id": 1,
                            "group_id": 1,
                            "deadline": null,
                            "sort": 100,
                            "status_id": 2,
                            "parent_task_id": null,
                            "time_start": "2017-09-29 00:00:00",
                            "time_finish": "2017-09-29 01:00:00",
                            "wasted_time": "10800"
                          }
                        ],
                        "projects": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/coexecutor": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Добавление соисполнителя к задаче",
        "description": "Добавление соисполнителя к задаче",
        "operationId": "postTaskCoexecutor",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "executor_id"
              ],
              "properties": {
                "task_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id задачи",
                  "example": 2
                },
                "executor_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id соисполнителя (пользователя)",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Задача успешно добавлена",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1",
                  "executor_id": "5"
                },
                "response": {
                  "task_id": "1",
                  "executor_id": "5",
                  "id": 5
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/tasks/{task_id}/coexecutor": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Получение соисполнителей задачи",
        "description": "Получение списка соисполнителей задачи",
        "operationId": "getTasksCoexecutors",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "task_id",
            "required": true,
            "description": "ID задачи, у которой нужно получить соисполнителей",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка соисполнителей",
            "examples": {
              "Прмиер": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "task_id": "1"
                },
                "response": [
                  {
                    "id": 4,
                    "login": "admin",
                    "email": "speed.live@mail.ru",
                    "sort": 1,
                    "created_at": "2017-07-19 01:44:26",
                    "updated_at": "2017-08-22 01:14:15"
                  },
                  {
                    "id": 5,
                    "login": "yazu",
                    "email": "speed.live2@mail.ru",
                    "sort": 100,
                    "created_at": "2017-07-28 05:37:11",
                    "updated_at": "2017-07-28 05:37:11"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/{task_id}/coexecutor/{id}": {
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Удаление соисполнителя у задачи",
        "description": "Удаление соисполнителя у задачи",
        "operationId": "deleteTasksCoexecutorById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "task_id",
            "required": true,
            "description": "ID группы, у которой нужно удалить соисполнителя",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID пользователя, которого нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление соисполнителя",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/groups": {
      "post": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Добавление новой группы задач",
        "description": "Добавление новой группы задач",
        "operationId": "postTaskGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "sort",
                "planned_date",
                "actual_date"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название группы",
                  "example": "Задачи по дизайну"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание группы",
                  "example": "Все задачи по дизайну всех проектов"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "planned_date": {
                  "type": "string",
                  "description": "Планируемая дата сдачи проекта в формате \"Y-m-d G:i:s\"",
                  "example": "2017-02-01 00:00:00"
                },
                "actual_date": {
                  "type": "string",
                  "description": "Фактическая дата сдачи проекта в формате \"Y-m-d G:i:s\"",
                  "example": "2017-01-01 00:00:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Группа успешно добавлена",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": null,
                  "name": "Группа для примера",
                  "description": "Это просто группа для демонстрации",
                  "sort": null
                },
                "response": {
                  "name": "Группа для примера",
                  "description": "Это просто группа для демонстрации",
                  "sort": 100,
                  "id": 3
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Изменение существующей группы задач",
        "description": "Изменение существующей группы задач",
        "operationId": "putTaskGroup",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "sort",
                "planned_date",
                "actual_date"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id группы, которую нужно изменить",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название группы",
                  "example": "Задачи по дизайну"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание группы",
                  "example": "Все задачи по дизайну всех проектов"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "planned_date": {
                  "type": "string",
                  "description": "Планируемая дата сдачи проекта в формате \"Y-m-d G:i:s\"",
                  "example": "2017-02-01 00:00:00"
                },
                "actual_date": {
                  "type": "string",
                  "description": "Фактическая дата сдачи проекта в формате \"Y-m-d G:i:s\"",
                  "example": "2017-01-01 00:00:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Группа успешно изменена",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": 3,
                  "name": "Группа для примера",
                  "description": "Это просто группа для демонстрации",
                  "sort": null
                },
                "response": {
                  "name": "Группа для примера",
                  "description": "Это просто группа для демонстрации",
                  "sort": 100,
                  "id": 3
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Получение списка групп задач",
        "description": "Получение полного (запрос без параметров) или страничного списка групп задач (запрос хотябы с параметром count)",
        "operationId": "getTasksGroups",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка групп",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": [
                  {
                    "id": 1,
                    "name": "Без группы",
                    "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                    "sort": 100
                  },
                  {
                    "id": 2,
                    "name": "В работе",
                    "description": "Все задачи в работе",
                    "sort": 100
                  },
                  {
                    "id": 3,
                    "name": "Группа для примера",
                    "description": "Это просто группа для демонстрации",
                    "sort": 100
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "count": "2"
                },
                "response": {
                  "total": 3,
                  "per_page": "2",
                  "current_page": 1,
                  "last_page": 2,
                  "next_page_url": "http://crm.lets-code.ru/api/tasks/groups?page=2",
                  "prev_page_url": null,
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 1,
                      "name": "Без группы",
                      "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                      "sort": 100
                    },
                    {
                      "id": 2,
                      "name": "В работе",
                      "description": "Все задачи в работе",
                      "sort": 100
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/groups/{id}": {
      "get": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Получение группы задач",
        "description": "Получение группы задач по её id",
        "operationId": "getTasksGroupsById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID группы, которую нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение группы",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1"
                },
                "response": {
                  "id": 1,
                  "name": "Без группы",
                  "description": "Стандартная группа задач, сюда попадают все задачи без группы",
                  "sort": 100
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Удаление группы задач",
        "description": "Удаление группы задач по её id",
        "operationId": "deleteTasksGroupsById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID группы, которую нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление группы",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/groups/{id}/projects": {
      "get": {
        "tags": [
          "tasksGroup"
        ],
        "summary": "Получение списка проектов в группе",
        "description": "Получение списка проектов, которые находятся в группе",
        "operationId": "getProjectTasksGroupsById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID группы, проекты которой нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение группы",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1"
                },
                "response": [
                  {
                    "id": 1,
                    "created_at": "2017-09-19 06:09:00",
                    "updated_at": "2017-09-19 06:09:00",
                    "name": "Общие задачи",
                    "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                    "group_id": 1,
                    "sort": 1
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/project": {
      "post": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Добавление нового проекта",
        "description": "Добавление нового проекта",
        "operationId": "postTaskProject",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "sort",
                "group_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название группы",
                  "example": "Задачи по дизайну"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание группы",
                  "example": "Все задачи по дизайну всех проектов"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "group_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id группы проекта",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Проект успешно добавлен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": null,
                  "name": "Тестовый проект 3",
                  "description": "Это просто проект для демонстрации",
                  "group_id": "2",
                  "sort": null
                },
                "response": {
                  "name": "Тестовый проект 3",
                  "description": "Это просто проект для демонстрации",
                  "sort": 100,
                  "group_id": "2",
                  "updated_at": "2017-09-29 03:00:35",
                  "created_at": "2017-09-29 03:00:35",
                  "id": 7
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Изменение существующего проекта",
        "description": "Изменение существующего проекта",
        "operationId": "putTaskProject",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "sort",
                "group_id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id проекта, который нужно изменить",
                  "example": 5
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название группы",
                  "example": "Задачи по дизайну"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание группы",
                  "example": "Все задачи по дизайну всех проектов"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "group_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id группы проекта",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Проект успешно изменён",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": 7,
                  "name": "Тестовый проект 3",
                  "description": "Это просто проект для демонстрации",
                  "group_id": "2",
                  "sort": null
                },
                "response": {
                  "name": "Тестовый проект 3",
                  "description": "Это просто проект для демонстрации",
                  "sort": 100,
                  "group_id": "2",
                  "updated_at": "2017-09-29 03:00:35",
                  "created_at": "2017-09-29 03:00:35",
                  "id": 7
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Получение списка проектов",
        "description": "Получение полного (запрос без параметров) или страничного списка проектов (запрос хотябы с параметром count)",
        "operationId": "getTasksProjects",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка групп",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": [
                  {
                    "id": 1,
                    "name": "Общие задачи",
                    "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                    "group_id": 1,
                    "sort": 1,
                    "created_at": "2017-09-19 06:09:00",
                    "updated_at": "2017-09-19 06:09:00"
                  },
                  {
                    "id": 5,
                    "name": "Проект 2",
                    "description": "Тестовый проект 2",
                    "group_id": 2,
                    "sort": 100,
                    "created_at": "2017-09-19 06:09:00",
                    "updated_at": "2017-09-19 06:09:00"
                  },
                  {
                    "id": 6,
                    "name": "Проект 3",
                    "description": "Тестовый проект 3",
                    "group_id": 2,
                    "sort": 100,
                    "created_at": "2017-09-19 06:09:00",
                    "updated_at": "2017-09-19 06:09:00"
                  },
                  {
                    "id": 7,
                    "name": "Тестовый проект 3",
                    "description": "Это просто проект для демонстрации",
                    "group_id": 2,
                    "sort": 100,
                    "created_at": "2017-09-29 03:00:35",
                    "updated_at": "2017-09-29 03:00:35"
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "count": "1"
                },
                "response": {
                  "total": 4,
                  "per_page": "1",
                  "current_page": 1,
                  "last_page": 4,
                  "next_page_url": "http://crm.lets-code.ru/api/tasks/project?page=2",
                  "prev_page_url": null,
                  "from": 1,
                  "to": 1,
                  "data": [
                    {
                      "id": 1,
                      "name": "Общие задачи",
                      "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                      "group_id": 1,
                      "sort": 1,
                      "created_at": "2017-09-19 06:09:00",
                      "updated_at": "2017-09-19 06:09:00"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/project/{id}": {
      "get": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Получение проекта задач",
        "description": "Получение проекта задач по её id",
        "operationId": "getTasksProjectsById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID проекта, который нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение проекта",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1"
                },
                "response": {
                  "id": 1,
                  "created_at": "2017-09-19 06:09:00",
                  "updated_at": "2017-09-19 06:09:00",
                  "name": "Общие задачи",
                  "description": "Это стандартный проект, куда попадают все задачи без назначенного проекта",
                  "group_id": 1,
                  "sort": 1
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Удаление проекта задач",
        "description": "Удаление проекта задач по её id",
        "operationId": "deleteTasksProjectsById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID проекта, который нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление проекта",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/project/{id}/status": {
      "get": {
        "tags": [
          "tasksProjects"
        ],
        "summary": "Получение списка статусов в проекте",
        "description": "Получение списка статусов в проекте по его id",
        "operationId": "getTasksProjectsStatusById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID проекта, статусы которого нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение проекта",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1"
                },
                "response": [
                  {
                    "id": 1,
                    "name": "Поставлена",
                    "description": "Задача ожидает выполнения",
                    "project_id": 1,
                    "sort": 1
                  },
                  {
                    "id": 2,
                    "name": "В работе",
                    "description": "Задача находится в процессе выполнения",
                    "project_id": 1,
                    "sort": 2
                  },
                  {
                    "id": 3,
                    "name": "Выполнена",
                    "description": "Задача выполнена",
                    "project_id": 1,
                    "sort": 3
                  }
                ]
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/status": {
      "post": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Добавление нового статуса",
        "description": "Добавление нового статуса",
        "operationId": "postTaskStatus",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "name",
                "description",
                "sort",
                "project_id"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название статуса",
                  "example": "В работе"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание статуса",
                  "example": "Все задачи в работе"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "project_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id проекта",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Статус успешно добавлен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "name": "Статус",
                  "description": "Тестовый статус",
                  "project_id": "5",
                  "sort": null
                },
                "response": {
                  "name": "Статус",
                  "description": "Тестовый статус",
                  "sort": 100,
                  "project_id": "5",
                  "id": 6
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Изменение существующего статуса",
        "description": "Изменение существующего статуса",
        "operationId": "putTaskStatus",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "sort",
                "project_id"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id статуса",
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Название статуса",
                  "example": "В работе"
                },
                "description": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Описание статуса",
                  "example": "Все задачи в работе"
                },
                "sort": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "Сортировка",
                  "example": 100
                },
                "project_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id проекта",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Статус успешно добавлен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": 6,
                  "name": "Статус",
                  "description": "Тестовый статус",
                  "project_id": "5",
                  "sort": null
                },
                "response": {
                  "name": "Статус",
                  "description": "Тестовый статус",
                  "sort": 100,
                  "project_id": "5",
                  "id": 6
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка изменения",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "get": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Получение списка статусов",
        "description": "Получение полного (запрос без параметров) или страничного списка статусов (запрос хотябы с параметром count)",
        "operationId": "getTasksStatus",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка групп",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": [
                  {
                    "id": 1,
                    "name": "Поставлена",
                    "description": "Задача ожидает выполнения",
                    "project_id": 1,
                    "sort": 1
                  },
                  {
                    "id": 2,
                    "name": "В работе",
                    "description": "Задача находится в процессе выполнения",
                    "project_id": 1,
                    "sort": 2
                  },
                  {
                    "id": 3,
                    "name": "Выполнена",
                    "description": "Задача выполнена",
                    "project_id": 1,
                    "sort": 3
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "count": "2"
                },
                "response": {
                  "total": 4,
                  "per_page": "2",
                  "current_page": 1,
                  "last_page": 2,
                  "next_page_url": "http://crm.lets-code.ru/api/tasks/status?page=2",
                  "prev_page_url": null,
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 1,
                      "name": "Поставлена",
                      "description": "Задача ожидает выполнения",
                      "project_id": 1,
                      "sort": 1
                    },
                    {
                      "id": 2,
                      "name": "В работе",
                      "description": "Задача находится в процессе выполнения",
                      "project_id": 1,
                      "sort": 2
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/status/{id}": {
      "get": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Получение статуса задач",
        "description": "Получение статуса задач по его id",
        "operationId": "getTasksStatusById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID статуса, который нужно получить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение проекта",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "id": "1"
                },
                "response": {
                  "id": 1,
                  "name": "Поставлена",
                  "description": "Задача ожидает выполнения",
                  "project_id": 1,
                  "sort": 1
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Удаление стататуса",
        "description": "Удаление статуса задач по её id",
        "operationId": "deleteTasksStatusById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID статуса, который нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление статуса",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/tasks/status/change": {
      "post": {
        "tags": [
          "tasksStatus"
        ],
        "summary": "Изменение статуса у задачи",
        "description": "Изменяет статус задачи на переданный",
        "operationId": "postTaskStatusChange",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "task_id",
                "status_id"
              ],
              "properties": {
                "task_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id задачи, у которой нужно изменить статус",
                  "example": 1
                },
                "status_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "id статуса, который нужно установить",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Статус задачи успешно изменён",
            "examples": {
              "Пример": null
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Получение списка комментариев",
        "description": "Получение полного (запрос без параметров) или страничного списка задач (запрос хотябы с параметром count) Список комментариев конкретной сущности можно получит так: '?filter=[[\"entity_id\",\"=\",\"11\"], \"and\", [\"entity\",\"=\",\"task\"]]'",
        "operationId": "getComments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "count",
            "in": "query",
            "description": "Количество записей на странице в постраничной навигации",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Поле для сортировки (одно из полей бд)",
            "type": "string"
          },
          {
            "name": "order_type",
            "in": "query",
            "description": "Направление сортировки (asc/desc)",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Массив с правилами фильтрации выборки",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное получение списка комментариев",
            "examples": {
              "Без постраничной навигации": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": [],
                "response": [
                  {
                    "id": 1,
                    "user_id": 4,
                    "text": "тестовый комментарий 3",
                    "entity": "task",
                    "entity_id": 10,
                    "module_id": 8,
                    "created_at": "2017-11-06 07:12:37",
                    "updated_at": "2017-11-06 07:12:37"
                  },
                  {
                    "id": 2,
                    "user_id": 4,
                    "text": "тестовый комментарий 3",
                    "entity": "task",
                    "entity_id": 11,
                    "module_id": 8,
                    "created_at": "2017-11-06 07:50:36",
                    "updated_at": "2017-11-06 07:50:36"
                  }
                ]
              },
              "С постраничной навигацией": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "count": "2"
                },
                "response": {
                  "total": 6,
                  "per_page": "2",
                  "current_page": 1,
                  "last_page": 3,
                  "next_page_url": "http://crm.lets-code.ru/api/comments?page=2",
                  "prev_page_url": null,
                  "from": 1,
                  "to": 2,
                  "data": [
                    {
                      "id": 1,
                      "user_id": 4,
                      "text": "тестовый комментарий 3",
                      "entity": "task",
                      "entity_id": 10,
                      "module_id": 8,
                      "created_at": "2017-11-06 07:12:37",
                      "updated_at": "2017-11-06 07:12:37"
                    },
                    {
                      "id": 2,
                      "user_id": 4,
                      "text": "тестовый комментарий 3",
                      "entity": "task",
                      "entity_id": 11,
                      "module_id": 8,
                      "created_at": "2017-11-06 07:50:36",
                      "updated_at": "2017-11-06 07:50:36"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Добавление нового комментария",
        "description": "Добавление нового комментария",
        "operationId": "postComments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "text",
                "entity",
                "entity_id",
                "module_code",
                "file[]"
              ],
              "properties": {
                "text": {
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Текст комментария",
                  "example": "Задачу сделал, можно закрывать"
                },
                "entity": {
                  "type": "string",
                  "description": "Сущность, к которой относится комментарий (task, user и тд)",
                  "example": "task"
                },
                "entity_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "ID сущности, которую пользователь комментирует",
                  "example": 2
                },
                "module_code": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Код модуля, в котором находится сущность",
                  "example": "tasks"
                },
                "file[]": {
                  "type": "string",
                  "description": "Файл - приложение к комментарию"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Комментарий успешно добавлен",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "text": "Задачу сделал, можно закрывать",
                  "entity": "task",
                  "entity_id": "2",
                  "module_code": "tasks",
                  "file": null,
                  "module_id": 8,
                  "user_id": 4
                },
                "response": {
                  "text": "Задачу сделал, можно закрывать",
                  "entity": "task",
                  "entity_id": "2",
                  "module_id": 8,
                  "user_id": 4,
                  "updated_at": "2017-11-15 01:28:12",
                  "created_at": "2017-11-15 01:28:12",
                  "id": 4
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "Изменение комментария",
        "description": "Изменение существующего комментария. Для изменения нужно отправить POST запрос с параметром \"_method=PUT\". В противном случае изменение файлов не работает. (PUT не поддерживает формат form-data)",
        "operationId": "putComments",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Тело запроса",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "id",
                "text",
                "entity",
                "entity_id",
                "module_code",
                "file[]",
                "_method"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "ID комментария для изменения",
                  "example": 4
                },
                "text": {
                  "type": "string",
                  "maxLength": 5000,
                  "description": "Текст комментария",
                  "example": "Задачу сделал, можно закрывать"
                },
                "entity": {
                  "type": "string",
                  "description": "Сущность, к которой относится комментарий (task, user и тд)",
                  "example": "task"
                },
                "entity_id": {
                  "type": "integer",
                  "maxLength": 10,
                  "description": "ID сущности, которую пользователь комментирует",
                  "example": 2
                },
                "module_code": {
                  "type": "string",
                  "maxLength": 255,
                  "description": "Код модуля, в котором находится сущность",
                  "example": "tasks"
                },
                "file[]": {
                  "type": "string",
                  "description": "Файл - приложение к комментарию"
                },
                "_method": {
                  "type": "string",
                  "description": "Тип запроса, необходимо указать PUT",
                  "example": "PUT"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Комментарий успешно изменён",
            "examples": {
              "Пример": {
                "success": true,
                "status": 200,
                "errors": {
                  "messages": "",
                  "errors": ""
                },
                "request": {
                  "text": "Задачу сделал, можно закрывать, комментарии дам позже",
                  "entity": "task",
                  "entity_id": "2",
                  "module_code": "tasks",
                  "file": null,
                  "module_id": 8,
                  "user_id": 4
                },
                "response": {
                  "id": 4,
                  "updated_at": "2017-11-15 01:28:12",
                  "created_at": "2017-11-15 01:28:12",
                  "user_id": 4,
                  "text": "Задачу сделал, можно закрывать, комментарии дам позже",
                  "entity": "task",
                  "entity_id": "2",
                  "module_id": 8
                }
              }
            }
          },
          "400": {
            "description": "Не верный формат одного из полей (отслеживается по полю 'errors')",
            "schema": {
              "$ref": "#/definitions/ValidatorResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          },
          "500": {
            "description": "Ошибка добавления",
            "schema": {
              "$ref": "#/definitions/500Response"
            }
          }
        }
      }
    },
    "/comments/{id}": {
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Удаление комментария",
        "description": "Удаление комментария по его id",
        "operationId": "deleteCommentById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID комментария, который нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    },
    "/comments/{id}/file/{file_id}": {
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Удаление файла у комментария",
        "description": "Удаление файла у комментария по их id",
        "operationId": "deleteCommentFileById",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "crm_auth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID комментария, у которого удаляется файл",
            "type": "integer"
          },
          {
            "in": "path",
            "name": "file_id",
            "required": true,
            "description": "ID файла, который нужно удалить",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное удаление",
            "schema": {
              "$ref": "#/definitions/TrueResponse"
            }
          },
          "403": {
            "description": "У пользователя нет прав на выполнение действия",
            "schema": {
              "$ref": "#/definitions/403Response"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "crm_auth": {
      "description": "",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "login",
        "email",
        "password",
        "password_confirm"
      ],
      "properties": {
        "login": {
          "type": "string",
          "maxLength": 255,
          "description": "Логин пользователя",
          "example": "Yazu"
        },
        "email": {
          "type": "string",
          "maxLength": 255,
          "description": "Email пользователя",
          "example": "speed.live@mail.ru"
        },
        "password": {
          "type": "string",
          "maxLength": 255,
          "description": "Пароль пользователя",
          "example": "Bb103ecc"
        },
        "password_confirm": {
          "type": "string",
          "maxLength": 255,
          "description": "Подтверждение пароля",
          "example": "Bb103ecc"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Поле сортировки",
          "example": "100"
        }
      }
    },
    "Group": {
      "type": "object",
      "required": [
        "name",
        "description",
        "code"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Название группы",
          "example": "Администраторы"
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Описание группы",
          "example": "Могут производить любые действия"
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код группы",
          "example": "administrators"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Поле сортировки",
          "example": "100"
        }
      }
    },
    "Action": {
      "type": "object",
      "required": [
        "name",
        "description",
        "group_code",
        "module_code",
        "sort"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код действия должен начинаться с имени модуля и нижнего подчёркивания",
          "example": "module_activate_deactivate"
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Описание действия",
          "example": "Активирование и деактивация модулей"
        },
        "group_code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код группы пользователей, которой будет разрешено выполнять действие",
          "example": "administrators"
        },
        "module_code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код модуля, к которому относиться действие",
          "example": "module"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Поле сортировки",
          "example": "100"
        }
      }
    },
    "Module": {
      "type": "object",
      "required": [
        "code",
        "description",
        "sort",
        "active",
        "user_access",
        "load"
      ],
      "properties": {
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код модуля",
          "example": "module"
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Текстовое описание модуля",
          "example": "Главный модуль"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Поле сортировки",
          "example": "100"
        },
        "active": {
          "type": "boolean",
          "maxLength": 255,
          "description": "Указывает на активность модуля",
          "example": true
        },
        "user_access": {
          "type": "boolean",
          "maxLength": 255,
          "description": "Указывает, имеет ли доступ текущий пользователь к данному модулю",
          "example": true
        },
        "load": {
          "type": "boolean",
          "maxLength": 255,
          "description": "Указывает, успешно ли загрузился модуль (если false, значит есть ошибки и модуль работать не будетсес)",
          "example": true
        }
      }
    },
    "ModuleProp": {
      "type": "object",
      "required": [
        "module_name",
        "prop_code",
        "value",
        "multiply"
      ],
      "properties": {
        "module_name": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код модуля",
          "example": "module"
        },
        "prop_code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код свойства модуля",
          "example": "enable"
        },
        "value": {
          "type": "string",
          "maxLength": 2500,
          "description": "Значение свойства модуля",
          "example": true
        },
        "multiply": {
          "type": "boolean",
          "maxLength": 255,
          "description": "Указывает множественное свойство или нет",
          "example": true
        }
      }
    },
    "Property": {
      "type": "object",
      "required": [
        "name",
        "code",
        "sort",
        "module_code",
        "field_entity",
        "field_type",
        "multiply",
        "require",
        "active",
        "default"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Название свйоства",
          "example": "Аватар"
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код свйоства",
          "example": "avatar"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Сортировка",
          "example": 100
        },
        "module_code": {
          "type": "string",
          "maxLength": 255,
          "description": "cимвольный код модуля",
          "example": "user"
        },
        "field_entity": {
          "type": "string",
          "maxLength": 255,
          "description": "Сущность свойства",
          "example": "users"
        },
        "field_type": {
          "type": "string",
          "maxLength": 255,
          "description": "Тип сущности",
          "example": "file"
        },
        "multiply": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство множественным",
          "example": 1
        },
        "require": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство обязательным",
          "example": 1
        },
        "active": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство активным",
          "example": 1
        },
        "default": {
          "type": "boolean",
          "maxLength": 1,
          "description": "Является ли поле стандартным",
          "example": 0
        }
      }
    },
    "PropertyValue": {
      "type": "object",
      "required": [
        "property_id",
        "entity_id",
        "code",
        "value"
      ],
      "properties": {
        "property_id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID свойства",
          "example": 3
        },
        "entity_id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID сущности",
          "example": 2
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код значения",
          "example": "male"
        },
        "value": {
          "type": "string",
          "maxLength": 5000,
          "description": "Значение свойства",
          "example": "Мужской"
        }
      }
    },
    "putPropertyValue": {
      "type": "object",
      "required": [
        "id",
        "property_id",
        "entity_id",
        "code",
        "value"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID значения, которое нудно изменить",
          "example": 5
        },
        "property_id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID свойства",
          "example": 3
        },
        "entity_id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID сущности",
          "example": 2
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код значения",
          "example": "male"
        },
        "value": {
          "type": "string",
          "maxLength": 5000,
          "description": "Значение свойства",
          "example": "Мужской"
        }
      }
    },
    "Choices": {
      "type": "object",
      "required": [
        "name",
        "code",
        "sort",
        "property_id"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Название значения",
          "example": "Женщина"
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код значения",
          "example": "female"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Сортировка",
          "example": 100
        },
        "property_id": {
          "type": "integer",
          "maxLength": 255,
          "description": "ID свйоства выбора",
          "example": 2
        }
      }
    },
    "putChoices": {
      "type": "object",
      "required": [
        "id",
        "name",
        "code",
        "sort",
        "property_id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "maxLength": 10,
          "description": "id значения, котрое нужно изменить",
          "example": 3
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Название значения",
          "example": "Женщина"
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код значения",
          "example": "female"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Сортировка",
          "example": 100
        },
        "property_id": {
          "type": "integer",
          "maxLength": 255,
          "description": "ID свйоства выбора",
          "example": 2
        }
      }
    },
    "putProperty": {
      "type": "object",
      "required": [
        "id",
        "name",
        "code",
        "sort",
        "module_code",
        "field_entity",
        "field_type",
        "multiply",
        "require",
        "active",
        "default"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "maxLength": 10,
          "description": "ID записи для изменения",
          "example": 2
        },
        "name": {
          "type": "string",
          "maxLength": 255,
          "description": "Название свйоства",
          "example": "Аватар"
        },
        "code": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код свйоства",
          "example": "avatar"
        },
        "sort": {
          "type": "integer",
          "maxLength": 10,
          "description": "Сортировка",
          "example": 100
        },
        "module_code": {
          "type": "string",
          "maxLength": 255,
          "description": "cимвольный код модуля",
          "example": "user"
        },
        "field_entity": {
          "type": "string",
          "maxLength": 255,
          "description": "Сущность свойства",
          "example": "users"
        },
        "field_type": {
          "type": "string",
          "maxLength": 255,
          "description": "Тип сущности",
          "example": "file"
        },
        "multiply": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство множественным",
          "example": 1
        },
        "require": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство обязательным",
          "example": 1
        },
        "active": {
          "type": "boolean",
          "maxLength": 10,
          "description": "Является ли свойство активным",
          "example": 1
        },
        "default": {
          "type": "boolean",
          "maxLength": 1,
          "description": "Является ли поле стандартным",
          "example": 0
        }
      }
    },
    "Login": {
      "type": "object",
      "required": [
        "login",
        "password",
        "login_auth"
      ],
      "properties": {
        "login": {
          "type": "string",
          "maxLength": 255,
          "description": "Логин или email пользователя (контролируется параметром login_auth)",
          "example": "Yazu"
        },
        "password": {
          "type": "string",
          "maxLength": 255,
          "description": "Пароль пользователя",
          "example": "Bb103ecc"
        },
        "login_auth": {
          "type": "boolean",
          "maxLength": 4,
          "description": "true - если нужна авторизация по логину, false - если по email",
          "example": true
        }
      }
    },
    "Log": {
      "type": "object",
      "required": [
        "id",
        "user_ip",
        "user_id",
        "module_id",
        "log_type",
        "log_action",
        "description",
        "created_at",
        "updated_at"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "maxLength": 11,
          "description": "ID записи в логе",
          "example": 5
        },
        "user_ip": {
          "type": "string",
          "maxLength": 255,
          "description": "ip адрес пользователя",
          "example": "182.932.839.12"
        },
        "user_id": {
          "type": "integer",
          "maxLength": 11,
          "description": "ID пользователя, сделавшего запись",
          "example": 4
        },
        "module_id": {
          "type": "integer",
          "maxLength": 11,
          "description": "ID модуля, в коротом произошло действие",
          "example": 3
        },
        "log_type": {
          "type": "string",
          "maxLength": 255,
          "description": "Тип записи (system/user), указывает какого типа действие произошло",
          "example": "system"
        },
        "log_action": {
          "type": "string",
          "maxLength": 255,
          "description": "Символьный код действия, которое произошло",
          "example": "user_addusers"
        },
        "description": {
          "type": "string",
          "maxLength": 255,
          "description": "Комментарий действия",
          "example": "Пользователь Admin добавил пользователя Yazu"
        },
        "created_at": {
          "type": "string",
          "maxLength": 255,
          "description": "Дата создания записи",
          "example": "2017-08-16 00:00:00"
        },
        "updated_at": {
          "type": "string",
          "maxLength": 255,
          "description": "Дата изменения записи",
          "example": "2017-08-16 00:00:00"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "true"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "200"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "description": "Описание ошибки"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки"
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "object",
          "description": "Массив/объект/строка с ответом сервера",
          "example": true
        }
      }
    },
    "TrueResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "true"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "200"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": ""
            },
            "errors": {
              "type": "string",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Положительный ответ сервера",
          "example": true
        }
      }
    },
    "403Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "403"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "The current user does not have sufficient rights to do this action"
            },
            "errors": {
              "type": "string",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": false
        }
      }
    },
    "401Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "403"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "IP address is compromised!/Bad access token"
            },
            "errors": {
              "type": "string",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": false
        }
      }
    },
    "404Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "404"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "Not found"
            },
            "errors": {
              "type": "string",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": []
        }
      }
    },
    "500Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "500"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "Something went wrong"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": false
        }
      }
    },
    "400Response": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "400"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "Current error text"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки",
              "example": ""
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": false
        }
      }
    },
    "ValidatorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "false"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "400"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "example": "The given data failed to pass validation."
            },
            "errors": {
              "type": "array",
              "description": "Массив с ошибками валидации",
              "example": [
                "validation.unique",
                "validation.alpha_dash",
                "validation.required",
                "validation.max:255",
                "validation.same:password",
                "validation.integer"
              ],
              "items": {
                "type": "object"
              }
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "boolean",
          "description": "Отрицательный ответ сервера",
          "example": false
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "true"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "200"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "description": "Описание ошибки"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки"
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "object",
          "description": "Массив/объект/строка с ответом сервера",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID авторизированого пользователя",
              "example": 4
            },
            "created_at": {
              "type": "string",
              "description": "Дата и время регистрации пользователя",
              "format": "datetime",
              "example": "2017-07-19 01:44:26"
            },
            "updated_at": {
              "type": "string",
              "description": "Дата и время последнего обновления данных пользователя",
              "format": "datetime",
              "example": "2017-07-19 01:44:26"
            },
            "login": {
              "type": "string",
              "description": "Логин пользователя",
              "example": "yazu"
            },
            "email": {
              "type": "string",
              "description": "Email пользователя",
              "example": "speed.live@mail.ru"
            },
            "password": {
              "type": "string",
              "description": "Пароль от аккаунта пользователя в зашифрованном виде",
              "example": "$2y$10$cRw8XsjY25gjIGnpWNu8UOBLfLrBCy3Cll58wasW2TjTv"
            },
            "sort": {
              "type": "integer",
              "description": "Сортировка в списке пользователей",
              "example": 100
            },
            "token_data": {
              "type": "object",
              "description": "Данные токена",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Токен",
                  "example": "dl8rza0uy28swgk4wocoss44g8wk0gw"
                },
                "refresh_token": {
                  "type": "string",
                  "description": "Refresh токен для обновления основного",
                  "example": "gllpq7d25xc0wows48okkc404k4wwso"
                }
              }
            }
          }
        }
      }
    },
    "LogoutResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "true"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "200"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "description": "Описание ошибки"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки"
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "object",
          "description": "Массив/объект/строка с ответом сервера",
          "properties": {
            "auth": {
              "type": "boolean",
              "description": "false в случе успешного выхода из системы",
              "example": false
            },
            "redirect_url": {
              "type": "string",
              "description": "URL для редиректа пользователя",
              "example": "/"
            }
          }
        }
      }
    },
    "RegreshTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "true - если запрос успешен, false - если нет",
          "enum": [
            "true",
            "false"
          ],
          "example": "true"
        },
        "status": {
          "type": "integer",
          "description": "Статус ответа (200/404/500/403 и т.д.)",
          "example": "200"
        },
        "errors": {
          "type": "object",
          "description": "Массив с полями messages и errors",
          "properties": {
            "messages": {
              "type": "string",
              "description": "Описание ошибки"
            },
            "errors": {
              "type": "string",
              "description": "Текст ошибки"
            }
          }
        },
        "request": {
          "type": "object",
          "description": "Массив с параметрами запроса от клиента"
        },
        "response": {
          "type": "object",
          "description": "Массив/объект/строка с ответом сервера",
          "properties": {
            "token": {
              "type": "string",
              "description": "Токен",
              "example": "dl8rza0uy28swgk4wocoss44g8wk0gw"
            },
            "refresh_token": {
              "type": "string",
              "description": "Refresh токен для обновления основного",
              "example": "gllpq7d25xc0wows48okkc404k4wwso"
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}